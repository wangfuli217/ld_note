1. 驱动是写给操作系统的代码，它不是直接给用户层程序调用的，而是给系统调用的
2. 所以驱动要向系统注册。
3. 注册的时候，要求驱动必须符合一定的规范，否则系统就会不认识。这就是程序架构。
4. 字符设备驱动对应一个cdev 结构， 需要向系统注册或申请设备号，注册cdev设备，
   完成cdev 设备需要的操作，诸如读，写，ioctl操作等。
5. 系统下驱动以模块的形式而存在
6. 用户空间验证，需要先建立设备节点

例如 mknod /dev/gpio c 126 0  将创建/dev/gpio 节点， 主设备号126，从设备号0
    然后用 echo 'a' >/dev/gpio 查看写入
          cat /dev/gpio       查看读出。
    你也可以书些标准的文件访问来测试 /dev/gpio, 这里从略。
这个126 如果是系统申请的，则是动态的，你需要用cat /proc/devices 去查询系统给你的驱动分配了什么设备号。
然后再创建设备结点。
如果启用了sysfs, 则在 /sys/module/gpio 目录下有相应的属性信息描述。
补充:
1。可以用cat /proc/devices | grep <设备名> 查看系统分配（或自己指定)的主设备号。
2. 当mknod 以后，可以用 ll /dev | grep <设备名> 查看设备的主设备号，从设备号




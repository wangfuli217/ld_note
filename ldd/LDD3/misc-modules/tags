!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ISA_BASE	silly.c	56;"	d	file:
ISA_MAX	silly.c	57;"	d	file:
JIT_ASYNC_LOOPS	jit.c	136;"	d	file:
JIT_BUSY	jit.c	/^	JIT_BUSY,$/;"	e	enum:jit_files	file:
JIT_QUEUE	jit.c	/^	JIT_QUEUE,$/;"	e	enum:jit_files	file:
JIT_SCHED	jit.c	/^	JIT_SCHED,$/;"	e	enum:jit_files	file:
JIT_SCHEDTO	jit.c	/^	JIT_SCHEDTO$/;"	e	enum:jit_files	file:
KERNELDIR	Makefile	/^    KERNELDIR ?= \/lib\/modules\/$(shell uname -r)\/build$/;"	m
LIMIT	jiq.c	45;"	d	file:
M_16	silly.c	/^enum silly_modes {M_8=0, M_16, M_32, M_memcpy};$/;"	e	enum:silly_modes	file:
M_32	silly.c	/^enum silly_modes {M_8=0, M_16, M_32, M_memcpy};$/;"	e	enum:silly_modes	file:
M_8	silly.c	/^enum silly_modes {M_8=0, M_16, M_32, M_memcpy};$/;"	e	enum:silly_modes	file:
M_memcpy	silly.c	/^enum silly_modes {M_8=0, M_16, M_32, M_memcpy};$/;"	e	enum:silly_modes	file:
PWD	Makefile	/^    PWD := $(shell pwd)$/;"	m
SCHEDULER_QUEUE	jiq.c	69;"	d	file:
VGA_BASE	silly.c	60;"	d	file:
VIDEO_MAX	silly.c	59;"	d	file:
buf	jiq.c	/^	char *buf;$/;"	m	struct:clientdata	file:
buf	jit.c	/^	unsigned char *buf;$/;"	m	struct:jit_data	file:
c	kdataalign.c	/^struct c   {char c;  char      t;} c;$/;"	m	struct:c	file:
c	kdataalign.c	/^struct c   {char c;  char      t;} c;$/;"	s	file:
c	kdataalign.c	/^struct c   {char c;  char      t;} c;$/;"	v	typeref:struct:c
c	kdataalign.c	/^struct i   {char c;  int       t;} i;$/;"	m	struct:i	file:
c	kdataalign.c	/^struct l   {char c;  long      t;} l;$/;"	m	struct:l	file:
c	kdataalign.c	/^struct ll  {char c;  long long t;} ll;$/;"	m	struct:ll	file:
c	kdataalign.c	/^struct p   {char c;  void *    t;} p;$/;"	m	struct:p	file:
c	kdataalign.c	/^struct s   {char c;  short     t;} s;$/;"	m	struct:s	file:
c	kdataalign.c	/^struct u1b {char c;  __u8      t;} u1b;$/;"	m	struct:u1b	file:
c	kdataalign.c	/^struct u2b {char c;  __u16     t;} u2b;$/;"	m	struct:u2b	file:
c	kdataalign.c	/^struct u4b {char c;  __u32     t;} u4b;$/;"	m	struct:u4b	file:
c	kdataalign.c	/^struct u8b {char c;  __u64     t;} u8b;$/;"	m	struct:u8b	file:
clientdata	jiq.c	/^static struct clientdata {$/;"	s	file:
comp	complete.c	/^DECLARE_COMPLETION(comp);$/;"	v
complete_cleanup	complete.c	/^module_exit(complete_cleanup);$/;"	v
complete_cleanup	complete.c	/^void complete_cleanup(void)$/;"	f
complete_fops	complete.c	/^struct file_operations complete_fops = {$/;"	v	typeref:struct:file_operations
complete_init	complete.c	/^int complete_init(void)$/;"	f
complete_init	complete.c	/^module_init(complete_init);$/;"	v
complete_major	complete.c	/^static int complete_major = 0;$/;"	v	file:
complete_read	complete.c	/^ssize_t complete_read (struct file *filp, char __user *buf, size_t count, loff_t *pos)$/;"	f
complete_write	complete.c	/^ssize_t complete_write (struct file *filp, const char __user *buf, size_t count,$/;"	f
ct_exit	seq.c	/^module_exit(ct_exit);$/;"	v
ct_exit	seq.c	/^static void ct_exit(void)$/;"	f	file:
ct_file_ops	seq.c	/^static struct file_operations ct_file_ops = {$/;"	v	typeref:struct:file_operations	file:
ct_init	seq.c	/^module_init(ct_init);$/;"	v
ct_init	seq.c	/^static int ct_init(void)$/;"	f	file:
ct_open	seq.c	/^static int ct_open(struct inode *inode, struct file *file)$/;"	f	file:
ct_seq_next	seq.c	/^static void *ct_seq_next(struct seq_file *s, void *v, loff_t *pos)$/;"	f	file:
ct_seq_ops	seq.c	/^static struct seq_operations ct_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
ct_seq_show	seq.c	/^static int ct_seq_show(struct seq_file *s, void *v)$/;"	f	file:
ct_seq_start	seq.c	/^static void *ct_seq_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
ct_seq_stop	seq.c	/^static void ct_seq_stop(struct seq_file *s, void *v)$/;"	f	file:
data_cleanup	kdataalign.c	/^module_exit(data_cleanup);$/;"	v
data_cleanup	kdataalign.c	/^static void data_cleanup(void)$/;"	f	file:
data_cleanup	kdatasize.c	/^module_exit(data_cleanup);$/;"	v
data_cleanup	kdatasize.c	/^static void data_cleanup(void)$/;"	f	file:
data_init	kdataalign.c	/^module_init(data_init);$/;"	v
data_init	kdataalign.c	/^static int data_init(void)$/;"	f	file:
data_init	kdatasize.c	/^int data_init(void)$/;"	f
data_init	kdatasize.c	/^module_init(data_init);$/;"	v
delay	jiq.c	/^	long delay;$/;"	m	struct:clientdata	file:
delay	jiq.c	/^static long delay = 1;$/;"	v	file:
delay	jit.c	/^int delay = HZ; \/* the default delay, expressed in jiffies *\/$/;"	v
faulty_cleanup	faulty.c	/^module_exit(faulty_cleanup);$/;"	v
faulty_cleanup	faulty.c	/^void faulty_cleanup(void)$/;"	f
faulty_fops	faulty.c	/^struct file_operations faulty_fops = {$/;"	v	typeref:struct:file_operations
faulty_init	faulty.c	/^int faulty_init(void)$/;"	f
faulty_init	faulty.c	/^module_init(faulty_init);$/;"	v
faulty_major	faulty.c	/^int faulty_major = 0;$/;"	v
faulty_read	faulty.c	/^ssize_t faulty_read(struct file *filp, char __user *buf,$/;"	f
faulty_write	faulty.c	/^ssize_t faulty_write (struct file *filp, const char __user *buf, size_t count,$/;"	f
flag	sleepy.c	/^static int flag = 0;$/;"	v	file:
hello_exit	hello.c	/^module_exit(hello_exit);$/;"	v
hello_exit	hello.c	/^static void hello_exit(void)$/;"	f	file:
hello_exit	hellop.c	/^module_exit(hello_exit);$/;"	v
hello_exit	hellop.c	/^static void hello_exit(void)$/;"	f	file:
hello_init	hello.c	/^module_init(hello_init);$/;"	v
hello_init	hello.c	/^static int hello_init(void)$/;"	f	file:
hello_init	hellop.c	/^module_init(hello_init);$/;"	v
hello_init	hellop.c	/^static int hello_init(void)$/;"	f	file:
hi	jit.c	/^	int hi; \/* tasklet or tasklet_hi *\/$/;"	m	struct:jit_data	file:
howmany	hellop.c	/^static int howmany = 1;$/;"	v	file:
i	kdataalign.c	/^struct i   {char c;  int       t;} i;$/;"	s	file:
i	kdataalign.c	/^struct i   {char c;  int       t;} i;$/;"	v	typeref:struct:i
io_base	silly.c	/^static void __iomem *io_base;$/;"	v	file:
jiffies	jiq.c	/^	unsigned long jiffies;$/;"	m	struct:clientdata	file:
jiq_cleanup	jiq.c	/^module_exit(jiq_cleanup);$/;"	v
jiq_cleanup	jiq.c	/^static void jiq_cleanup(void)$/;"	f	file:
jiq_data	jiq.c	/^} jiq_data;$/;"	v	typeref:struct:clientdata	file:
jiq_init	jiq.c	/^module_init(jiq_init);$/;"	v
jiq_init	jiq.c	/^static int jiq_init(void)$/;"	f	file:
jiq_print	jiq.c	/^static int jiq_print(void *ptr)$/;"	f	file:
jiq_print_tasklet	jiq.c	/^static void jiq_print_tasklet(unsigned long ptr)$/;"	f	file:
jiq_print_wq	jiq.c	/^static void jiq_print_wq(void *ptr)$/;"	f	file:
jiq_read_run_timer	jiq.c	/^static int jiq_read_run_timer(char *buf, char **start, off_t offset,$/;"	f	file:
jiq_read_tasklet	jiq.c	/^static int jiq_read_tasklet(char *buf, char **start, off_t offset, int len,$/;"	f	file:
jiq_read_wq	jiq.c	/^static int jiq_read_wq(char *buf, char **start, off_t offset,$/;"	f	file:
jiq_read_wq_delayed	jiq.c	/^static int jiq_read_wq_delayed(char *buf, char **start, off_t offset,$/;"	f	file:
jiq_timedout	jiq.c	/^static void jiq_timedout(unsigned long ptr)$/;"	f	file:
jiq_timer	jiq.c	/^static struct timer_list jiq_timer;$/;"	v	typeref:struct:timer_list	file:
jiq_work	jiq.c	/^static struct work_struct jiq_work;$/;"	v	typeref:struct:work_struct	file:
jit_cleanup	jit.c	/^module_exit(jit_cleanup);$/;"	v
jit_cleanup	jit.c	/^void __exit jit_cleanup(void)$/;"	f
jit_currentime	jit.c	/^int jit_currentime(char *buf, char **start, off_t offset,$/;"	f
jit_data	jit.c	/^struct jit_data {$/;"	s	file:
jit_files	jit.c	/^enum jit_files {$/;"	g	file:
jit_fn	jit.c	/^int jit_fn(char *buf, char **start, off_t offset,$/;"	f
jit_init	jit.c	/^int __init jit_init(void)$/;"	f
jit_init	jit.c	/^module_init(jit_init);$/;"	v
jit_tasklet	jit.c	/^int jit_tasklet(char *buf, char **start, off_t offset,$/;"	f
jit_tasklet_fn	jit.c	/^void jit_tasklet_fn(unsigned long arg)$/;"	f
jit_timer	jit.c	/^int jit_timer(char *buf, char **start, off_t offset,$/;"	f
jit_timer_fn	jit.c	/^void jit_timer_fn(unsigned long arg)$/;"	f
l	kdataalign.c	/^struct l   {char c;  long      t;} l;$/;"	s	file:
l	kdataalign.c	/^struct l   {char c;  long      t;} l;$/;"	v	typeref:struct:l
len	jiq.c	/^	int len;$/;"	m	struct:clientdata	file:
ll	kdataalign.c	/^struct ll  {char c;  long long t;} ll;$/;"	s	file:
ll	kdataalign.c	/^struct ll  {char c;  long long t;} ll;$/;"	v	typeref:struct:ll
loops	jit.c	/^	int loops;$/;"	m	struct:jit_data	file:
obj-m	Makefile	/^    obj-m := hello.o hellop.o seq.o jit.o jiq.o sleepy.o complete.o \\$/;"	m
p	kdataalign.c	/^struct p   {char c;  void *    t;} p;$/;"	s	file:
p	kdataalign.c	/^struct p   {char c;  void *    t;} p;$/;"	v	typeref:struct:p
prevjiffies	jit.c	/^	unsigned long prevjiffies;$/;"	m	struct:jit_data	file:
s	kdataalign.c	/^struct s   {char c;  short     t;} s;$/;"	s	file:
s	kdataalign.c	/^struct s   {char c;  short     t;} s;$/;"	v	typeref:struct:s
silly_cleanup	silly.c	/^module_exit(silly_cleanup);$/;"	v
silly_cleanup	silly.c	/^void silly_cleanup(void)$/;"	f
silly_fops	silly.c	/^struct file_operations silly_fops = {$/;"	v	typeref:struct:file_operations
silly_init	silly.c	/^int silly_init(void)$/;"	f
silly_init	silly.c	/^module_init(silly_init);$/;"	v
silly_major	silly.c	/^int silly_major = 0;$/;"	v
silly_modes	silly.c	/^enum silly_modes {M_8=0, M_16, M_32, M_memcpy};$/;"	g	file:
silly_open	silly.c	/^int silly_open(struct inode *inode, struct file *filp)$/;"	f
silly_poll	silly.c	/^unsigned int silly_poll(struct file *filp, poll_table *wait)$/;"	f
silly_read	silly.c	/^ssize_t silly_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)$/;"	f
silly_release	silly.c	/^int silly_release(struct inode *inode, struct file *filp)$/;"	f
silly_write	silly.c	/^ssize_t silly_write(struct file *filp, const char __user *buf, size_t count,$/;"	f
sleepy_cleanup	sleepy.c	/^module_exit(sleepy_cleanup);$/;"	v
sleepy_cleanup	sleepy.c	/^void sleepy_cleanup(void)$/;"	f
sleepy_fops	sleepy.c	/^struct file_operations sleepy_fops = {$/;"	v	typeref:struct:file_operations
sleepy_init	sleepy.c	/^int sleepy_init(void)$/;"	f
sleepy_init	sleepy.c	/^module_init(sleepy_init);$/;"	v
sleepy_major	sleepy.c	/^static int sleepy_major = 0;$/;"	v	file:
sleepy_read	sleepy.c	/^ssize_t sleepy_read (struct file *filp, char __user *buf, size_t count, loff_t *pos)$/;"	f
sleepy_write	sleepy.c	/^ssize_t sleepy_write (struct file *filp, const char __user *buf, size_t count,$/;"	f
t	kdataalign.c	/^struct c   {char c;  char      t;} c;$/;"	m	struct:c	file:
t	kdataalign.c	/^struct i   {char c;  int       t;} i;$/;"	m	struct:i	file:
t	kdataalign.c	/^struct l   {char c;  long      t;} l;$/;"	m	struct:l	file:
t	kdataalign.c	/^struct ll  {char c;  long long t;} ll;$/;"	m	struct:ll	file:
t	kdataalign.c	/^struct p   {char c;  void *    t;} p;$/;"	m	struct:p	file:
t	kdataalign.c	/^struct s   {char c;  short     t;} s;$/;"	m	struct:s	file:
t	kdataalign.c	/^struct u1b {char c;  __u8      t;} u1b;$/;"	m	struct:u1b	file:
t	kdataalign.c	/^struct u2b {char c;  __u16     t;} u2b;$/;"	m	struct:u2b	file:
t	kdataalign.c	/^struct u4b {char c;  __u32     t;} u4b;$/;"	m	struct:u4b	file:
t	kdataalign.c	/^struct u8b {char c;  __u64     t;} u8b;$/;"	m	struct:u8b	file:
tdelay	jit.c	/^int tdelay = 10;$/;"	v
timer	jit.c	/^	struct timer_list timer;$/;"	m	struct:jit_data	typeref:struct:jit_data::timer_list	file:
tlet	jit.c	/^	struct tasklet_struct tlet;$/;"	m	struct:jit_data	typeref:struct:jit_data::tasklet_struct	file:
u1b	kdataalign.c	/^struct u1b {char c;  __u8      t;} u1b;$/;"	s	file:
u1b	kdataalign.c	/^struct u1b {char c;  __u8      t;} u1b;$/;"	v	typeref:struct:u1b
u2b	kdataalign.c	/^struct u2b {char c;  __u16     t;} u2b;$/;"	s	file:
u2b	kdataalign.c	/^struct u2b {char c;  __u16     t;} u2b;$/;"	v	typeref:struct:u2b
u4b	kdataalign.c	/^struct u4b {char c;  __u32     t;} u4b;$/;"	s	file:
u4b	kdataalign.c	/^struct u4b {char c;  __u32     t;} u4b;$/;"	v	typeref:struct:u4b
u8b	kdataalign.c	/^struct u8b {char c;  __u64     t;} u8b;$/;"	s	file:
u8b	kdataalign.c	/^struct u8b {char c;  __u64     t;} u8b;$/;"	v	typeref:struct:u8b
wait	jit.c	/^	wait_queue_head_t wait;$/;"	m	struct:jit_data	file:
whom	hellop.c	/^static char *whom = "world";$/;"	v	file:

抽取不相关的子问题 -- 把一般代码与项目专有代码分开
  所谓工程学就是关于把大问题拆分成小问题再把这些问题的解决方案放回一起。
  积极的发现并抽取出不相关的子逻辑
    理解某个函数或者代码块高层次的目标
    对于每行代码确定它是否为目标而工作
    如果有很多代码行在解决 不相关的子问题，将它抽取到独立的函数中

  什么是"不相关"的子问题
    完全是自包含的，并不知道其他程序是如何使用它的
    纯工具的代码，例如操作字符串、使用哈希表以及读/写文件
    通用的代码库

  优化现有的接口
    永远不要安于使用不理想的接口
    创建自己的包装函数和隐藏接口的粗陋细节
    按需要重塑接口

  过犹不及
    更多的小函数意味着更多的东西需要关注
    不要为了抽取而抽取
    
    把一般代码与项目专有代码分开，其结果是，大部分代码都是一般代码。通过建立一个大组库和辅助函数来解决
  一般问题，剩下的只是让你的程序与众不同的核心部分。
    这个技巧有帮助的原因是它使程序员关注小而定义良好的问题，这些问题已经同项目的其他部分脱离。其结果是，
  对于这些子问题的解决方案倾向于更加完整和正确。你也可以在以后重用它们。
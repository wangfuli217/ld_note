处理Java之外有相当多的语言都运行在JVM中，而且其中有些与Java的差异大于JavaScript与Java的差异；之所以能在JVM
中运行其他语言，是因为Java语言和JVM耦合的非常松，两者之间只通过特定格式的类文件交互。

方式1
目标语言使用Java实现的解释器；解释器在JVM中运行，执行使用目标语言编写的程序。
方式2：目标语言提供编译器，把目标语言代码转换成类文件；编译得到的类文件直接在JVM中执行；
通常也会提供一些语言专用的运行功能。

Nashorn采用的是第二种方式，不过做了些改进，把编译器嵌入运行时，所以执行程序前绝不会先编译JavaScript源代码。
这意味着，不用专用为Nashorn编写的JavaScript代码也能轻易部署到这个平台上。

注意：Nashorn和很多其他运行在JVM中的语言有个区别，他没有实现任何解释器。Nashorn总是把JavaScript代码编译成JVM字节码，然后直接执行字节码。

jrunscript：是一个简单的脚本运行程序，执行.js格式的JavaScript文件
jrunscript my_script.js
jrunscript -l nashorn my_script.js


jjs：是一个功能完成的shell，既能运行脚本，也能作为交互式去读-求值-输出循环环境使用，用于探索Nashorn及其功能。

jjs> print("Hello World!");

Node.js
Avatar.js


read(0, "\33", 1)                       = 1
read(0, "[", 1)                         = 1
read(0, "A", 1)                         = 1


read(0, "\33", 1)                       = 1
read(0, "[", 1)                         = 1
read(0, "B", 1)                         = 1


read(0, "\33", 1)                       = 1
read(0, "[", 1)                         = 1
read(0, "C", 1)                         = 1

read(0, "\33", 1)                       = 1
read(0, "[", 1)                         = 1
read(0, "D", 1)                         = 1



"\33[6;0H\33[K"
首先, 两个 \33 是C语言的转义字符表示, 33是8进制, 也就是ASCII为27的那个字符,
这字符表示换码, 有的地方写作 ESC (见ASCII表)

当这个字符串用在 printf中的时候,
输出到屏幕表示对屏幕的控制, 比如改变背景或者文字颜色等.

这个格式和含义都是标准的终端的.
就上面的例子, 实际是两个控制命令:
ESC[6;0H 将光标移动到第6行的行首
ESC[K 清除从光标到行尾的内容

这个在Linux下有效. 在WINDOWS的控制台窗口是用Console Functions来控制屏幕属性.
参考 Linux终端ANSI控制码, VT100/ANSI 控制字符
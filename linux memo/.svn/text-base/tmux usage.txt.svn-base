一个tmux命令执行后启动一个tmux服务
一个tmux服务可以拥有多个session，一个session可以看作是tmux管理下的伪终端的一个集合
一个session可能会有多个window与之关联，每个window都是一个伪终端，会占据整个屏幕
一个window可以被分割成多个pane

tmux #开启tmux
tmux ls #列出会话 
tmux attach -t session #进入某个会话  
tmux -r 连接上次断开的session


系统操作	
? :列出所有快捷键；按q返回
d :脱离当前会话；这样可以暂时返回Shell界面，输入tmux attach能够重新进入之前的会话
D :选择要脱离的会话；在同时开启了多个会话时使用
Ctrl+z :挂起当前会话
r :强制重绘未脱离的会话
s :选择并切换会话；在同时开启了多个会话时使用
: :进入命令行模式；此时可以输入支持的命令，例如kill-server可以关闭服务器  ##show-options -g
[ :进入复制模式；此时的操作与vi/emacs相同，按q/Esc退出
~ :列出提示信息缓存；其中包含了之前tmux返回的各种提示信息


窗口操作
	
c :创建新窗口
& :关闭当前窗口
数字键 :切换至指定窗口
p :切换至上一窗口
n :切换至下一窗口
l :在前后两个窗口间互相切换
w :通过窗口列表切换窗口
, :重命名当前窗口；这样便于识别
. :修改当前窗口编号；相当于窗口重新排序
f :在所有窗口中查找指定文本

面板操作
	
” :将当前面板平分为上下两块
% :将当前面板平分为左右两块
x :关闭当前面板
! :将当前面板置于新窗口；即新建一个窗口，其中仅包含当前面板
Ctrl+方向键 :以1个单元格为单位移动边缘以调整当前面板大小
Alt+方向键 :以5个单元格为单位移动边缘以调整当前面板大小
Space :在预置的面板布局中循环切换；依次包括even-horizontal、even-vertical、main-horizontal、main-vertical、tiled
q :显示面板编号
o :在当前窗口中选择下一面板
方向键 :移动光标以选择面板
{ :向前置换当前面板
} :向后置换当前面板
Alt+o :逆时针旋转当前窗口的面板
Ctrl+o :顺时针旋转当前窗口的面板
Ctrl-b t 很酷的一个时钟。

##############tmux.conf 配置文件
------------------------------------------------------------------------------------------------------------------
#此类配置可以在命令行模式中输入show-options -g查询
set-option -g base-index 1 #窗口的初始序号；默认为0，这里设置为1
set-option -g display-time 5000 #提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000 #控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-option -g status-keys vi #操作状态栏时的默认键盘布局；可以设置为vi或emacs
set-option -g status-right "#(date +%H:%M' ')" #状态栏右方的内容；这里的设置将得到类似23:59的显示
set-option -g status-right-length 10 #状态栏右方的内容长度；建议把更多的空间留给状态栏左方（用于列出当前窗口）
set-option -g status-utf8 on 开启状态栏的UTF-8支持
#此类设置可以在命令行模式中输入show-window-options -g查询
set-window-option -g mode-keys vi #复制模式中的默认键盘布局；可以设置为vi或emacs
set-window-option -g utf8 on #开启窗口的UTF-8支持
#将激活控制台的快捷键由Ctrl+b修改为Ctrl+a
set-option -g prefix C-aunbind-key C-bbind-key C-a send-prefix
#添加自定义快捷键
bind-key z kill-session #按z结束当前会话；相当于进入命令行模式后输入kill-session
bind-key h select-layout even-horizontal #按h将当前面板布局切换为even-horizontal；相当于进入命令行模式后输入select-layout even-horizontal
bind-key v select-layout even-vertical #按v将当前面板布局切换为even-vertical；相当于进入命令行模式后输入select-layout even-vertical

setw -g mode-keys vi tmux中翻页复制时，用vim的快捷键。

##############tmux会话管理
------------------------------------------------------------------------------------------------------------------
Tmux Resurrect
Tmux Resurrect 能够备份 Tmux 会话的各种细节 ， 包括所有会话 、 窗口 、 窗格以及它们的顺序 ， 每个窗格的当前工作目录 ， 精确的窗格布局 ， 活动及替代的会话和窗口 ， 窗口聚焦 ， 活动窗格 ， 窗格中运行的程序等等 ， 非常贴心 。
要安装 Tmux Resurrect， 可执行 ：
% mkdir ~/.tmux
% cd ~/.tmux
% git clone https://github.com/tmux-plugins/tmux-resurrect.git
官方推荐通过 Tmux 插件管理器来安装 ， 如果你需要安装多个插件 ， 不妨自行尝试 。 然后在 ~/.tmux.conf 中添加下列内容 ：
% run-shell ~/.tmux/tmux-resurrect/resurrect.tmux
保存后 ， 重载 Tmux 配置 ：
% tmux source-file ~/.tmux.conf
现在 ， 要保存 Tmux 会话 ， 我们只要按 前缀键 + Ctrl-s 就可以了 。 此时 ，Tmux 状态栏会显示 “Saving ...” 字样 ， 完毕后会提示 Tmux 环境已保存 。
Tmux Resurrect 会将 Tmux 会话的详细信息以文本文件形式保存到 ~/.tmux/resurrect 目录 。
还原则按 前缀键 + Ctrl-r 即可 。
Tmux Continuum
Tmux Resurrect 工作很好 ， 只是备份和还原都是手动完成 。 而 Tmux Continuum 更进一步 ， 它将 Tmux 会话的保存及还原自动化 ， 定时备份 ， 然后在 Tmux 启动时还原 。
Tmux Continuum 的安装方法与 Tmux Resurrect 类似 ：
cd ~/.tmux
git clone https://github.com/tmux-plugins/tmux-continuum.git
接着 ， 将以下内容添加到 ~/.tmux.conf：
run-shell ~/.tmux/tmux-continuum/continuum.tmux
Tmux Continuum 默认每隔 15 分钟备份一次 ， 如果你觉得频率过高 ， 可以设置为 1 小时一次 ：
set -g @continuum-save-interval '60'
同样 ， 需要重载 Tmux 配置 tmux source-file ~/.tmux.conf。
需要注意的是 ， 使用这两个 Tmux 插件要求 Tmux 是 1.9 及以上版本 ， 如果不符合要求 ， 赶紧升级吧 ， 相信你会觉得这会非常值得 。
整体感觉：ACE太庞大，asio 太赶时髦。

ACE太过庞大，使得你即便是只使用它的一小部分，也不得不引用它的全部。而且框架一大堆，模式一个加一个，很多编程习惯也要改变。学习曲线太陡，也难以将它作为一个模块集成自己的应用。

asio呢，有个牛大大说它是现时代的ACE，我觉得比较中肯。用bind做回调也并不比虚函数好，看上去灵活了，代价却更高了。我说的不光是运行时的内存和时间代价，更重要的编译时间难以忍受。

apr大约只是一个平台无关的api封装，相对来说比较轻量级。Apache Portable Runtime (APR)

libevent就更轻量级了，轻量级到无法把它当成一个平台无关的socket，还要写很多平台相关的代码。

相比而下，我觉得apr还好点，其实我需要的只是一个机制，而不是一个完整的策略，这是unix的哲学。如果仅就异步通讯来说，我觉得linux.epoll是最好的，简单、直接、有效，如果在每个平台上都有epoll可用，所有其它封装在我看来都是多余的了。

proactor真的就比reactor高效吗？它更多的是一种策略，据说Windows的操作系统级IOCP是用线程池实现的，它能高效到哪里去？
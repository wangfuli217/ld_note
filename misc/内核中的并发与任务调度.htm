<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="001_files/filelist.xml">
<title>内核中的并发与任务调度</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="chmetcnv" downloadurl=""/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="chsdate" downloadurl=""/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>LUO HUIHUI</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>W7786C</o:LastAuthor>
  <o:Revision>27</o:Revision>
  <o:TotalTime>187</o:TotalTime>
  <o:LastPrinted>2003-11-10T07:23:00Z</o:LastPrinted>
  <o:Created>2004-01-14T02:35:00Z</o:Created>
  <o:LastSaved>2006-04-13T08:30:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1295</o:Words>
  <o:Characters>7387</o:Characters>
  <o:Company>Microsoft</o:Company>
  <o:Lines>61</o:Lines>
  <o:Paragraphs>17</o:Paragraphs>
  <o:CharactersWithSpaces>8665</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>TextFit</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>0 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--p.MSONORMALINDENT
	{mso-char-indent-size:10.5pt;}
li.MSONORMALINDENT
	{mso-char-indent-size:10.5pt;}
div.MSONORMALINDENT
	{mso-char-indent-size:10.5pt;}
p.MSOTOF
	{mso-char-indent-size:10.5pt;}
li.MSOTOF
	{mso-char-indent-size:10.5pt;}
div.MSOTOF
	{mso-char-indent-size:10.5pt;}
p.MSOLIST
	{mso-char-indent-size:5pt;}
li.MSOLIST
	{mso-char-indent-size:5pt;}
div.MSOLIST
	{mso-char-indent-size:5pt;}
p.MSOLISTBULLET
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER
	{mso-char-indent-size:9pt;}
p.MSOLIST2
	{mso-char-indent-size:5pt;}
li.MSOLIST2
	{mso-char-indent-size:5pt;}
div.MSOLIST2
	{mso-char-indent-size:5pt;}
p.MSOLIST3
	{mso-char-indent-size:5pt;}
li.MSOLIST3
	{mso-char-indent-size:5pt;}
div.MSOLIST3
	{mso-char-indent-size:5pt;}
p.MSOLIST4
	{mso-char-indent-size:5pt;}
li.MSOLIST4
	{mso-char-indent-size:5pt;}
div.MSOLIST4
	{mso-char-indent-size:5pt;}
p.MSOLIST5
	{mso-char-indent-size:5pt;}
li.MSOLIST5
	{mso-char-indent-size:5pt;}
div.MSOLIST5
	{mso-char-indent-size:5pt;}
p.MSOLISTBULLET2
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET2
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET2
	{mso-char-indent-size:9pt;}
p.MSOLISTBULLET3
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET3
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET3
	{mso-char-indent-size:9pt;}
p.MSOLISTBULLET4
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET4
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET4
	{mso-char-indent-size:9pt;}
p.MSOLISTBULLET5
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET5
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET5
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER2
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER2
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER2
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER3
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER3
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER3
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER4
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER4
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER4
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER5
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER5
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER5
	{mso-char-indent-size:9pt;}
p.MSOBODYTEXTINDENT
	{mso-char-indent-size:10.5pt;}
li.MSOBODYTEXTINDENT
	{mso-char-indent-size:10.5pt;}
div.MSOBODYTEXTINDENT
	{mso-char-indent-size:10.5pt;}
p.MSOMESSAGEHEADER
	{mso-char-indent-size:10.8pt;}
li.MSOMESSAGEHEADER
	{mso-char-indent-size:10.8pt;}
div.MSOMESSAGEHEADER
	{mso-char-indent-size:10.8pt;}
p.MSOBODYTEXTFIRSTINDENT
	{mso-char-indent-size:21pt;}
li.MSOBODYTEXTFIRSTINDENT
	{mso-char-indent-size:21pt;}
div.MSOBODYTEXTFIRSTINDENT
	{mso-char-indent-size:21pt;}
p.MSOBODYTEXTFIRSTINDENT2
	{mso-char-indent-size:5.25pt;}
li.MSOBODYTEXTFIRSTINDENT2
	{mso-char-indent-size:5.25pt;}
div.MSOBODYTEXTFIRSTINDENT2
	{mso-char-indent-size:5.25pt;}
@list L0:level1
	{mso-char-indent-size:9pt;}
@list L1:level1
	{mso-char-indent-size:9pt;}
@list L2:level1
	{mso-char-indent-size:9pt;}
@list L3:level1
	{mso-char-indent-size:9pt;}
@list L4:level1
	{mso-char-indent-size:9pt;}
@list L5:level1
	{mso-char-indent-size:9pt;}
@list L6:level1
	{mso-char-indent-size:9pt;}
@list L7:level1
	{mso-char-indent-size:9pt;}
@list L8:level1
	{mso-char-indent-size:9pt;}
@list L9:level1
	{mso-char-indent-size:9pt;}
p.MSONORMALINDENT
	{mso-char-indent-size:10.5pt;}
li.MSONORMALINDENT
	{mso-char-indent-size:10.5pt;}
div.MSONORMALINDENT
	{mso-char-indent-size:10.5pt;}
p.MSOTOF
	{mso-char-indent-size:10.5pt;}
li.MSOTOF
	{mso-char-indent-size:10.5pt;}
div.MSOTOF
	{mso-char-indent-size:10.5pt;}
p.MSOLIST
	{mso-char-indent-size:5pt;}
li.MSOLIST
	{mso-char-indent-size:5pt;}
div.MSOLIST
	{mso-char-indent-size:5pt;}
p.MSOLISTBULLET
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER
	{mso-char-indent-size:9pt;}
p.MSOLIST2
	{mso-char-indent-size:5pt;}
li.MSOLIST2
	{mso-char-indent-size:5pt;}
div.MSOLIST2
	{mso-char-indent-size:5pt;}
p.MSOLIST3
	{mso-char-indent-size:5pt;}
li.MSOLIST3
	{mso-char-indent-size:5pt;}
div.MSOLIST3
	{mso-char-indent-size:5pt;}
p.MSOLIST4
	{mso-char-indent-size:5pt;}
li.MSOLIST4
	{mso-char-indent-size:5pt;}
div.MSOLIST4
	{mso-char-indent-size:5pt;}
p.MSOLIST5
	{mso-char-indent-size:5pt;}
li.MSOLIST5
	{mso-char-indent-size:5pt;}
div.MSOLIST5
	{mso-char-indent-size:5pt;}
p.MSOLISTBULLET2
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET2
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET2
	{mso-char-indent-size:9pt;}
p.MSOLISTBULLET3
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET3
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET3
	{mso-char-indent-size:9pt;}
p.MSOLISTBULLET4
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET4
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET4
	{mso-char-indent-size:9pt;}
p.MSOLISTBULLET5
	{mso-char-indent-size:9pt;}
li.MSOLISTBULLET5
	{mso-char-indent-size:9pt;}
div.MSOLISTBULLET5
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER2
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER2
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER2
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER3
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER3
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER3
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER4
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER4
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER4
	{mso-char-indent-size:9pt;}
p.MSOLISTNUMBER5
	{mso-char-indent-size:9pt;}
li.MSOLISTNUMBER5
	{mso-char-indent-size:9pt;}
div.MSOLISTNUMBER5
	{mso-char-indent-size:9pt;}
p.MSOBODYTEXTINDENT
	{mso-char-indent-size:10.5pt;}
li.MSOBODYTEXTINDENT
	{mso-char-indent-size:10.5pt;}
div.MSOBODYTEXTINDENT
	{mso-char-indent-size:10.5pt;}
p.MSOMESSAGEHEADER
	{mso-char-indent-size:10.8pt;}
li.MSOMESSAGEHEADER
	{mso-char-indent-size:10.8pt;}
div.MSOMESSAGEHEADER
	{mso-char-indent-size:10.8pt;}
p.MSOBODYTEXTFIRSTINDENT
	{mso-char-indent-size:21pt;}
li.MSOBODYTEXTFIRSTINDENT
	{mso-char-indent-size:21pt;}
div.MSOBODYTEXTFIRSTINDENT
	{mso-char-indent-size:21pt;}
p.MSOBODYTEXTFIRSTINDENT2
	{mso-char-indent-size:5.25pt;}
li.MSOBODYTEXTFIRSTINDENT2
	{mso-char-indent-size:5.25pt;}
div.MSOBODYTEXTFIRSTINDENT2
	{mso-char-indent-size:5.25pt;}
@list L0:level1
	{mso-char-indent-size:9pt;}
@list L1:level1
	{mso-char-indent-size:9pt;}
@list L2:level1
	{mso-char-indent-size:9pt;}
@list L3:level1
	{mso-char-indent-size:9pt;}
@list L4:level1
	{mso-char-indent-size:9pt;}
@list L5:level1
	{mso-char-indent-size:9pt;}
@list L6:level1
	{mso-char-indent-size:9pt;}
@list L7:level1
	{mso-char-indent-size:9pt;}
@list L8:level1
	{mso-char-indent-size:9pt;}
@list L9:level1
	{mso-char-indent-size:9pt;}

 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimHei;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:仿宋_GB2312;
	mso-font-alt:黑体;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@仿宋_GB2312";
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:华文宋体;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:647 135200768 16 0 262303 0;}
@font-face
	{font-family:"\@华文宋体";
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:647 135200768 16 0 262303 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
h1
	{mso-style-next:正文;
	margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:240%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:22.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:22.0pt;
	font-weight:bold;}
h2
	{mso-style-next:正文;
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:170%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-weight:bold;}
h3
	{mso-style-next:正文;
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:170%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:16.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-weight:bold;}
h4
	{mso-style-next:正文;
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:155%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:14.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-weight:bold;}
h5
	{mso-style-next:正文;
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:155%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:5;
	font-size:14.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-weight:bold;}
h6
	{mso-style-next:正文;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:130%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:6;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-weight:bold;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-next:正文;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:130%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:7;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;
	font-weight:bold;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-next:正文;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:130%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:8;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-next:正文;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:130%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:9;
	font-size:10.5pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
p.MsoIndex1, li.MsoIndex1, div.MsoIndex1
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex2, li.MsoIndex2, div.MsoIndex2
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex3, li.MsoIndex3, div.MsoIndex3
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:4.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex4, li.MsoIndex4, div.MsoIndex4
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:6.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex5, li.MsoIndex5, div.MsoIndex5
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:8.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex6, li.MsoIndex6, div.MsoIndex6
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:10.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex7, li.MsoIndex7, div.MsoIndex7
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:12.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex8, li.MsoIndex8, div.MsoIndex8
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:14.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndex9, li.MsoIndex9, div.MsoIndex9
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:16.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:4.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:6.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:8.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:10.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:12.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc8, li.MsoToc8, div.MsoToc8
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:14.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToc9, li.MsoToc9, div.MsoToc9
	{mso-style-update:auto;
	mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:16.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	mso-char-indent-count:2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:left;
	mso-pagination:none;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:left;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:none;
	tab-stops:center 207.65pt right 415.3pt;
	layout-grid-mode:char;
	border:none;
	mso-border-bottom-alt:solid windowtext .75pt;
	padding:0cm;
	mso-padding-alt:0cm 0cm 1.0pt 0cm;
	font-size:9.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:left;
	mso-pagination:none;
	tab-stops:center 207.65pt right 415.3pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoIndexHeading, li.MsoIndexHeading, div.MsoIndexHeading
	{mso-style-next:"索引 1";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;
	font-weight:bold;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{mso-style-next:正文;
	margin-top:7.6pt;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:黑体;
	mso-font-kerning:1.0pt;}
p.MsoTof, li.MsoTof, div.MsoTof
	{mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-21.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoEnvelopeAddress, li.MsoEnvelopeAddress, div.MsoEnvelopeAddress
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:14.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	layout-grid-mode:char;
	mso-element:frame;
	mso-element-frame-width:396.0pt;
	mso-element-frame-height:99.0pt;
	mso-element-frame-hspace:9.0pt;
	mso-element-wrap:auto;
	mso-element-anchor-horizontal:page;
	mso-element-left:center;
	mso-element-top:bottom;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoEnvelopeReturn, li.MsoEnvelopeReturn, div.MsoEnvelopeReturn
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	layout-grid-mode:char;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:left;
	mso-pagination:none;
	layout-grid-mode:char;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToa, li.MsoToa, div.MsoToa
	{mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoMacroText, li.MsoMacroText, div.MsoMacroText
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:left;
	mso-pagination:none;
	tab-stops:24.0pt 48.0pt 72.0pt 96.0pt 120.0pt 144.0pt 168.0pt 192.0pt 216.0pt;
	layout-grid-mode:char;
	punctuation-wrap:simple;
	text-autospace:none;
	mso-line-break-override:restrictions;
	font-size:12.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoToaHeading, li.MsoToaHeading, div.MsoToaHeading
	{mso-style-next:正文;
	margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoList, li.MsoList, div.MsoList
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:10.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListBullet, li.MsoListBullet, div.MsoListBullet
	{mso-style-update:auto;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:18.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l9 level1 lfo1;
	tab-stops:list 18.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListNumber, li.MsoListNumber, div.MsoListNumber
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:18.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l8 level1 lfo2;
	tab-stops:list 18.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoList2, li.MsoList2, div.MsoList2
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoList3, li.MsoList3, div.MsoList3
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:4.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoList4, li.MsoList4, div.MsoList4
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:6.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoList5, li.MsoList5, div.MsoList5
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:8.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-10.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListBullet2, li.MsoListBullet2, div.MsoListBullet2
	{mso-style-update:auto;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l7 level1 lfo3;
	tab-stops:list 39.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListBullet3, li.MsoListBullet3, div.MsoListBullet3
	{mso-style-update:auto;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:4.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l6 level1 lfo4;
	tab-stops:list 60.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListBullet4, li.MsoListBullet4, div.MsoListBullet4
	{mso-style-update:auto;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:6.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l5 level1 lfo5;
	tab-stops:list 81.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListBullet5, li.MsoListBullet5, div.MsoListBullet5
	{mso-style-update:auto;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:8.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l4 level1 lfo6;
	tab-stops:list 102.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListNumber2, li.MsoListNumber2, div.MsoListNumber2
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:2.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l3 level1 lfo7;
	tab-stops:list 39.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListNumber3, li.MsoListNumber3, div.MsoListNumber3
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:4.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l2 level1 lfo8;
	tab-stops:list 60.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListNumber4, li.MsoListNumber4, div.MsoListNumber4
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:6.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l1 level1 lfo9;
	tab-stops:list 81.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListNumber5, li.MsoListNumber5, div.MsoListNumber5
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:8.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	mso-pagination:none;
	mso-list:l0 level1 lfo10;
	tab-stops:list 102.0pt;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	mso-pagination:none;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;
	font-weight:bold;}
p.MsoClosing, li.MsoClosing, div.MsoClosing
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:21.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoSignature, li.MsoSignature, div.MsoSignature
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:21.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	mso-char-indent-count:2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListContinue, li.MsoListContinue, div.MsoListContinue
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:2.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListContinue2, li.MsoListContinue2, div.MsoListContinue2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:4.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListContinue3, li.MsoListContinue3, div.MsoListContinue3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:6.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListContinue4, li.MsoListContinue4, div.MsoListContinue4
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:8.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoListContinue5, li.MsoListContinue5, div.MsoListContinue5
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:10.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoMessageHeader, li.MsoMessageHeader, div.MsoMessageHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:5.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-54.0pt;
	mso-char-indent-count:-5.0;
	mso-pagination:none;
	background:#CCCCCC;
	mso-shading:windowtext;
	mso-pattern:gray-20 auto;
	border:none;
	mso-border-alt:solid windowtext .75pt;
	padding:0cm;
	mso-padding-alt:1.0pt 1.0pt 1.0pt 1.0pt;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:130%;
	mso-pagination:none;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:Arial;
	mso-fareast-font-family:宋体;
	mso-font-kerning:14.0pt;
	font-weight:bold;}
p.MsoSalutation, li.MsoSalutation, div.MsoSalutation
	{mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoDate, li.MsoDate, div.MsoDate
	{mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:0cm;
	mso-para-margin-left:25.0gd;
	mso-para-margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyTextFirstIndent, li.MsoBodyTextFirstIndent, div.MsoBodyTextFirstIndent
	{mso-style-parent:正文文字;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	mso-char-indent-count:1.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyTextFirstIndent2, li.MsoBodyTextFirstIndent2, div.MsoBodyTextFirstIndent2
	{mso-style-parent:正文文字缩进;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:2.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.5pt;
	mso-char-indent-count:2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoNoteHeading, li.MsoNoteHeading, div.MsoNoteHeading
	{mso-style-next:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:200%;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:8.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyTextIndent2, li.MsoBodyTextIndent2, div.MsoBodyTextIndent2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:2.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:200%;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:0cm;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:2.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:8.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoBlockText, li.MsoBlockText, div.MsoBlockText
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	mso-para-margin-top:0cm;
	mso-para-margin-right:7.0gd;
	mso-para-margin-bottom:6.0pt;
	mso-para-margin-left:7.0gd;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	background:navy;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:宋体;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";
	color:black;
	mso-font-kerning:1.0pt;}
p.MsoAutoSig, li.MsoAutoSig, div.MsoAutoSig
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
address
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-style:italic;}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
span.a
	{mso-style-name:"超链接\,超级链接";
	color:blue;
	text-decoration:underline;
	text-underline:single;}
p.a0, li.a0, div.a0
	{mso-style-name:正文;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.1, li.1, div.1
	{mso-style-name:"索引 1";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
p.a1, li.a1, div.a1
	{mso-style-name:正文文字缩进;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	text-align:left;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:宋体;
	mso-bidi-font-family:宋体;
	mso-font-kerning:0pt;}
p.a2, li.a2, div.a2
	{mso-style-name:正文文字;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	text-align:left;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:宋体;
	mso-bidi-font-family:宋体;
	mso-font-kerning:0pt;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:-132;
	mso-list-type:simple;
	mso-list-template-ids:-896643770;}
@list l0:level1
	{mso-level-tab-stop:102.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:8.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;}
@list l1
	{mso-list-id:-131;
	mso-list-type:simple;
	mso-list-template-ids:441499908;}
@list l1:level1
	{mso-level-tab-stop:81.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:6.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;}
@list l2
	{mso-list-id:-130;
	mso-list-type:simple;
	mso-list-template-ids:-776934048;}
@list l2:level1
	{mso-level-tab-stop:60.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:4.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;}
@list l3
	{mso-list-id:-129;
	mso-list-type:simple;
	mso-list-template-ids:21298440;}
@list l3:level1
	{mso-level-tab-stop:39.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:2.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;}
@list l4
	{mso-list-id:-128;
	mso-list-type:simple;
	mso-list-template-ids:-914462816;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:102.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:8.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	font-family:Wingdings;}
@list l5
	{mso-list-id:-127;
	mso-list-type:simple;
	mso-list-template-ids:-144118048;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:81.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:6.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	font-family:Wingdings;}
@list l6
	{mso-list-id:-126;
	mso-list-type:simple;
	mso-list-template-ids:1122277428;}
@list l6:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:60.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:4.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	font-family:Wingdings;}
@list l7
	{mso-list-id:-125;
	mso-list-type:simple;
	mso-list-template-ids:1578796324;}
@list l7:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:39.0pt;
	mso-level-number-position:left;
	margin-left:36.0pt;
	mso-para-margin-left:2.0gd;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	font-family:Wingdings;}
@list l8
	{mso-list-id:-120;
	mso-list-type:simple;
	mso-list-template-ids:378685840;}
@list l8:level1
	{mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;}
@list l9
	{mso-list-id:-119;
	mso-list-type:simple;
	mso-list-template-ids:108945292;}
@list l9:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:18.0pt;
	mso-level-number-position:left;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	mso-char-indent-count:-2.0;
	font-family:Wingdings;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
table.a3
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
</head>

<body lang=ZH-CN vlink=purple style='tab-interval:21.0pt;text-justify-trim:
punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<h1 align=center style='text-align:center'><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>内核中的同步与任务调度</span></h1>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>本文作者</span></b><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>：</span></p>

<p class=MsoNormal style='layout-grid-mode:char'><b style='mso-bidi-font-weight:
normal'><span style='font-family:仿宋_GB2312;mso-hansi-font-family:华文宋体;
color:#99CC00;mso-bidi-font-style:italic'>康华</span></b><span style='font-family:
仿宋_GB2312;mso-hansi-font-family:华文宋体;color:#99CC00'>：计算机硕士，主要从事<span
lang=EN-US>Linux</span>操作系统内核、<span lang=EN-US>Linux</span>技术标准、计算机安全、软件测试等领域的研究与开发工作，现</span><span
style='font-family:仿宋_GB2312;mso-ascii-font-family:"Times New Roman";
color:#99CC00'>就职于</span><span style='font-family:仿宋_GB2312;mso-hansi-font-family:
华文宋体;color:#99CC00'>信息产业部软件与集成电路促进中心所属的<span lang=EN-US>MII-HP Linux</span>软件实验室。如果需要可以联系通过</span><span
class=a><span lang=EN-US style='color:#99CC00'>kanghua151@msn.com</span></span><span
style='font-family:仿宋_GB2312;mso-hansi-font-family:华文宋体;color:#99CC00'>联系他。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>摘要</span></b><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>：同步概念在多线程和<span
class=GramE>多进程</span>编程中已经被诠释得很全面。同步方法对于用户应用程序来讲使用简单，无需过多考虑它们产生的原因（唯一的原因就是线程或进程并发）。但是内核中的同步处理就要复杂得多，开发者必须知道内核中任务得调度方式，才能有效的控制内核中的同步。所以本文就将结合内核任务调度，分析内核中的同步措施，并结合一个实例讲述内核中如何综合运用各种同步方法。</span></p>

<h2><span style='font-family:黑体;mso-ascii-font-family:Arial'>并发，竞争与同步：</span><span
lang=EN-US><o:p></o:p></span></h2>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>并发，竞争和同步的概念，我们假定大家都有所了解，本文不再重申。我们讨论的重点放在什么情况会发生内核并发上？如何防止内核并发？有那些同步方法？以及这些方法的行为有何特点和如何使用它们？</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>下面一段描述了上述几个概念之间的大致关系，这种关系在内核中同样适用。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>对于多线程程序的开发者来说，往往会利用多线程访问共享数据，避免繁琐的进程间通讯。但是多线程对共享数据的并发访问有可能产生竞争，使得数据处于不一致状态，所以需要一些同步方法来保护共享数据。多线程的并发执行是由于线程被抢占式的调度――一个线程在对共享数据访问期间（还未完成）被调度程序中断，将另一个线程投入运行――如果新被调度的线程也要对这个共享数据进行访问，就将产生竞争。为了避免竞争产生，需要使线程<span
class=GramE>串行地</span>访问共享数据</span> <span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>，也就是说访问需要同步――在一方对数据访问结束后，另一方才能对同一数据进行访问。</span></p>

<h2><span style='font-family:黑体;mso-ascii-font-family:Arial'>内核并发原因</span><span
lang=EN-US><o:p></o:p></span></h2>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>上述情况是用户空间并发产生的普遍原因，对于内核来说并发原因也大致类似，但是情况要更多样，也更复杂。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>对于单处理机器来说情况相对简单一些。在</span><span
lang=EN-US>2.6</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>版本内核之前，</span><span lang=EN-US>Linux</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>内核是非抢占式的――在内核任务没有执行完之前不能被打断，这样的话，内核中程序并发执行的情况很少，准确地讲只有两种可能：</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span class=GramE><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>一</span></span>
<span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>：<i><span style='color:black'>中断发生</span></i></span><span
style='color:black'> </span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>，因为中断执行是异步的，而且中断是在非抢占式内核中打断当前运行内核代码的唯一方法，所以中断显然是可以和其它内核代码并发执行的。因此如果中断操作和被中断的那内核代码都访问同样的内核数据，那么就会发生竞争。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>二</span> <i><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>：<span style='color:black'>睡眠和再调度</span></span></i><span
lang=EN-US>, </span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>处于进程上下文（下面会进行讲述）的内核任务可以睡眠（睡眠意味放弃处理器），这时调度程序会调度其它程序去执行（首先执行调度任务队列中的内核任务，然后执行软中断等，最后从运行队列中选择一个高优先级的用户进程运行）。显然这里也会造成内核并发访问，当睡眠的内核任务和新投入运行的内核任务访问同一共享数据时，就发生了竞争。<span
style='color:#FFCC00'>请看参考资料</span></span><span lang=EN-US style='color:#FFCC00'>
1</span><span lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US>2.6</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>版本的内核变成了抢占式内核――内核可能在任何时刻抢占正在运行的内核代码。所以内核中发生并发执行的情况大大增加了。<i><span
style='color:black'>内核抢占</span></i>成为了内核程序并发的又一种可能，所以在开发抢占式内核代码时需要时刻警惕抢占产生的竞争。</span></p>

<p class=MsoBodyTextIndent><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>单处理器上的并发是逻辑上的伪并发，事实上所谓并发的内核程序其实是交错地占用处理器。真正的并发执行程序，必须依靠对称多处理器。但无论是逻辑上的并发还是真正的并发，都会产生竞争，而且它们的处理也是相同的。但是对于对称多处理器来说，由于两个或多个处理器可以在同一时刻执行代码，所以会不可避免地给内核带来并发可能，如果分别在不同处理器上执行的内核代码同时访问同一共享数据，竞争就产生了。因此，不用说<i><span
style='color:black'>对称多处理</span></i>是内核并发的又一种可能。</span> <span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
color:#FFCC00'>请看参考资料</span><span lang=EN-US style='color:#FFCC00'>2</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>可以看到随着</span><span
lang=EN-US>Linux</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>内核不断演化，在内核对系统支持更加全面，对任务调度更加高效的同时，也给内核带来了更多的并发可能，更容易引起竞争。上面提到的各种并发情况在内核中都必须得到有效的处理，才能确保内核有高稳定性。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>无论是中断产生的并发或是睡眠引起的并发，还是内核抢占引起的并发，要想在内核开发中很好地避免，就必须从本质上了解它们的并发原因。只有在掌握内核任务的调度机制后，才可以真正的达到对并发可能的预测，进而能够采取合适的同步方法――锁――来避免并发。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>下面我们就对任务调度进行讨论。对比并发产生的条件，分析内核中的调度发生的条件。</span></p>

<h2><span style='font-family:黑体;mso-ascii-font-family:Arial'>内核中的任务调度：</span><span
lang=EN-US><o:p></o:p></span></h2>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>我们这里所说的任务调度不同于常说的进程调度。进程调度是：内核中的调度程序在进程运行队列中选择合适的（优先级高的）进程执行。而我们所说的内核任务调度指的是，内核中的任务获得执行机会。对于内核并发来说，内核任务之间的关系尤为重要。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>首先我们来看看内核有那些任务，各有什么特点。</span></p>

<h3><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>内核任务种类</span></h3>

<p class=MsoNormal><b><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>硬中断操作：</span><span
lang=EN-US><o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>硬中断是指那些由处理器以外的外设产生的中断，这些中断被处理器接收后交给内核中的中断处理程序处理。要注意的是：第一</span><span
lang=EN-US>,</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>硬中断是异步产生的，中断发生后立刻得到处理，也就是说中断操作可以抢占内核中正在运行的代码。这点非常重要。第二，中断操作是发生在中断上下文中的（所谓中断上下文指的是和任何进程无关的上下文环境）。中断上下文中，不可以使用进程相关的资源，也不能够进行调度。<span
style='color:#FFCC00'>请看参考资料</span></span><span lang=EN-US style='color:#FFCC00'>2</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>软中断操作：</span><span
lang=EN-US><o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>软中断是</span><span
lang=EN-US>Linux</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>中为了执行一些硬中断操作来不及完成的任务而采取的推后执行机制。因为硬中断操作期间的中断会被抛弃，所以硬中断是在不安全时间运行的。不安全时间应该尽量短，所以采用软中断来执行大部分任务，它会把硬中断做不完的耗时任务推后到安全时间执行（软中断期间不会丢弃中断信号）。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>软中断<span
class=GramE>不象</span>硬中断<span class=GramE>那样时</span>随时都能够被执行，笼统来讲软中断会在内核处理任务处理完毕后返回用户<span
class=GramE>级程序</span>前得到处理机会。<i>具体的讲有三个时刻它将被执行</i></span><i><span lang=EN-US>(<span
class=SpellE>do_softirq</span>())</span></i><i><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>：硬件中断操作完成后；内核调度程序中；系统调用返回时，（另外的内核线程</span><span
class=SpellE><span lang=EN-US>ksoftirqd</span></span></i><i><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>周期执行软中断）</span></i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>。需要说明的是软中断的执行也处于中断上下文中，所以中断上下文对它的限制是和硬中断一样的。</span></p>

<p class=MsoNormal><span class=SpellE><b><i><span lang=EN-US>Tasklet</span></i></b></span><b><i><span
lang=EN-US> </span></i></b><b><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>和</span><span
lang=EN-US>bottom half <o:p></o:p></span></i></b></p>

<p class=MsoPlainText><b><i><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span></span></i></b><span class=SpellE><span
lang=EN-US>Tasklet</span></span>和<span lang=EN-US>bottom half</span>都是建立在软中断之上的两种延迟机制，其中具体不同在于软中断是静态分配的，而且同类软中断可以并发地在几个<span
lang=EN-US>CPU</span>上运行；<span class=SpellE><span lang=EN-US>Tasklet</span></span>可以动态分配，并且不同种类的<span
class=SpellE><span lang=EN-US>Tasklets</span></span>可以并发地在几个<span lang=EN-US>CPU</span>上运行，但同类的<span
class=SpellE><span lang=EN-US>tasklets</span></span><span lang=EN-US> </span>不可以；<span
lang=EN-US>bottom half</span>只能静态分配，实质上下半部分是一个不能与其它下半部分并发执行的高优先级<span
class=SpellE><span lang=EN-US>tasklet</span></span>，即使它们类型不同，而且在不同<span
lang=EN-US>CPU</span>上运行。</p>

<p class=MsoNormal><b><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>系统调用</span><span
lang=EN-US><o:p></o:p></span></i></b></p>

<p class=MsoNormal><i><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span></i><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>系统调用是用户程序通过<span
class=GramE>门机制</span>来进入内核执行的内核例程，它运行在内核态，处于进程上下文中（进程上下文包括进程的堆栈等等环境），所以系统的调用代码可以<span
class=GramE>对进程</span>相关数据进行访问，可以执行调度程序，也可以睡眠。</span></p>

<h3><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>内核任务之间并发关系</span><span lang=EN-US><o:p></o:p></span></h3>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>上述内核任务很多情况是可以交错执行的，所以很有可能产生竞争（都要访问同一个数据结构时，就产生了竞争）。下面分析这些内核任务之间有那些可能的并发行为。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>可以抽象出，程序（用户态和内核态一样）并发执行的总原因无非是正在运行中<span
class=GramE>得程序</span>被其它程序<i>抢占</i>，所以我们必须看看内核任务之间的抢占关系：</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>中断处理程序可以抢占内核中的所有程序（当没有<span
class=GramE>锁保护</span>时），包括软中断，</span><span class=SpellE><span lang=EN-US>tasklet</span></span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>，</span><span lang=EN-US>bottom half</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和系统的调用，甚至也包括中断处理程序。也就是说中断处理程序可以和这些所有的内核任务并发执行，如果被抢占的程序和中断处理程序都要访问同一个资源，就产生了竞争。</span></p>

<p class=MsoBodyTextIndent><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>软件中断可以抢占硬中断处理程序以外的内核程序，所以内核代码（比如，系统调用）中有数据和软中断共享，就有会有竞争。此外要注意的是，软中断即使是同种类型的也可以并发的运行在不同处理器上，所以它们之间共享数据都会产生竞争。（如果在用一个处理器上软中断是不能相互抢占的）。</span></p>

<p class=MsoBodyTextIndent><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>同类的</span><span
class=SpellE><span lang=EN-US>tasklet</span></span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>不可能同时运行，所以对于同类</span><span
class=SpellE><span lang=EN-US>tasklet</span></span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>不会产生并发；但两个不同种类的</span><span
class=SpellE><span lang=EN-US>tasklet</span></span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>有可已在不同处理器上并发运行，如果之间有数据共享就会产生竞争（同类的</span><span
class=SpellE><span lang=EN-US>tasklet</span></span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>在同一个处理器上运行的</span><span
class=SpellE><span lang=EN-US>tasklet</span></span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>不发生相互抢占的情况）。</span></p>

<p class=MsoBodyTextIndent><span lang=EN-US>Bottom half </span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>无论是否是同类的，即使在不同处理器上也都不能并发执行，它是绝对串行化的，所以它们之间永远不能产生竞争。</span></p>

<p class=MsoBodyTextIndent><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>注意：</span><span
class=SpellE><span lang=EN-US>tasklet</span></span></i><i><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和</span><span lang=EN-US>bottom half</span></i><i><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>是建立在软中断之上的，所以它们也都遵从软中断的调度规则――都可以打断进程上下问中的内核代码（系统调用），都可被硬中断打断――这些都可能产生并发。</span><span
lang=EN-US><o:p></o:p></span></i></p>

<p class=MsoBodyTextIndent><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>系统调用这种内核代码可能和各种内核代码并发，除了上面提到的中断（软，硬）抢占它产生并发外，它是有可能自发性地主动睡眠（比如在一些阻塞性的操作中），放弃处理器，重新调度其它任务，所以系统调用中并发情况更普遍，尤其当用户空间需要和内核空间共同操作全局数据时，一定要注意保护。</span></p>

<p class=MsoBodyTextIndent><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<h2><span style='font-family:黑体;mso-ascii-font-family:Arial'>内核同步方法</span><span
lang=EN-US><o:p></o:p></span></h2>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>为了避免并发，防止竞争。内核提供了一组同步方法来提供对共享数据的保护。</span>
<span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>我们的重点不是介绍这些方法的详细用法，而是强调为什么使用这些方法和它们之间的差别。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US>Linux</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>使用的同步机制可以说从</span><span lang=EN-US>2.0</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>到</span><span lang=EN-US>2.6</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>以来不断发展完善。从最初的原子操作，到后来的信号量，从大内核锁到今天的自旋锁。这些同步机制的发展伴随</span><span
lang=EN-US>Linux</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>从单处理器到对称多处理器的过度；伴随着从非抢占内核到抢占内核的过度。锁机制越来越有效，也越来越复杂。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>目前来说内核中原子操作多用来做计数使用，其它情况最常用的是两重<span
class=GramE>锁以及</span>它们的变种，一个是自旋锁，另一个是信号量。我们下来就着重介绍一下这两中锁机制。</span></p>

<address><b><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>自旋锁</span><span lang=EN-US><o:p></o:p></span></b></address>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>自旋<span
class=GramE>锁最多</span>只能被一个可执行线程持有，如果一个执行线程试图请求一个已被争用（已经被持有）的自旋锁，那么这个线程就会一直进行忙循环――旋转――等待<span
class=GramE>锁重新</span>可用。要是锁未被争用，请求它的执行线程便能立刻得到它并且继续进行。自旋锁可以在任何时刻防止多于一个的执行线程同时进入临界区。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>事实上，自旋锁的初衷就是：在短期间内进行轻量级的锁定。一个被争用的自旋锁使得请求它的线程在等待<span
class=GramE>锁重新</span>可用期间进行自旋（特别浪费处理器时间），所以自旋锁不应该被持有时间过长。如果需要长时间锁定</span><span
lang=EN-US>,</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>最好使用信号量。</span><span lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>自旋锁的基本形式如下：</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span class=SpellE><span lang=EN-US>spin_<span
class=GramE>lock</span></span></span><span class=GramE><span lang=EN-US>(</span></span><span
lang=EN-US>&amp;<span class=SpellE>mr_lock</span>);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US>/*</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>临界区</span><span
lang=EN-US>*/<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span class=SpellE><span lang=EN-US>spin_<span
class=GramE>unlock</span></span></span><span class=GramE><span lang=EN-US>(</span></span><span
lang=EN-US>&amp;<span class=SpellE>mr_lock</span>);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>因为自旋锁在同一时刻只能<span
class=GramE>被最多</span>一个执行线程持有，所以一个时刻只有一个线程允许存在于临界区中。这点很好的满足了对称多处理机器需要的锁定服务。在单处理器上，自旋<span
class=GramE>锁仅仅</span>当作一个设置内核抢占的开关。如果内核抢占也不存在，那么<span class=GramE>自旋锁会在</span>编译时被完全剔除出内核。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>自旋锁在内核中有许多变种，如对</span><span
lang=EN-US>bottom half&nbsp;</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>而言，可以使用</span><span
class=SpellE><span lang=EN-US>spin_lock_bh</span></span><span lang=EN-US>()</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>用来获得特定锁并且<span class=GramE>关闭半底执行</span>。相反的操作由</span><span
class=SpellE><span lang=EN-US>spin_unlock_bh</span></span><span lang=EN-US>()</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>来执行；<span style='color:black'>如果临界区的访问逻辑可以被清晰的分为读和写这种模式，那么可以使用读者</span></span><span
lang=EN-US style='color:black'>/</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";color:black'>写者自旋</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>锁，调用形式为：</span></p>

<p class=MsoNormal><i><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>读者的代码路径：</span><span lang=EN-US><o:p></o:p></span></i></p>

<p class=MsoNormal><span class=SpellE><i><span lang=EN-US>read_<span
class=GramE>lock</span></span></i></span><span class=GramE><i><span lang=EN-US>(</span></i></span><i><span
lang=EN-US>&amp;<span class=SpellE>mr_rwlock</span>);<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span lang=EN-US>/*</span></i><i><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>只读临界区</span><span
lang=EN-US>*/<o:p></o:p></span></i></p>

<p class=MsoNormal><span class=SpellE><i><span lang=EN-US>read_<span
class=GramE>unlock</span></span></i></span><span class=GramE><i><span
lang=EN-US>(</span></i></span><i><span lang=EN-US>&amp;<span class=SpellE>mr_rwlock</span>);<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>写者的代码路径：</span><span lang=EN-US><o:p></o:p></span></i></p>

<p class=MsoNormal><span class=SpellE><i><span lang=EN-US>write_<span
class=GramE>lock</span></span></i></span><span class=GramE><i><span lang=EN-US>(</span></i></span><i><span
lang=EN-US>&amp;<span class=SpellE>mr_rwlock</span>);<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span lang=EN-US>/*</span></i><i><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>读写临界区</span><span
lang=EN-US>*/<o:p></o:p></span></i></p>

<p class=MsoNormal><span class=SpellE><i><span lang=EN-US>write_<span
class=GramE>unlock</span></span></i></span><span class=GramE><i><span
lang=EN-US>(</span></i></span><i><span lang=EN-US>&amp;<span class=SpellE>mr_rwlock</span>);<o:p></o:p></span></i></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;
</span><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>简单的说，自旋锁在内核中主要用来防止多处理器中并发访问临界区，防止内核抢占造成的竞争。另外自旋锁不允许任务睡眠（持有自旋锁的任务睡眠会造成自死锁），它能够在中断上下文中使用。</span></p>

<p class=MsoNormal><b><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>信号量</span> <span
lang=EN-US><o:p></o:p></span></i></b></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US>Linux</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>中的信号量是一种睡眠锁。如果有一个任务试图获得一个已被持有的信号量时，信号量会将其推入等待队列，然后让其睡眠。这时处理器获得自由去执行其它代码。当持有信号量的进程将信号量释放后，在等待队列中的一个任务将被唤醒，从而便可以获得这个信号量。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>信号量的睡眠特性，使得信号量<span
class=GramE>适用于锁会被</span>长时间持有的情况；只能在进程上下文中使用，因为中断上下文中是不能被调度的；另外当代码持有信号量时，不可以再持有自旋锁。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>信号量基本使用形式为：</span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>static DECLARE_MUTEX(<span
class=SpellE>mr_sem</span>);//</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";color:black'>声明互斥信号量</span><span
lang=EN-US style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>…<o:p></o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-US style='color:black'>if(</span></span><span
class=SpellE><span lang=EN-US style='color:black'>down_interruptible</span></span><span
lang=EN-US style='color:black'>(&amp;<span class=SpellE>mr_sem</span>))<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=EN-US
style='color:black'>/*</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";color:black'>可被中断的睡眠，当信号来到，睡眠的任务被唤醒</span><span
lang=EN-US style='color:black'> */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='color:black'>/*</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";color:black'>临界区</span><span lang=EN-US style='color:black'>…*/<o:p></o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-US style='color:black'>up(</span></span><span
lang=EN-US style='color:black'>&amp;<span class=SpellE>mr_sem</span>);<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";color:black'>同自旋锁一样，信号量</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>在内核中也有许多变种，比如读者－写者信号量等，这里不再做介绍了。</span><span lang=EN-US
style='color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><i><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>信号量和自旋锁区别</span><span
lang=EN-US><o:p></o:p></span></i></b></p>

<p class=MsoBodyTextIndent2 style='margin-left:21.0pt;text-indent:21.0pt;
mso-char-indent-count:2.0;line-height:normal;mso-char-indent-size:10.5pt'><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>虽然听起来两者之间使用条件复杂，其实在实际使用中信号量和<span class=GramE>自旋锁并不易</span>混淆。注意以下原则。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoBodyTextIndent2 style='margin-left:21.0pt;text-indent:21.0pt;
mso-char-indent-count:2.0;line-height:normal;mso-char-indent-size:10.5pt'><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>如果代码需要睡眠――这往往是发生在和用户空间同步时――使用信号量是唯一的选择。由于不受睡眠的限制，使用信号量通常来说更加简单一些。如果需要在自旋锁和信号量中作选择，应该取决于锁被持有的时间长短。理想情况是所有的锁都应该尽可能短的被持有，但是如果锁的持有时间较长的话，使用信号量是更好的选择。另外，信号量不同于自旋锁，它不会关闭内核抢占，所以持有自旋锁的代码可以被抢占。这意味者信号量不会对影响调度反应时间带来负面影响。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<h2><span style='font-family:黑体;mso-ascii-font-family:Arial'>实际应用举例</span></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>这些锁机制在内核中使用很频繁。我们举个简单例子来帮助理解它们的实质。</span></p>

<p style='text-indent:21.0pt'><span class=SpellE><span lang=EN-US>Netfilter</span></span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>是</span><span lang=EN-US>Linux 2.4.x</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>内核中最流行的防火墙构建平台，我们这里不深入剖析</span><span class=SpellE><span
lang=EN-US>Netfilter-iptables</span></span><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>的组织结构，而是抽取<span
class=GramE>一</span>小部分代码来看看其中的锁定机制是如果工作的。</span><span class=SpellE><span
lang=EN-US>iptables</span></span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>是专门针对</span><span
lang=EN-US>2.4.x</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>内核的</span><span class=SpellE><span
lang=EN-US>Netfilter</span></span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>制作的用户空间配置工具，通过</span><span
lang=EN-US>socket</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>接口对</span><span class=SpellE><span
lang=EN-US>Netfilter</span></span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>进行操作，创建</span><span
lang=EN-US>socket</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>的方式如下：</span> </p>

<p><span class=GramE><span lang=EN-US>socket(</span></span><span lang=EN-US>TC_AF,
SOCK_RAW, IPPROTO_RAW) </span></p>

<p><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>其中</span><span lang=EN-US>TC_AF</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>就是</span><span lang=EN-US>AF_INET</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>。用户空间程序可以通过创建一个</span><span lang=EN-US>&quot;</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>原始</span><span lang=EN-US>IP</span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>套接字</span><span
lang=EN-US>&quot;</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>获得访问</span><span class=SpellE><span
lang=EN-US>Netfilter</span></span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>的句柄，然后通过</span><span
class=SpellE><span lang=EN-US>getsockopt</span></span><span lang=EN-US>()</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>和</span><span class=SpellE><span lang=EN-US>setsockopt</span></span><span
lang=EN-US>()</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>系统调用来读取、更改</span><span class=SpellE><span
lang=EN-US>Netfilter</span></span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>设置。<span
style='color:#FFCC00'>请看参考资料</span></span><span lang=EN-US style='color:#FFCC00'>
3</span><span lang=EN-US><o:p></o:p></span></p>

<p style='text-indent:24.0pt;mso-char-indent-count:2.0;mso-char-indent-size:
12pt'><span lang=EN-US>get/<span class=SpellE>setsockopt</span>()</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>系统调用最终是依靠</span><span class=SpellE><span lang=EN-US>nf_sockopt</span></span><span
lang=EN-US>()</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>函数来进行用户空间对内核空间的数据进行操作的。这个函数属于系统调用，处于进程上下文。由于它有可能睡眠，造成内部数据被其它内核任务并发访问，从而引起不一致状态，所以这里需要使用锁――信号量――来防止竞争。（见</span><span
class=SpellE><span lang=EN-US>netfilter.c</span></span><span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>）<span
style='color:#FFCC00'>请看参考资料</span></span><span lang=EN-US style='color:#FFCC00'>
4</span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-US>static</span></span><span
lang=EN-US> <span class=SpellE>int</span> <span class=SpellE>nf_sockopt</span>(<span
class=SpellE>struct</span> sock *<span class=SpellE>sk</span>, <span
class=SpellE>int</span> pf, <span class=SpellE>int</span> <span class=SpellE>val</span>,
</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>char</span> *opt, <span class=SpellE>int</span> *<span
class=SpellE>len</span>, <span class=SpellE>int</span> get)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>struct</span></span> <span class=SpellE>list_head</span>
*<span class=SpellE>i</span>;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>struct</span></span> <span class=SpellE>nf_sockopt_ops</span>
*ops;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> ret;</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (<span class=SpellE><b>down_interruptible</b></span><b>(&amp;<span
class=SpellE>nf_sockopt_mutex</span>) </b>!= 0)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> -EINTR;</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>for</span> (<span class=SpellE>i</span> = <span class=SpellE>nf_sockopts.next</span>;
<span class=SpellE>i</span> != &amp;<span class=SpellE>nf_sockopts</span>; <span
class=SpellE>i</span> = <span class=SpellE>i</span>-&gt;next) {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ops</span> = (<span class=SpellE>struct</span> <span class=SpellE>nf_sockopt_ops</span>
*)<span class=SpellE>i</span>;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (ops-&gt;pf == pf) {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (get) {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (<span class=SpellE>val</span> &gt;= ops-&gt;<span
class=SpellE>get_optmin</span></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>&amp;&amp; <span
class=SpellE><span class=GramE>val</span></span> &lt; ops-&gt;<span
class=SpellE>get_optmax</span>) {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ops</span>-&gt;use++;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><b>up(</b></span><b>&amp;<span class=SpellE>nf_sockopt_mutex</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ret</span> = ops-&gt;get(<span class=SpellE>sk</span>, <span
class=SpellE>val</span>, opt, <span class=SpellE>len</span>);</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>goto</span></span> out;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}
else {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (<span class=SpellE>val</span> &gt;= ops-&gt;<span
class=SpellE>set_optmin</span></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>&amp;&amp; <span
class=SpellE><span class=GramE>val</span></span> &lt; ops-&gt;<span
class=SpellE>set_optmax</span>) {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ops</span>-&gt;use++;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><b>up(</b></span><b>&amp;<span class=SpellE>nf_sockopt_mutex</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ret</span> = ops-&gt;set(<span class=SpellE>sk</span>, <span
class=SpellE>val</span>, opt, *<span class=SpellE>len</span>);</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>goto</span></span> out;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoIndexHeading><span lang=EN-US style='font-family:"Times New Roman"'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>up(</span>&amp;<span class=SpellE>nf_sockopt_mutex</span>);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> -ENOPROTOOPT;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;</span><span class=GramE>out</span>:</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><b>down(</b></span><b>&amp;<span class=SpellE>nf_sockopt_mutex</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ops</span>-&gt;use--;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (ops-&gt;<span class=SpellE>cleanup_task</span>)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>wake_up_<span class=GramE>process</span></span><span class=GramE>(</span>ops-&gt;<span
class=SpellE>cleanup_task</span>);</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE><b>up(</b></span><b>&amp;<span class=SpellE>nf_sockopt_mutex</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> ret;</span></p>

<p class=MsoNormal><span lang=EN-US>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>代码中为了防止</span><span
lang=EN-US>ops-&gt;use++</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>操作时产生不一致状态，使用了互斥信号量（</span><span
lang=EN-US>static DECLARE_MUTEX(<span class=SpellE>nf_sockopt_mutex</span>)</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>）来保护临界区。只有再</span><span lang=EN-US>down</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>后<span class=GramE>才操作</span></span><span lang=EN-US>user</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>数据，操作结束</span><span lang=EN-US>up</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>信号量，解除锁定。</span><span lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>另外如果要给钩子点</span><span
lang=EN-US>(hook)</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>上注册操作，需要使用</span><span class=SpellE><span
lang=EN-US>nf_register_hook</span></span><span style='font-family:宋体;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>（）函数，相反注销使用</span><span
class=SpellE><span lang=EN-US>nf_unregister_hook</span></span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>（）函数。由于注册和注销主要任务是为给定的内核数据链表中加入或删除数据。链表在此处是一个共享结构，对它的访问路径就是一个典型的临界区，所以这里将使用轻量级的锁――自旋锁。又由于网络协议在内核中是在软中断中被处理的（老版本在</span><span
lang=EN-US>bottom half</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>中），所以这个链表数据是被注册（或注销）函数和软中断共享的。为了防止软中断抢占执行，访问这个链表必须使用关闭软中断的自旋锁。</span><span
lang=EN-US>(<span class=GramE>static</span> <span class=SpellE>spinlock_t</span>
<span class=SpellE>nf_hook_lock</span> = SPIN_LOCK_UNLOCKED)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span class=SpellE><span class=GramE><span
lang=EN-US>int</span></span></span><span lang=EN-US> <span class=SpellE>nf_register_hook</span>(<span
class=SpellE>struct</span> <span class=SpellE>nf_hook_ops</span> *<span
class=SpellE>reg</span>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>struct</span></span> <span class=SpellE>list_head</span>
*<span class=SpellE>i</span>;</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoIndexHeading><span lang=EN-US style='font-family:"Times New Roman"'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>spin_lock_<span class=GramE>bh</span></span><span class=GramE>(</span>&amp;<span
class=SpellE>nf_hook_lock</span>);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>list_for_<span class=GramE>each</span></span><span class=GramE>(</span><span
class=SpellE>i</span>, &amp;<span class=SpellE>nf_hooks</span>[<span
class=SpellE>reg</span>-&gt;pf][<span class=SpellE>reg</span>-&gt;<span
class=SpellE>hooknum</span>]) {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (<span class=SpellE>reg</span>-&gt;priority &lt; ((<span
class=SpellE>struct</span> <span class=SpellE>nf_hook_ops</span> *)<span
class=SpellE>i</span>)-&gt;priority)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>break</span>;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>list_add_<span class=GramE>rcu</span></span><span class=GramE>(</span>&amp;<span
class=SpellE>reg</span>-&gt;list, <span class=SpellE>i</span>-&gt;<span
class=SpellE>prev</span>);</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><b>spin_unlock_<span class=GramE>bh</span></b></span><span
class=GramE><b>(</b></span><b>&amp;<span class=SpellE>nf_hook_lock</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>synchronize_<span class=GramE>net</span></span><span class=GramE>(</span>);</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> 0;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-US>void</span></span><span
lang=EN-US> <span class=SpellE>nf_unregister_hook</span>(<span class=SpellE>struct</span>
<span class=SpellE>nf_hook_ops</span> *<span class=SpellE>reg</span>)</span></p>

<p class=MsoNormal><span lang=EN-US>{</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><b>spin_lock_<span class=GramE>bh</span></b></span><span
class=GramE><b>(</b></span><b>&amp;<span class=SpellE>nf_hook_lock</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>list_del_<span class=GramE>rcu</span></span><span class=GramE>(</span>&amp;<span
class=SpellE>reg</span>-&gt;list);</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><b>spin_unlock_<span class=GramE>bh</span></b></span><span
class=GramE><b>(</b></span><b>&amp;<span class=SpellE>nf_hook_lock</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>synchronize_<span class=GramE>net</span></span><span class=GramE>(</span>);</span></p>

<p class=MsoNormal><span lang=EN-US>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>这个文件中<span
class=GramE>还有种锁</span>――读者－写者自旋锁（</span><span lang=EN-US>static <span
class=SpellE>rwlock_t</span> <span class=SpellE>queue_handler_lock</span> =
RW_LOCK_UNLOCKED</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>）这个锁被用来在注册和注销协议对应的处理函数时保护协议队列不被并发访问，由于这种协议队列在检索时（读时）可以并发，而在写时只能有一个写者存在，所以利用读者－写者自旋锁时最优选<span
class=GramE>择</span>。</span></p>

<p class=MsoNormal><span class=SpellE><span class=GramE><span lang=EN-US>int</span></span></span><span
lang=EN-US> <span class=SpellE>nf_register_queue_handler</span>(<span
class=SpellE>int</span> pf, <span class=SpellE>nf_queue_outfn_t</span> <span
class=SpellE>outfn</span>, void *data)</span></p>

<p class=MsoNormal><span lang=EN-US>{<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> ret;</span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><b>write_lock_<span class=GramE>bh</span></b></span><span
class=GramE><b>(</b></span><b>&amp;<span class=SpellE>queue_handler_lock</span>);<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (<span class=SpellE>queue_handler</span>[pf].<span
class=SpellE>outfn</span>)</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ret</span> = -EBUSY;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>else</span> {</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>queue_<span class=GramE>handler</span></span><span class=GramE>[</span>pf].<span
class=SpellE>outfn</span> = <span class=SpellE>outfn</span>;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>queue_<span class=GramE>handler</span></span><span class=GramE>[</span>pf].data
= data;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>ret</span> = 0;</span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class=MsoIndexHeading><span lang=EN-US style='font-family:"Times New Roman"'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>write_unlock_<span class=GramE>bh</span></span><span class=GramE>(</span>&amp;<span
class=SpellE>queue_handler_lock</span>);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> ret;</span></p>

<p class=MsoNormal><span lang=EN-US>}</span></p>

<p class=MsoSalutation><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>总结</span></b> <span style='font-family:
宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman"'>要用好</span><span
lang=EN-US>Linux</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>锁定机制必须深刻理解内核调度原理，要能清楚区分并发原因。另外</span><span
lang=EN-US>Linux</span><span style='font-family:宋体;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman"'>内核中锁机制的使用非常普遍，理解和使用锁机制是代码能够可靠运行的关键问题之一，并发产生的错误不可再现，调试困难，往往给开发带来很大麻烦，所以使用锁来保护临界区尤为重要。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>即使开发环境不存在多处理器，不要求内核抢占，也最好不要放弃使用锁机制，因为使用恰当的锁机制可以方便将开发的代码向其它环境移植。另外要记住，不要指望在代码编写完毕后，再加入锁来保护资源――这样做是非常困难和愚蠢的，一定要在设计初期就要考虑竞争问题，设计锁来保护临界区。</span><span
lang=EN-US><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:21.0pt;mso-char-indent-count:2.0;
mso-char-indent-size:10.5pt'><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

<p class=MsoIndexHeading><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman"'>参考资料</span><span lang=EN-US style='font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1 Linux Device Driver, O’Reilly</span></p>

<p class=MsoNormal><span lang=EN-US>2 Robert Love, Linux Kernel Development</span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>，</span><span class=SpellE><span lang=EN-US>Sams</span></span><span
lang=EN-US> Publishing</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>，</span><span
lang=EN-US>2003</span></p>

<p class=MsoNormal><span lang=EN-US>3 Paul Russell Linux <span class=SpellE>netfilter</span>
Hacking HOWTO v1.2</span><span style='font-family:宋体;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>，</span><span
lang=EN-US>2002</span></p>

<p class=MsoNormal><span lang=EN-US>4 Paul Russell <span class=SpellE>iptables</span></span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>源码</span><span lang=EN-US>v<st1:chsdate IsROCDate="False"
IsLunarDate="False" Day="30" Month="12" Year="1899" w:st="on">1.<st1:chmetcnv
 TCSC="0" NumberType="1" Negative="False" HasSpace="False" SourceValue="2.1"
 UnitName="a" w:st="on">2.1a</st1:chmetcnv></st1:chsdate> </span><span
style='font-family:宋体;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman"'>，</span><span lang=EN-US>2002</span></p>

<p class=MsoNormal><b><span lang=EN-US><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b><span lang=EN-US><o:p>&nbsp;</o:p></span></b></p>

</div>

</body>

</html>

1.调试技术的几个准则
    惊喜准则：找到错误是一种惊喜，心理上不要畏惧而是要怀着感恩的心去面对。
    从小处开始准则：刚开始测试的使用从小处着手，暂时不涉及边界数据，虽然这样可能会掩盖一些Bug，但是这样或许能查到最主要的Bug，例如你的程序包含了一个巨大的循环体，最容易发现的Bug在第一个循环或第二次循环执行的时候。
    自顶向下准则：优先选择step over而不是step into，以节省时间。
    Segmentation Fault准则：出现段错误时，第一个想到的不应该是printf而是Debugger，因为在调试器中你能看到你的哪一行代码导致了错误，更重要的是你可以通过backtrace等工具得到更多有用的信息。
    折半查找准则：在寻找bug时可以充分利用编辑器等工具来进行折半查找，具体在后边有例子说明。

    2.Linux下代码调试工具
    主要使用的GDB，以及基于GDB的图形化工具，如DDD或eclipse，选择上看个人习惯了。
    命令行式的GDB启动较快，可以在ssh终端下使用，操作简洁，并且在调试GUI程序时不会崩溃，但较之图形化则在单步调试或设置断点时非常不方便。
    当然你可以使用Vim等编辑器的插件或者补丁（clewn or vimGDB）来弥补这一缺憾，并且在GDB6.1以上的版本你可以使用GDB -tui这个模式（或者在GDB的命令行模式下按CTRL-x-a）打开一个类似于图形界面的文本界面模式，在这个界面中你可以使用上下键查看源代码（CTRL-P 和 CTRL-N完成输入过的命令的查看）.
    
    https://github.com/geeeeeeeeek/git-recipes/wiki
    
    
    
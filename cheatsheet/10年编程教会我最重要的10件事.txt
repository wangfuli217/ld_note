0. “面向对象”比你想象的要难得多
-------------------------------------------------------------------------------
    也许只有我有这种想法，不过我曾经以为计算机科学课上学过的“面向对象”是很简单的东西。
我的意思是，创建一些类来模拟现实世界能有多难啊？其实，那还真是挺难的。
    十年之后，我仍然在学**如何合理地建模。我后悔以前我没有花更多的时间来学**面向对象和
设计模式。优秀的建模技术对于每一个开发团队都是非常有价值的。

1. 软件开发的难点在于沟通
-------------------------------------------------------------------------------
    这里的沟通是指与人的沟通，而不是socket编程。有时你的确会遇上棘手的技术问题，但是这种
情况根本不常见。常见的问题在于那些你和项目经理之间的、你和客户之间的、还有你和其他开发者
之间的误解。培养你的软技能吧。

2. 学会拒绝
-------------------------------------------------------------------------------
    当我刚开始工作的时候，我非常急切的想要去讨好别人。这也就是说，我几乎不能去回绝别人
对我的要求。我加了很多班，但是还是不能完成他们交代给我的所有事情。结果他们表示不满意，而我也表示要崩溃了。
    如果你从不回绝别人，你的答应就显得毫无意义。承担能力所及的事情，如果别人不停地指派给
你更多的事情，你需要明确的表示那意味着将会耽误其他的工作。
    为了应付这种事情，我会随身携带一张列有待办事项的纸（To-do list)。当人们叫我去做
什么事情的时候，我就给他们看这张纸，并且问他们我应该为他们挤掉哪个事情。这是我用来拒绝别人的一种好办法。

3. 如果每件事都重要，那就什么事都不重要
-------------------------------------------------------------------------------
    我们这一行，总是强调每种特性都是同等重要的，其实并不是这样。敦促你的同事，让他们承担起工作。
    如果你不强迫他们选择该做和不该做的事情，你会轻松很多。相反，让他们来为你选择你这周的任务。
这会让你生产出来的东西变得最有价值。如果其他的部分都还是乱糟糟的，至少你已经完成了最重要的。

4. 不要过度考虑问题
-------------------------------------------------------------------------------
    我可以站在白板前面一整天策划事情，但是这并不意味着事情会向更好的方向发展，这仅意味着事情将变得更复杂。
    我的意思并不是“你不应该去做任何策划”，只是如果我会在实现程序的时候会很快遇到我没考虑过
的问题的话，那为什么我不去尝试把它做好呢？像戴夫·法洛所说的，“魔鬼居住于细节中，而驱走魔鬼的方法是实践，而不是理论”。

5. 去钻研一些东西，但不要钻牛角尖
-------------------------------------------------------------------------------
    克里斯和我花费了大量的时间钻研SQL服务器的深层部分。那真的很有趣，我也学到了很多知识，
但是过了一段时间我意识到，知道了那么多的知识并不能帮助我解决业务上的问题。

6. 了解软件开发系统的其他方面
-------------------------------------------------------------------------------
    这对成为一个优秀的开发者是很重要的，但是若要在一个开发软件的系统中成为优秀的一员，你还需要
去了解开发系统中剩下的部分在干什么。QA是如何工作的？项目经理在干什么？业务分析员在忙些什么？
这些知识会让你与其他员工产生联系，并使你和他们之间的互动顺畅。
    向你周围的人寻求帮助，以便学到更多的知识。有什么好书呢？大多数人都会为你的关注而高兴，
并且很乐意帮助你。在这上花一点小时间会对你有很大的帮助。

7. 同事是你最好的老师
-------------------------------------------------------------------------------
    在我找到第一份工作的一年后，我们和另一所公司合并了。突然之间身边就多出很多聪明又经验丰富的人。
我深刻的记得这是我感到多么自卑和愚蠢。我努力地学**，读了一本又一本的书，还是还是赶不上他们。
我发现他们和我比起来有非常突出的优势。

8. 做出可用的软件是最终目标
-------------------------------------------------------------------------------
    不管你的算法有多酷，不管你的数据库模式有多棒，不管你的什么什么有多么多么好，如果它不能搔到
客户的痒处，它就不值一文。专注于做出有用的软件，同时准备继续做出后续软件，这才是正轨。
 
9. 有些人真的不可理喻
-------------------------------------------------------------------------------
    在你身边的大多数人总是很优秀的，你向他们学**，他们也向你学**。共同完成一件事情的感觉总是很好。
然而不幸的是，你也有可能遇到例外。因为某些原因，人可能会变得冷漠刻薄。萎靡不振的老板啊，满口谎言
的同事啊，无知愚昧的顾客什么的。不要把他们看的太重。尽量避开他们，尽量把他们所带来的痛苦和影响降
到最小，但不要自责。只要你保持诚实并且尽力去工作，你就完成了你该做的事情。

一、90%的编程工作来自内部软件
二、别人雇你的目的，是让你创造利润，不是让你编程
三、不要自称为程序员
四、不要限定自己
五、如何提高求职时的谈判能力？
六、创业公司是否适合应届毕业生？
七、在创业公司工作是否值得推荐？
八、沟通技能是最重要的职业技能


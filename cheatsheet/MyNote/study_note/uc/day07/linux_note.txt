Ctrl+Alt+BackSpace				重启X Window
Ctrl+Alt+[F1~F6]/F7				文件接口/图形接口
startx							启动图形接口

man page 数字意义
	1.使用者可以操作的指令或可执行文件
	2.系统核心可呼叫的函数与工具等
	3.一些常用的函数(function)与函式库(library)
	4.装置档案的说明
	5.设定档或者是某些档案的格式
	6.游戏
	7.惯例与协议等，例如Linux标准档案系统、网络协议、ASCII code等等的说明内容
	8.系统管理员可用的管理指令
	9.跟kernel有关的文件

man -f 名字  显示名字一样的指令或可执行文件
man -k 名字	 显示包含名字的指令或可执行文件

fsck  参数	装置名称   检查与修正硬盘错误
	-t	fsck可以检查好几种不现的filesystem,而fsck只是一支综合程序而已
		个别的filesystem的检验程序都在/sbin底下,可以使用 ls -l /sbin/fsck*检验看看
		指定文件系统名称
	-A	依据/etc/fstab的内容,将所有装置都扫描一次(通常开机过程中就会执行此一指令)
	-a	自动修复检查到的有问题的扇区,所以不用一直按y
	-r	一定要主使用者决定是否需要修复,与上一个-a刚好相反
	-y	与-a类似,但某些filesystem仅支持-y
	-C	可以在检验的过程中,使用一个长条图来显示进度
	-f	强制检查,强制进入细部检查

sync	把内存里的内容写入硬盘
shutdown	参数 	[时间] [警告信息]         //时间参数必须加入,否则会进入单人维护模式,reboot,halt,poweroff
	-t sec:-t后面加秒数,即过几秒关机的意思
	-k	  :不要真的关机，只是发送警告信息
	-r	  :在将系统的服务停掉后重启
	-h	  :在将系统的服务停掉后关机
	-n	  :不经过init程序,直接以shutdown的功能关机
	-f	  :关机并开机之后，强制略过fsck的磁盘检查
	-F	  :系统重新开机之后,强制进行fsck的磁盘检查
	-c	  :取消已经在进行的shutdown指令内容

chgrp  群组	档案或目录
	-R	递归,连同目录下所有档案,目录
chown  用户	档案或目录
	-R  递归
chmod  权限	档案或目录
	-R  递归

档案种类
	-				正规档案,二进制文件(binary),纯文字文件(ASCII),数据格式文件(data)
	d(directory)	目录
	b(block)		区块设备,就是一些存储数据,以提供系统存取的接口设备,硬盘就是
	c(character)	字符设备档,亦即是一些串行端口的接口设备,如键盘、鼠标
	l(link)			连结档,亦即是Windows下的快捷方式
	s(socket)		资料接口文件,这种类型的档案通常被用在网络上的数据承接,在/var/run这个目录中可以看到这种档案
	p(FIFO,pipe)	数据输送文件,主要的目的在解决多个程序同时存取一个档案所造成的错误问题

dumpe2fs 参数  /dev/sda1	显示磁盘inode table,block group等信息

df	参数  目录或文件名		显示磁盘分区容量和类型,挂载点
	-a	列出所有的档案系统,包括系统特有的/proc等档案系统
	-k	以KBytes的容量显示各档案系统
	-m	以MBytes
	-h	以人们较易阅读的GBytes,MBytes,KBytes等格式自行显示
	-H	以M=1000K取代M=1024的进位方式
	-T	连同该partition的filesystem名称(例如ext3)也列出
	-i	不用硬盘容量,而以inode的数量来显示

du	参数  目录或文件名
	-a	列出所有的档案与目录容量,因为预设仅统计目录底下的档案量而已
	-h	以人们较易读的容量格式(G/M)显示
	-s	列出总量而已,而不列出每个各别的目录战胜容量
	-k	以KBytes列出容量显示
	-m	以MBytes

ln  参数  来源文件  目标文件
	-s	如果ln不加任何参数就进行连结,那就是hard link,-s就是symbolic link
	-f	如果目标文件存在时,就主动的将目标文件直接移除后再建立

fdisk  参数	 装置名称    分割磁盘
	-l	输出后面接的装置所有的partition内容,若仅有fdisk -l时,则系统会把整个系统内能够搜寻到的装置的partition均列出来

mke2fs  参数  装置名称
	-b	可以设定每个block的大小，目前支持1024,2048,4096 bytes三种
	-i	多少容量给一个inode
	-c	检查磁盘错误,仅下达一次-c时,会进行快速读取测试
		如果下达再次-c -c时,会进行读取测试,会很慢
	-L	可以接表头名称(Label)
	-j	本来mke2fs建立的是EXT2,加上-J后会主动加入journal而成为EXT3

mount	参数  装置名称代号  挂载点
	-a	依照/etc/fstab的内容将所有相关的磁盘都挂上来
	-n	一般来说,当我们挂载档案系统到Linux上头时,Linux会主动将目前的partition与filesystem还有对应的挂载点,都记录到/etc/mtab档案中,不过有些时刻(例如不正常关机导致一些问题,而进入单人维护模式)系统
	-L	取表头名称,可以用来挂载
	-t	指定挂载的系统类型(如ext3,ext2)
	--bind	将某个目录挂到另一个目录下面
	-o	额外参数
		async/sync		异步/同步
		auto/noauto		开机是否自动挂载
		rw/ro			只写/只读
		exec/noexec		限制在此档案系统内是否可以进行[执行]的工作
		user/nouser		是否允许使用者使用mount指令来挂载
		suid/nosuid		该档案系统是否允许suid存在
		usrquota		是否支持硬盘配额模式
		grpquota		是否支持群组硬盘配额模式
		defaults		同时具有rw,suid,dev,exec,auto,nouser,async等参数
	umount	装置或挂载点	卸载
	/etc/fstab			开机时按照这个文件里的内容可以自动挂载
	/etc/mtab /proc/mounts	实际filesystem的挂载记录
	partition id为82的是swap文件,mkswap /dev/sd[a-d][1-16],再启动,swapon /dev/sd[a-d][1-16]   swapoff 关闭虚拟内存

e2label	 装置名称  新的label名称

tune2fs  参数	装置代号
	-j	将ext2的filesystem转换为ext3的档案系统
	-l	类似dumpe2fs -h的功能～将superblock内的数据读出来
	-L	类似e2label的功能,可以修改filesystem的Label

hdparm	参数	装置名称
	-d	-d1启用dma模式
		-d0关闭dma模式

cd		变换目录
pwd		显示目前的目录
	-P	显示确实的路径,而非连续的路径
mkdir	建立一个新的目录
	-m	设定档案的权限,不需要看预设权限(umask)
	-p	直接将所需要的目录递归建立起来
rmdir	删除一个空的目录
	-p	连同上层[空的]目录一起删除
ls	参数	目录名称
	-a	全部的档案,连同隐藏档
	-A	全部的档案,但不包括.与..这两个目录
	-d	仅列出目录本身,而不是列出目录内的档案数据
	-f	直接列出结果,而不进行排序(ls预设会以档名排序)
	-F	根据档案、目录等信息，给予附加数据结构,如
		*	可执行档
		/	代表目录
		＝	代表socket档案
	-h	将档案容量以人较易阅读的方式列出来
	-i	列出inode位置,而非列出档案属性
	-l	长数据串行出,包含档案的属性等数据
	-n	列出UID与GID而非使用者与群组名称
	-r	将排序结果反射输出
	-R	连同子目录内容一起列出来
	-S	以档案容量大小排序
	-t	依时间排序
	--color=never	不要依据档案特性给予颜色显示
	--color=auto	让系统自行依据设定来判断是否给予颜色显示
	--color=always	显示颜色
	--full-time		以完整时间模式(包含年、月、日、时、分)输出
	--time={atime,ctime}	输出access时间或改变权限属性时间(ctime),而非内容改变时间

cp	参数  来源档  目的档	拷贝档案或目录
	-a	相当于-pdr的意思
	-d	若来源文件为连结文件的属性,则复制连结文件属性而非档案本身
	-f	为强制的意思,若有重复或其它疑问,不会询问使用者,而强制复制
	-i	若目的档已经存在时,在覆盖时会先询问是否真的动作
	-l	进行硬式连结(hard link)的连结档建立,而非复制档案本身
	-p	连同档案的属性一起复制进去,而非使用预设属性
	-r	递归持续复制,用于目录的复制行为
	-s	复制成为符号连结文件(symbolic link)
	-u	若目的档比来源档旧才更新

rm	参数  档案或目录	删除档案或目录
	-f	强制
	-i	互动模式,询问是否动作
	-r	递归删除

mv	参数  来源	目的		移动档案或目录,或更名
	-f	强制
	-i	若目标档案已经存在时,就会询问是否覆盖
	-u	若目标档案已经存在时,且来源比较新,才会更新(update)

basename  路径
	取得最后的名字
dirname	  路径
	取得除最后的名字外的其他

cat		由第一行开始显示档案内容
	-A	相当于-vET
	-E	将结尾的断行字符$显示出来
	-n	打印行号
	-T	将tab键以^I显示出来
	-v	列出一些看不出来的特殊字符
tac		由最后一行开始显示
nl		显示的时候,顺道输出行号
	-b	指定行号指定的方式,主要有两种
		-b a 表示不论是否为空行,也同样列出行号
		-b t 如果有空行,空的那一行不要列出行号
	-n	列出行号表示的方法,主要有三种
		-n ln 行号在屏幕的最左方显示
		-n rn 行号在自己字段的最右方显示,且不加0
		-n rz 行号在自己字段的最右方显示,且加0
	-w	行号字段的占用的位数
more	一页一页的显示档案内容
less	与more类似,但是比more更好,可以往前翻页
head	只看头几行
tail	只看尾几行
od		以二进制的方式读取档案内容
	-t	后面可以接各种类型
		a	利用预设的字符来输出
		c	使用ASCII字符来输出
		d[size]	利用十进制来输出,每个占用size bytes
		f[size]	利用浮点数
		o[size]	利用八进制
		x[size]	利用十六进制

touch	修改档案时间与建置新档
	-a	仅修订access time
	-c	仅修改时间,而不建立档案
	-d	后面可以接日期,也可以使用--date="日期或时间"
	-m	仅修改mtime
	-t	后面可以接时间,格式为[YYMMDDhhmm]

umask	目前使用者在建立档案或目录时候的属性默认值  若想永久有效,必须去修改~/.bashrc或/etc/bashrc
	-S	以r,w,x显示
	直接接数字就可以更改预设权限

chattr	参数  档案或目录名称	设定档案隐藏属性
	+	增加某一个特殊参数,其他原本存在参数则不动
	-	移除某一个特殊参数,其它原本存在参数则不动
	=	设定一定,且仅有反而接的参数
	A	当设定了A这个属性后,这个档案(或目录)的存取时间atime将不可被修改
	S	这个功能有点类似sync的功能!就是会将数据同步写入磁盘当中,可以有效的避免数据流失
	a	当设定a之后,这个档案只能增加数据,而不能删除,只有root才能设定这个属性	c	这个属性设定之后,将会自动的将此档案压缩,在读取的时候将会自动解压缩,但是在存储的时候会先压缩再存储(对大档案很有用)
	d	当dump(备份)程序被执行的时候,设定d属性将可使该档案(或目录)不具有dump功能
	i	可以让一个档案(不能被删除、改名、设定连续也无法写入或新增资料),对于系统安全性有相当大的帮助
	j	当使用ext3这个档案系统格式时,设定j属性将会使档案在写入时先记录在jouranl中!但是当filesystem设定参数为data=journalled时,由于系统已经设定了日志,所以这个属性无效
	s	当档案设定了s参数时,他将会被完全的移除出这个硬盘
	u	与s相反,当使用u来设定档案时,则数据内容其实还存在硬盘中,可以使用undeletion
lsattr	参数  档案或目录名称
	-a	将隐藏文件的属性也显示出来
	-R	连同子目录的数据也一并列出来

档案的特殊权限	
	Set UID		仅可以用在binary file,不能够用在批次档,让一般使用者在执行某些程序的时候,能够暂时的具有该程序拥有者的权限 s
	Set GID		若用在binary file上,则不论使用者是谁,在执行该程序时,他的有效群组将会变成该程序的群组所有人,若设定在目录上,则在该目录内所建立的档案或目录的group会变成此A目录的group s
	Sticky Bit	目前只针对目录有效,对于档案已经没有效果了,在具有SBit的目录下,使用者若在该目录下具有w及x的权限,则当使用者在该目录下建立档案或目录时,只有档案拥有者与root才有权力删除 t

file	档案	查阅档案的类型

which  参数	command  寻找执行档     在PATH中查找
	-a	将所有可以找到的指令均列出,而不止第一个被找到的指令
whereis	参数	档案或目录名  寻找特定档案		在PATH中查找
	-b	只找binary的档案
	-m	只找在说明文件manual路径下的档案
	-s	只找source来源档案
	-u	没有说明档的档案
locate	档案或目录名	在数据库中查找  updatedb 更新数据库
find  路径 参数 要查找的文件或目录名	
	-atime n:n为数字,意义在n天之前的[一天之内]被access过的档案
	-ctime n:被change过状态的档案
	-mtime n:被modefication过的档案
	-new file:file为一个存在的档案,意思是说,只要档案比file还要新,就会被列出来
	-uid n:n为数字,这个数字是使用者的账号ID,亦即UID,这个UID是记录在/etc/passwd里的
	-gid n:
	-user name:账号名称
	-group name:群组名称
	-nouser:寻找档案的拥有者不存在/etc/passwd的人
	-nogroup:寻找档案的拥有群组不存在/etc/group的档案
	-name file:搜寻名称为filename的档案
	-size [+-]SIZE:搜寻比SIZE还要大(+)或小(-)的档案,c代表byte
	-type TYPE:搜寻档案的类型为TYPE的,类型主要有:一般正规档案(f),装置档案(b,c),目录(d),连结档(l),socket(s),及FIFO(p)等属性
	-perm mode:搜寻档案属性[刚好等于]mode的档案,四位数的属性
	-perm -mode:搜寻档案属性[必须要全部囊括mode的属性]的档案
	-perm +mode:搜寻档案属性[包含任一mode的属性]
	-exec command:command为其它指令,-exec后面可再接额外的指令来处理搜寻到的结果
	-print 将结果打印到屏幕,这个动作是预设的
	-newer	file :比file新的文件就列出

compress  参数	档案或目录  .Z
	-d(uncompress)	解压缩 
	-r  可以连同目录下的档案也同时给予压缩
	-c	将压缩数据输出成为到屏幕
gzip,zcat	参数	档名	zcat:可以将压缩档案的内容读出来 .gz  .z
	-c	将压缩的数据输出到屏幕上,可透过数据流重导向来处理
	-d	解压缩
	-t	可以用来检验一个压缩档的一致性,看看档案有无错误
	-#  压缩等级,-1最快,但是压缩比最差,-9最慢,但是压缩比最好,预设是6
bzip2,bzcat  参数  档名   .bz2 .bz  .tbz  .tbz2
	-c	将压缩的过程产生的数据输出到屏幕上
	-d	解压缩的参数
	-z	压缩的参数
	-#	同上
tar  参数	档案与目录
	-c	建立一个压缩档案
	-x  解开一个压缩档案
	-t	查看tarfile里面的档案
	-z	是否同时具有gzip的属性

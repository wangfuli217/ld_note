复合数据类型需要用户自己定义

布尔类型包含两个不丗数字，一个叫真（true）另外一个叫假（false）

计算机里用0表示假1表示真

所有整数都可以当做布尔值使用，整数0当做布尔值使用时是假，所有其他整数当布尔值使用时都是真

一般不要把布尔类型作为专门的数据类型使用

数据类型和占位符之间的对应关系
char和unsigned char			%c
short						%hd
unsigned short				%hu
long						%ld
unsigned long				%lu
int							%d
unsigned int				%u
float						%f或%g
double						%lf或%lg,%f和%lf会保留小数点后面多余的0,%g和%lg不会保留

sizeof关键字可以用来计算一个数据类型或者一个数字所包含的字节个数
任何可以当作数字使用的内容都可以写在sizeof的小括号里

char(unsigned char)			1个字节
short(unsigned short)		2个字节
int(unsigned int)			4个字节
long(unsigned long)			4个字节
float						4个字节
double						8个字节

在sizeof小括号里对任何存储区内容的修改不会真正发生

scanf标准函数可以把用户在键盘上输入的数字记录在变量存储区里
为了使用这个函数需要包含stdio.h文件
一定要用存储区的地址表示存储区
在双引号里使用占位符表示存储区的类型
可以在一条函数调用语句里获得多个数据
不要在双引号里写不是占位符的内容
如果用户输入的数据格式和程序中希望的格式不一致就可能无法得到数字了

每个字节分成八段，每段只能记录一个0或者1
任何整数如果想记录在字节中就必须首先拆分成一串0或者1
可以把任何一个整数看成价格，根据这个价格拼凑出一盒巧克力，用一串0或者1表示这盒巧克力的样子。用这种办法就可以实现把整数拆分成一串0或者1的效果
使用一串0或者1记录数字的方法叫做二进制
计算机只能采用二进制方式记录数字
任何数字既可以采用十进制方式表示也可以采用二进制方式表示
在数字的二进制表示方式中每个数位有一个编号，最右边数位的编号是0向左依次递增
每个数位上的1代表的数字可以根据2的编号次方计算得到
如果两个相邻数位上的内容一样则他们代表的数字之间有倍数关系，左边数位是右边数位的2倍
用二进制方式表示的非负数符合上述规则
二进制加一时把最右边的所有连续1都变成0把最右边的0变成1

非负数的二进制转换十进制的时候只需要把其中每个1单独转换，然后把转换结果求和
不停对数字进行除以2取余操作，把所有余数按倒序书写就得到转换结果

负数十进制转换成二进制的方法
1.首先计算出相反数
2.把第一步的结果转换成二进制
3.把第二步的结果每个数位变成相反内容
4.把第三步的结果做加一操作

互为相反数的两个二进制表示方式，根据其中任何一个计算另一个都可以采用同样的办法
有符号类型最左边的二进制数位叫做符号位，如果符号位是0就表示是非负数，如果符号位是1就表示数字是负数

负数的二进制转换十进制
1.计算出相反数的二进制
2.把第一步的结果转换成十进制
3.把第二步的计算结果再次求相反数

把二进制从右向左每三个数位分成一组，每组单独转换成十进制结果一定在0到7之间。把所有组的转换结果按顺序书写就得到数字的八进制表示方式

可以在程序中用八进制方式表示数字，必须以0（零）开头
采用%o做占位符可以把一个整数的八进制表示方式打印在屏幕上

把二进制数字从右向左每四个数位分成一组，每组单独转换成十进制一定在0到15之间。如果转换结果在10到15之间用英文字母a到f表示。把所有转换结果按顺序书写就得到数字的十六进制表示方式。
可以在程序中使用十六进制方式表示数字，必须以0x（零）作为开头
采用%x或者%X作为占位符可以把数字的十六进制表示方式打印在屏幕上，打印结果中不包含0x开头
%x做占位符的时候打印结果中的英文字母都是小写的
%X做占位符的时候打印结果中的英文字母都是大写的

操作符用来在程序中描述对数字的处理方式
根据操作符所需要配合使用的数字个数把操作符分成单目操作符，双目操作符和三目操作符

C语言中使用+,-,*和/表示加减乘除四则运算符号
如果参与除法计算的两个数字都是整数则结果只保留整数部分
C语言中使用%表示取余操作

赋值操作符用=表示
赋值操作符要求左边是一个能代表存储区的内容，右边是一个能代表数字的内容
赋值操作符可以把右边的数字放在左边的存储区里
赋值语句可以当作数字使用，这个数字就是赋值完成后左边存储区里的数字
可以在一条语句中使用多个赋值操作符，先计算右边的赋值操作符然后计算左边的赋值操作符

绝大多数双目操作符都可以和赋值操作符合并形成复合赋值操作符，例如+=,*=等
复合赋值操作符也要求左边是一个代表存储的内容，右边是一个代表数字的内容
这个操作符首先把左右两边都当作数字使用按照双目操作符的规矩进行计算，然后把计算结果记录到左边的存储区里
复合赋值操作符的优先级和赋值操作符优先级一样低

自增操作符（++)和自减操作符（--）都是单目操作符，它们可以把一个存储区里的内容做加一或减一操作
这两个操作符必须和存储区配合使用
这两个操作符都有两种使用方法，前操作（操作符写在变量名称前）和后操作（操作符写在变量名称后）
不论是前操作还是后操作都可以把变量内容加一或者减一
这种表达式可以当数字使用，前操作当数字使用的时候是修改后的数据，后操作当数字使用的时候是修改前的数据。
不要在一条语句中对同一个变量多次进行自增自减运算，因为结果不确定

预习：
1.操作符（逻辑操作符，位操作符，三目操作符）
2.类型转换
3.分支（if分支和switch分支）

作业：
1.编写程序从键盘得到四个整数，把它们的求和结果打印在屏幕上


循环语句可以让程序中的一组语句反复多次运行
使用for关键字可以用来编写循环
可以在for循环中让一个变量依次代表一组数字，然后使用一组语句对每个数字做同样的处理
这个变量叫做循环变量
采用如下结构描述循环变量的变化过程
(把开始数字赋值给循环变量;
 用逻辑表达式描述循环变量和结束数字之间的关系;
循环变量每次的变化规律 )

假设有如下的for循环
for（1；2；3）
{
	4
}
它按照如下方式分组执行
[1,2][4,3,2][4,3,2]...[4,3,2]
只有第一组和其他组不同
正常情况下for循环一定在两组之间结束
如果某一组最后编号为2的语句结果为假则循环结束，否则启动下一组
正常情况下循环结束时循环变量不在数字范围内
for循环中大括号里面的语句有可能不执行

循环小括号里的每部分都可以不写
如果省略小括号里的逻辑表达式则计算机认为这个逻辑表达式的结果永远为真，这种循环不能正常结束，我们把这种循环叫做死循环

for循环小括号里前后两部分可以使用逗号连接多个语句

c99里允许在for循环小括号里临时声明循环变量
这种循环变量在循环结束后不能使用

可以在循环中使用break语句强制结束循环的执行
一旦执行了break语句则循环中的一切都不再执行了
采用这种方式结束循环后循环变量的数值一定在范围内

continue语句也可以用在循环里
它可以直接跳到循环大括号的末尾，中间的所有语句这次循环都不执行

如果编写循环时无法计算出循环要执行的次数就可以编写一个死循环，在循环内部采用分支加break语句的方式结束循环

rand标准函数可以用来获得一个随机数，为了使用这个标准函数需要包含stdlib.h文件

srand标准函数可以用来设置随机数种子
为了使用这个标准函数需要包含stdlib.h文件

time标准函数可以用来获得当前时间
为了使用这个标准函数需要包含time.h文件

分支和循环都是流程控制语句，它们都可以让程序中的语句不再从上到下顺序执行

goto也是一个流程控制语句，它可以指定任何一条语句成为下一条语句
一般不要使用goto语句

如果循环里还包含另外的循环则这种结构叫多重循环
一般最多不要超过三重

如果一个问题可以拆分成几组，拆分后的问题解决起来比较简单，就可以考虑采用多重循环的方式解决

while关键字也可以用来编写循环
while循环的格式如下
while(逻辑表达式）{
		反复执行的语句
		}
只要逻辑表达式为真就反复不停执行大括号里语句直到逻辑表达式结果为假循环结束

只要把逻辑表达式写成1则循环成为死循环

while循环里同样可以使用break和continue语句，效果和在for循环里使用一样

while循环有可能什么都不做

do-while格式也可以用来实现循环，这种循环至少会执行一次
这种循环必须在小括号后面用分号结束

预习：
1.缓冲区
2.数组

作业：
1.编写程序从键盘得到一个1到99之间的数字，把这个数字到100之间所有和7无关的数字打印在屏幕上


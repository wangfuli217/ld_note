marz@tarena.com.cn

数据结构的基本概念
概念：
	在计算机科学中，数据结构表示数据在计算机中的存储和组织形式，主要描述数据元素之间的逻辑关系和位置关系等
	一般来说，选择适当的数据结构可以提高计算机程序的运行效率（时间复杂度）和存储效率（空间复杂度）
	计算机程序设计 ＝数据结构＋算法

数据结构的三个层次
	逻辑结构 －抽象层
	主要描述的是数据元素之间的逻辑关系
	物理结构 －结构层
	主要描述的是数据元素之间的位置关系
	运算结构 －实现层
	主要描述的是如何实现该数据结构

逻辑结构的分类
	集合结构（集），集合结构不强调元素之间的任何关联性
		要描述所有的元素都属于一个总体，除了同属于一个集合外没有其他关系
	线性结构（表）
		要描述元素之间具有一对一的前后关系
		结构中必须存在唯一的首元素，结构中必须存在唯一的尾元素，除了首元素之外，结构中的每一个元素有且仅有一个前趋元素，除了尾元素之外，结构中的每一个元素有且仅有一个后继元素
	树型结构（树）
		要描述的是元素之间存在一对多的关系
		型结构中必须存在唯一的根元素，除了根元素外，结构中的每一个元素有且仅有一个前趋元素，除叶元素之外，结构中的每一个元素拥有一个到多个后继元素
	网络结构（图）
		要描述的是数据元素之间存在多对多的交叉映射关系，也叫做图形结构
		构中的每个元素都可以拥有多个任意数量的前趋和后继，结构中的任意两个元素都可以建立关联

物理结构的分类
	顺序结构
		顺序结构就是使用一组连续的存储单元依次存储逻辑上相邻的各个元素
		顺序结构可以记录计算机程序设计语言（如C/C++）提供的数组类型加以描述
		优点：
			只需要申请存放数据本身的内存空间即可，不需要额外的内存来表达数据元素之间的逻辑关系
			支持下标访问，实现随机访问
		缺点：连续的存储空间导致内存空间的利用率比较低
			  向顺序存储结构中插入/删除元素时，可能需要移动大量元素			
	链式结构
		表示在计算机中使用一组任意的存储单元来存储所有的元素（这组存储单元可以是连续的也可以是不连续的），不要求逻辑上相邻的元素在物理位置上也相邻
		链式存储结构不使用连续的存储空间存放结构中的元素，而是为每一个元素构造一个结点，节点中除了存放数据本身以外还需要存放指向下一个结点的指针
		绝大多数程序设计语言(如C/C++)都没有提供用于描述链式存储结构的数据类型，需要编写额外的代码去实现
		优点：
			不采用连续的存储空间导致内存空间的利用率比较高
			克服顺序存储结构中预知元素个数的缺点
			插入/删除元素时，不需要移动大量元素
		缺点：
			除了申请存放数据本身的内存空间外，还需要额外的空间来表达数据元素之间的逻辑关系
			不支持下标访问和随机访问

逻辑结构和物理结构的关系
每种逻辑结构采用何种物理结构来实现，并没有具体的规定，通常根据实现的难易程度，以及在时间复杂度和空间复杂度方面的要求，来选择合适的物理结构

运算结构
创建和销毁
分配资源、建立结构、释放资源
int arr[5]; => 栈区，系统自动分配内存和回收内存
插入和删除
增加 和 减少元素
获取和遍历
查看具体的元素值以及遍历结构中的所有元素
修改和排序
修改元素的值，采用排序算法进行排序

堆栈结构
具有后进先出特性的数据结构叫做堆栈
LIFO(last in first out)
堆栈是一种只能在一端增删元素的数据结构，该位置称为栈顶

基于顺序存储结构的堆栈实现
创建、销毁、入栈操作、出栈操作、查看栈顶元素、判断栈是否为空、判断栈是否为满、计算栈中元素的个数、遍历栈中元素

基于链式存储结构的堆栈实现
创建、销毁、...


作业：
	参考例子02arrStack.c中的代码，去实现堆栈的其他操作

预习：
	1.队列
	2.链表


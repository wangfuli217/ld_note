线程的同步问题
	使用信号量实现线程的同步问题
		基本概念
			信号量 - 本质就是一个计数器,主要用于控制同时访问共享资源的进程数/线程数
			当信号量的值是1时,效果等同于互斥量
	信号量的使用流程
		#include<semaphore.h>
		定义信号量
			sem_t sem;
		初始化信号量
			sem_init(&sem,0/*表示几个进程共享该信号量*/,可用资源的数目);
		获取一个信号量(减1)
			sem_wait(&sem);
		使用共享资源
		释放一个信号量(加1)
			sem_post(&sem);
		如果不再使用,则销毁信号量
			sem_destory(&sem);

使用条件变量实现线程的同步问题
	生产者和消费者模型(重点掌握)(以后DMS项目中讲解此知识点)

综合小项目
	项目名称
		基于TCP协议模型的聊天室
	项目功能
		实现支持100人聊天的聊天室,每个用户都需要输入一个昵称,然后输入要发送的内容进行发送到服务器,其他用户通过服务器接收消息,并且可以回发消息
	项目的架构和设计
		采用C/S架构进行设计
		服务器
			按照TCP模型中的七步走进行编码
			不断地响应客户端连接请求,使用while(1)循环
			同时响应多个客户端在线,采用多线程实现
			针对每一个客户端,又需要不断地进行通信,无限循环
			针对每一个客户端来说,先读取消息再转发给其他人
			采用数组来存储每一个连接成功的客户端地址/描述符
			客户端发送"bye"表示下线,则服务器对应的线程应该终止运行,pthread_exit,需要考虑客户端强制退出的特殊处理(recv函数)
			当出现客户端下线时,标记数组中对应的描述符无效,以便于下次群发时跳过该客户端
			使用信号ctrl+c来关闭服务器
		客户端
			按照TCP模型中的五步走进行编码
			客户端同时发送消息和接收消息,采用多线程的技术
			客户端发送"bye"时,表示下线
		项目的要求
			要求每位同学都实现上述功能
			聊天功能实现之后,考虑传输文件的功能并实现
			考虑使用多线程和网络编程的技术重构银行项目

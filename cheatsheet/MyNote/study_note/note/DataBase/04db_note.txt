事务
	概念:在进行DML操作时需要把多个逻辑相关的语句看成一个整体

	举例
		update account set monet=money-48880 where ano='A';
		update account set monet=money-48880 where ano='B';

事务的四大特性
	原子性:事务中的语句是一个不可分割的整体
	一致性:事务中的语句要么一起成功,要么一起失败
	隔离性:一个事务的操作在没有提交之前数据的变化对另外一个事务而言是隔离的
	持久性:一直保持

如何实现?
	update account set monet=money-48880 where ano='A';
	fa;
	update account set monet=money-48880 where ano='B';
	fb;
	if(fa==0 && fb==0)
		exec sql commit;
	else
		exec sql rollback;

保存点(了解)
	insert .....a1;
	savepoint a;
	insert .....b1;
	savepoint b;
	insert .....c1;
	rollback to a;
	commit;

约束 constraint
	概念:数据库中的表中的字段可以加一些限制规则,数据满足条件才能进入表,否则不能
	数据库中约束的分类
		主键约束	primary key(pk)		如果对表中某个字段加了主键约束则这个字段的值不能重复,并且值不能是NULL值,主键字段一张表只能有一个 
		唯一性约束	unique(uk)			字段的值不能重复,可以是NULL值,无法对NULL值进行区分
		非空约束	not null(nn)		字段的值不能是NULL值
		检查约束	check(ck)			字段的值必须符合检查条件
		外键约束	references	foreign key(fk)

约束的实现
	列级约束:在定义表的某一列时,在这一列后面直接对这一列加约束限制
	表级约束:在定义完表的所有列之后,再选择某些列加约束限制 
	
主键约束 ----列级实现
	create table emp928(
			id number primary key,
			name varchar2(30),
			salary number
			);
	insert into emp928 values(1,'test1',9527);
	如果不给一个约束起名字,则系统会提供一个不重名的约束名,但这个名字不方便记忆和管理
	给约束命名:constraint  表名_字段名_约束类型简写

	create table emp928( 
			id number constraint emp928_id_pk primary key,
			name varchar2(30),
			salary number
			);  
	insert into emp928 values(1,'test1',9527);

使用列级约束完成下面的表
	建立一张员工表empn
	建表之前先删除之前的表
	id number primary key
	fname varchar2(30) unique
	sname varchar2(30) not null
	salary number  要求工资符合检查条件大于3500

	drop table emp928;
	create table emp928(
			id  number constraint emp928_id_pk primary key,
			fname varchar2(30) constraint emp928_fname_uk unique,
			sname varchar2(3) constraint emp928_sname_nn not null,
			salary number constraint emp928_salary_ck check(salary>3500)
			);
	insert into emp928 values(2,'a2','a2',3501);


主键约束		表级约束  优势在于可以做联合约束
	drop table emp928;
	create table emp928(
			id number,
			fname varchar2(30),
			sname varchar2(30),
			salary  number,
			constraint emp928_id_pk primary key(id),
			constraint emp928_fname_uk  unique(fname),
			constraint emp928_salary_ch check(salary>3500)
			);

外键约束
	概念:外键约束涉及到两张表 一张父表(主表),一张子表(从表)
	子表:定义了外键的表就是子表
	外键子段的取值 要么取NULL值,要么取父表中字段对应的值
	
	语法
		建立表
			先建立父表,后建立子表,除非先不考虑主外键关系
			create table parent928(
					id number primary key,
					name varchar2(30)
					);
			create table child928(
					id number primary key,
					name varchar2(30),
					fid number constraint child928_fid_fk 
					references parent928(id)
					);
		插入数据
			先插入父表数据,后插入子表中的数据,除非子表中的外键值使用NULL值
			insert into child928 values(1,'a',NULL);
			commit;
			insert into parent928 values(1,'pa');
			insert into child928 values(2,'child',1);

		删除数据
			删除数据时应该先删除子表中对应的数据,后删除父表中对应的数据

		删除表
			一般先删除子表,后删除父表,除非使用cascade constraints(先断开主外键关系 后删表)
			drop table parent928;
			unique/primary keys in table referenced by foreign keys

			drop table parent928 cascade constraints;

		练习:
			建立一张部门表 和 一张员工表,建表之前先删表,不要忘记提交数据
			drop table dept928 cascade constraints;
			drop table emp928;
			create table dept928(
					did  number primary key,
					dname varchar2(30)
					);
			create table emp928(
					eid number primary key,
					ename varchar2(30) not null,
					esalary number not null,
					dept_id number constraint emp928_dept_id_fk references dept928(did)  on delete set null
					);
			insert into dept928 values(1,'test1');
			insert into dept928 values(2,'test2');
			insert into emp928 values(1,'ea',5000,1);
			insert into emp928 values(2,'eb',7000,1);
			insert into emp928 values(3,'ec',8500,1);
			insert into emp928 values(4,'ed',12000,2);
			insert into emp928 values(5,'ee',18000,2);
			commit;

		编写SQL的脚本,起名deptemp.sql
		把脚本上传到数据库服务器
		ftp 192.168.0.23  csd1503 csd1503
		ftp>put 文件名
		在服务器上的sqlplus中执行脚本
		SQL>@路径/脚本名.sql

在外键上设置级联
	级联删除	on delete cascade
		删除父表数据时会自动把子表中关联的数据删除掉
	级联置空	on delete set null
		删除父表数据时会自动把子表关联的数据的外键设置成NULL

外键的表集约束
		create table emp928(
				eid number primary key,
				ename varchar2(30) not null,
				esalary number not null,
				dept_id number,
				constraint emp928_dept_id_fk foreign key(dept_id) references dept928(did)  on delete cascade
				);

先建立表,再加外键
	s_dept(主表)  s_emp(子表)
	alter table 表名 add 表级约束法
	参考summit2_drop.sql的1270-1271行


数据库中的其它对象
	序列  sequence
		作用:在数据库中用来产生主键的值的
	如何建立序列
		create sequence 序列名;
	如何使用
		insert into 表名 values(序列名.nextval,序列名.currval);
	举例
		create table test928seq(
				id number primary key,
				name varchar2(30)
				);
		create sequence test928seq_id;
		insert into test928seq values(test928seq_id.nextval,'test'||test928seq_id.currval);

删除序列
	drop sequence 序列名;

明日
	索引(了解)
	视图(了解)

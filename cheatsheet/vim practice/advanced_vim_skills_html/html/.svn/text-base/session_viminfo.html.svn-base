<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>第 3 章  使用会话(session)和viminfo</title><link rel="stylesheet" href="http://easwy.com/blog/uploads/css/style.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.73.2"><link rel="start" href="index.html" title="vim使用进阶"><link rel="up" href="index.html" title="vim使用进阶"><link rel="prev" href="prologue.html" title="第 2 章 序言"><link rel="next" href="vimrc_info.html" title="第 4 章 vimrc初步"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">第 3 章 
    使用会话(session)和viminfo
  </th></tr><tr><td width="20%" align="left"><a accesskey="p" href="prologue.html">上一页</a> </td><th width="60%" align="center"> </th><td width="20%" align="right"> <a accesskey="n" href="vimrc_info.html">下一页</a></td></tr></table><hr></div><div class="chapter" lang="zh-CN"><div class="titlepage"><div><div><h2 class="title"><a name="session_viminfo"></a>第 3 章 
    使用会话(session)和viminfo
  </h2></div></div></div><p>
    <span class="bold"><strong>&lt;&lt; </strong></span><a class="link" href="http://easwy.com/blog/archives/advanced-vim-skills-catalog/">返回vim使用进阶: 目录</a>
</p><p>
    本节所用命令的帮助入口：
  </p><pre class="programlisting">
:help mksession
:help 'sessionoptions'
:help source
:help wviminfo
:help rviminfo
:help 'viminfo'
</pre><p>
    很多软件都具有这样一种功能：在你下一次启动该软件时，它会自动为你恢复到你上次退出的环境，恢复窗口布局、所打开的文件，甚至是上次的设置。
  </p><p>
    那么，vim有没有这种功能呢？
  </p><p>
    答案当然是肯定的！这需要使用vim的会话(session)及viminfo的保存和恢复功能。
  </p><p>
    使用会话(session)和viminfo，可以把你编辑环境保存下来，然后你在下次启动vim后，可以再恢复回这个环境。我们在开发项目或书写文档时，其周期不是一两天。如果你在中途退出了vim而不能恢复原先的编辑环境的话，你又要重新打开你所打开的文件，重新定义你的映射(map)、缩写(abbreviate)，重新定位你所设定的标记的位置(mark)，重新设置项目相关设置(options)......不是一般的麻烦！
  </p><p>
    要恢复上次的编辑环境，我们需要保存两种不同的信息，一种是会话(session)信息，另外一种是viminfo信息。
  </p><div class="itemizedlist"><ul type="disc"><li>
      会话信息中保存了所有窗口的视图，外加全局设置。
    </li><li>
      viminfo信息中保存了命令行历史(history)、搜索字符串历史(search)、输入行历史、非空的寄存器内容(register)、文件的位置标记(mark)、最近搜索/替换的模式、缓冲区列表、全局变量等信息。
    </li></ul></div><p>
    我们在下面分别对其进行介绍。
  </p><p><span class="bold"><strong>[会话]</strong></span></p><p>
    我们可以使用<span class="command"><strong>:mksession [file]</strong></span>命令来创建一个会话文件，如果省略文件名的话，会自动创建一个名为Session.vim的会话文件。会话文件，其本质上是一个vim脚本，你可以使用上述命令生成一个session文件，然后再查看其中的内容，就会对session文件有一个深入的认识。
  </p><p>
    会话文件中保存哪些信息，是由<span class="emphasis"><em>'sessionoptions'</em></span>选项决定的。缺省的<span class="emphasis"><em>'sessionoptions'</em></span>选项包括: "blank,buffers,curdir,folds,help,options,tabpages,winsize"， 也就是会话文件会恢复当前编辑环境的空窗口、所有的缓冲区、当前目录、折叠(fold)相关的信息、帮助窗口、所有的选项和映射、所有的标签页(tab)、窗口大小。
  </p><p>
    如果你使用windows上的vim，并且希望你的会话文件可以同时被windows版本的vim和UNIX版本的vim共同使用的话，在<span class="emphasis"><em>'sessionoptions'</em></span>中加入<span class="emphasis"><em>'slash'</em></span>和<span class="emphasis"><em>'unix'</em></span>，前者把文件名中的'\'替换为'/'，后者会把会话文件的换行符保存成unix格式。
  </p><p>
    如果你不希望在session文件中保存当前路径，而是希望session文件所在的目录自动成为当前工作目录，那么，需要在<span class="emphasis"><em>'sessionoptions'</em></span>去掉<span class="emphasis"><em>'curdir'</em></span>,加入<span class="emphasis"><em>'sesdir'</em></span>，这样每次载入session件时，此文件所在的目录就被设为vim的当前工作目录。在你通过网络访问其它项目的session文件时，或者你的项目有多个不同版本（位于不同的目录），而你想始终使用一个session文件时，这个选项比较有用：你只需要把session文件拷贝到不同的目录，然后使用就可以了。设置此选项后，session文件中保存的是文件的相对路径，而不是绝对路径。
  </p><p>
    我们在上面使用<span class="command"><strong>:mksession</strong></span>命令创建了会话文件，那么怎么使用会话文件恢复编辑环境呢？很简单，你只需要使用<span class="command"><strong>:source session-file</strong></span>来导入会话文件。因为会话文件是一个脚本，里面保存的是Ex命令，所以"<span class="command"><strong>source</strong></span>"命令只是把会话文件中的Ex命令执行一遍。
  </p><p><span class="bold"><strong> [viminfo] </strong></span> </p><p>
    使用<span class="command"><strong>:wviminfo [file]</strong></span>命令，可以手动创建一个viminfo文件。
  </p><p>
    其实，在vim退出时，每次都会保存一个.viminfo文件在用户的主目录。我们使用<span class="command"><strong>:wviminfo</strong></span>命令则是手动创建一个viminfo文件，因为缺省的.viminfo文件会在每次退出vim时自动更新，谁知道你在关闭当前软件项目后，又使用vim做过些什么呢？这样的话，.viminfo中的信息，也许就与你所进行的软件项目无关了。还是手动保存一个保险。
  </p><p>
    ":wviminfo"命令保存哪些内容，以及保存的数量，由<span class="emphasis"><em>'viminfo'</em></span>选项决定，这个选项的值在windows上和在linux上的缺省值不同，具体含义参阅手册。
  </p><p>
    要读入你所保存的viminfo文件，使用<span class="command"><strong>:rviminfo [file]</strong></span>命令。
  </p><p>
    现在，回到我们的例子，依旧是上篇文章中的抓图，先看一下我们当前目录，执行<span class="command"><strong>:pwd</strong></span>，显示"/home/easwy/src/vim70"，接下来，执行下面的命令：
  </p><pre class="programlisting">
:cd src                            "切换到/home/easwy/src/vim70/src目录
:set sessionoptions-=curdir        "在session option中去掉curdir
:set sessionoptions+=sesdir        "在session option中加入sesdir
:mksession vim70.vim               "创建一个会话文件
:wviminfo vim70.viminfo            "创建一个viminfo文件
:qa                                "退出vim
</pre><p>
    退出vim后，在命令行下执行<span class="command"><strong>gvim &amp;</strong></span>，再次进入vim，这时看到的是一个空白窗口。然后执行下面的命令：
  </p><pre class="programlisting">
:source ~/src/vim70/src/vim70.vim  '载入会话文件
:rviminfo vim70.viminfo            '读入viminfo文件
</pre><p>
    太棒了，又恢复到昨天退出时的状态了！继续工作~~~~
  </p><p>
    不过，每次都要手工修改<span class="emphasis"><em>'sessionoptions'</em></span>或<span class="emphasis"><em>'viminfo'</em></span>吗？多麻烦啊......别着急，现在是时候介绍<a class="link" href="http://easwy.com/blog/archives/advanced-vim-skills-introduce-vimrc/">vimrc</a>了，请移步下一章: vimrc初步。
  </p><p><span class="bold"><strong>[参考文档]</strong></span> </p><div class="orderedlist"><ol type="1"><li>
      vim手册
    </li><li><a class="link" href="http://vimcdoc.sourceforge.net/">vim中文手册</a></li></ol></div><p>
    <span class="bold"><strong>&lt;&lt; </strong></span><a class="link" href="http://easwy.com/blog/archives/advanced-vim-skills-catalog/">返回vim使用进阶: 目录</a>
</p><p><span class="bold"><strong>原创文章，转载请注明：</strong></span>转载自<a class="link" href="http://easwy.com/blog/">Easwy的博客</a> [  <a class="link" href="http://easwy.com/blog/">http://easwy.com/blog/</a> ]</p><p><span class="bold"><strong>　　　　本文链接地址:</strong></span> <a class="link" href="http://easwy.com/blog/archives/advanced-vim-skills-session-file-and-viminfo/">http://easwy.com/blog/archives/advanced-vim-skills-session-file-and-viminfo/</a></p></div><div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="prologue.html">上一页</a> </td><td width="20%" align="center"> </td><td width="40%" align="right"> <a accesskey="n" href="vimrc_info.html">下一页</a></td></tr><tr><td width="40%" align="left" valign="top">第 2 章 序言 </td><td width="20%" align="center"><a accesskey="h" href="index.html">起始页</a></td><td width="40%" align="right" valign="top"> 第 4 章 vimrc初步</td></tr></table></div></body></html>

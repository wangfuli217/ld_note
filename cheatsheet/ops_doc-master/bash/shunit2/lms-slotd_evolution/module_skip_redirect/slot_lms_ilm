#!/bin/bash

######## protocol [ilm]     ########
#### ilm-info-set slot direct count distances ...
test_slotd_ILM_info_set() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  # direct 1
  output="$($SLOTD ilm-info-set "${ILM_SLOT}" 1 6 3 4 5 3 4 5)"
  status=$?

  assertTrue "$SLOTD ilm-info-set ${ILM_SLOT} 1 6 3 4 5 3 4 5 @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 1 6 3 4 5 3 4 5 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 1 6 3 4 5 3 4 5 @output:${output}" "${output}" "direct"

  # direct 2
  output="$($SLOTD ilm-info-set "${ILM_SLOT}" 2 6 3 4 5 3 4 5)"
  status=$?

  assertTrue "$SLOTD ilm-info-set ${ILM_SLOT} 2 6 3 4 5 3 4 5 @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 2 6 3 4 5 3 4 5 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 2 6 3 4 5 3 4 5 @output:${output}" "${output}" "direct"

  # direct 3
  output="$($SLOTD ilm-info-set "${ILM_SLOT}" 3 6 3 4 5 3 4 5)"
  status=$?

  assertTrue "$SLOTD ilm-info-set ${ILM_SLOT} 3 6 3 4 5 3 4 5 @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 3 6 3 4 5 3 4 5 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 3 6 3 4 5 3 4 5 @output:${output}" "${output}" "direct"

  # direct 4
  output="$($SLOTD ilm-info-set "${ILM_SLOT}" 4 6 3 4 5 3 4 5)"
  status=$?

  assertTrue "$SLOTD ilm-info-set ${ILM_SLOT} 4 6 3 4 5 3 4 5 @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 4 6 3 4 5 3 4 5 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-set ${ILM_SLOT} 4 6 3 4 5 3 4 5 @output:${output}" "${output}" "direct"
}

test_slotd_ILM_e_info_set() {
  [ -z "${ILM_E_SLOT:-}" ] && startSkipping
  # direct 1
  while read -r direct stations station_array; do
    output="$($SLOTD ilm-e-info-set ${ILM_E_SLOT} ${direct} ${stations} ${station_array})"
    status=$?
    assertTrue "$SLOTD ilm-e-info-set ${ILM_E_SLOT} ${direct} ${stations} ${station_array} @ret:${status} @output:${output}" "${status}"
    assertContains "$SLOTD ilm-e-info-set ${ILM_E_SLOT} ${direct} ${stations} ${station_array}@output:${output}" "${output}" "ilm_e"
    assertContains "$SLOTD ilm-e-info-set ${ILM_E_SLOT} ${direct} ${stations} ${station_array}@output:${output}" "${output}" "direct"
  done <<EOF
1 6     3 4 5 3 4 5
2 6     3 4 5 3 4 5
3 6     3 4 5 3 4 5
4 6     3 4 5 3 4 5
EOF
}

test_slotd_ILM_info_get() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  # direct 1
  output="$($SLOTD ilm-info-get "${ILM_SLOT}" 1)"
  status=$?

  assertEquals "$SLOTD ilm-info-get ${ILM_SLOT} 1 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 1 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 1 @output:${output}" "${output}" "distances"

  # direct 2
  output="$($SLOTD ilm-info-get "${ILM_SLOT}" 2)"
  status=$?

  assertEquals "$SLOTD ilm-info-get ${ILM_SLOT} 2 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 2 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 2 @output:${output}" "${output}" "distances"

  # direct 3
  output="$($SLOTD ilm-info-get "${ILM_SLOT}" 3)"
  status=$?

  assertEquals "$SLOTD ilm-info-get ${ILM_SLOT} 3 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 3 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 3 @output:${output}" "${output}" "distances"

  # direct 4
  output="$($SLOTD ilm-info-get "${ILM_SLOT}" 4)"
  status=$?

  assertEquals "$SLOTD ilm-info-get ${ILM_SLOT} 4 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 4 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-info-get ${ILM_SLOT} 4 @output:${output}" "${output}" "distances"
}

test_slotd_ILM_e_info_get() {
  [ -z "${ILM_E_SLOT:-}" ] && startSkipping
  # direct 1
  while read -r direct stations station_array; do
    output="$($SLOTD ilm-e-info-get ${ILM_E_SLOT} ${direct})"
    status=$?
    assertTrue "$SLOTD ilm-e-info-get ${ILM_E_SLOT} ${direct}@ret:${status} @output:${output}" "${status}"
    assertContains "$SLOTD ilm-e-info-get ${ILM_E_SLOT} ${direct} @output:${output}" "${output}" "ilm_e"
    assertContains "$SLOTD ilm-e-info-get ${ILM_E_SLOT} ${direct} @output:${output}" "${output}" "direct"
    assertContains "$SLOTD ilm-e-info-get ${ILM_E_SLOT} ${direct} @output:${output}" "${output}" "${station_array}"
  done <<EOF
1 6     3 4 5 3 4 5
2 6     3 4 5 3 4 5
3 6     3 4 5 3 4 5
4 6     3 4 5 3 4 5
EOF
}

test_slotd_ILM_result_set() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  startSkipping # implemented at mcu card
  # direct 1
  output="$($SLOTD ilm-result-set "${ILM_SLOT}" 1 6 4.22 5.23 6.12 4.22 5.23 6.12)"
  status=$?

  assertEquals "$SLOTD ilm-result-set ${ILM_SLOT} 1 6 4.22 5.23 6.12 4.22 5.23 6.12 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 1 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 1 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "direct"

  # direct 2
  output="$($SLOTD ilm-result-set "${ILM_SLOT}" 2 6 4.22 5.23 6.12 4.22 5.23 6.12)"
  status=$?

  assertEquals "$SLOTD ilm-result-set ${ILM_SLOT} 2 6 4.22 5.23 6.12 4.22 5.23 6.12 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 2 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 2 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "direct"

  # direct 3
  output="$($SLOTD ilm-result-set "${ILM_SLOT}" 3 6 4.22 5.23 6.12 4.22 5.23 6.12)"
  status=$?

  assertEquals "$SLOTD ilm-result-set ${ILM_SLOT} 3 6 4.22 5.23 6.12 4.22 5.23 6.12 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 3 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 3 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "direct"

  # direct 4
  output="$($SLOTD ilm-result-set "${ILM_SLOT}" 4 6 4.22 5.23 6.12 4.22 5.23 6.12)"
  status=$?

  assertEquals "$SLOTD ilm-result-set ${ILM_SLOT} 4 6 4.22 5.23 6.12 4.22 5.23 6.12 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 4 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-set ${ILM_SLOT} 4 6 4.22 5.23 6.12 4.22 5.23 6.12 @output:${output}" "${output}" "direct"
}

test_slotd_ILM_result_get() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  startSkipping # implemented at mcu card
  # direct 1
  output="$($SLOTD ilm-result-get "${ILM_SLOT}" 1)"
  status=$?

  assertEquals "$SLOTD ilm-result-get ${ILM_SLOT} 1 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 1 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 1 @output:${output}" "${output}" "rssts"

  # direct 2
  output="$($SLOTD ilm-result-get "${ILM_SLOT}" 2)"
  status=$?

  assertEquals "$SLOTD ilm-result-get ${ILM_SLOT} 2 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 2 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 2 @output:${output}" "${output}" "rssts"

  # direct 2
  output="$($SLOTD ilm-result-get "${ILM_SLOT}" 3)"
  status=$?

  assertEquals "$SLOTD ilm-result-get ${ILM_SLOT} 3 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 3 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 3 @output:${output}" "${output}" "rssts"

  # direct 2
  output="$($SLOTD ilm-result-get "${ILM_SLOT}" 4)"
  status=$?

  assertEquals "$SLOTD ilm-result-get ${ILM_SLOT} 4 @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 4 @output:${output}" "${output}" "ilm"
  assertContains "$SLOTD ilm-result-get ${ILM_SLOT} 4 @output:${output}" "${output}" "rssts"
}

test_slotd_ILM_advt_tpwu() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  output="$($SLOTD ilm-advt-tpwu "${ILM_SLOT}" "${TPWU_SLOT}")"
  status=$?

  assertEquals "$SLOTD ilm-advt-tpwu ${ILM_SLOT} ${TPWU_SLOT} @ret:${status} @output:${output}" 0 "${status}"
  assertContains "$SLOTD ilm-advt-tpwu ${ILM_SLOT} ${TPWU_SLOT} @output:${output}" "${output}" "tpwu"
}

test_slotd_ILM_e_advt_tpwu() {
  [ -z "${ILM_E_SLOT:-}" ] && startSkipping
  output="$($SLOTD ilm-e-advt-tpwu "${ILM_E_SLOT}" "${TPWU_SLOT}")"
  status=$?

  assertTrue "$SLOTD ilm-e-advt-tpwu ${ILM_E_SLOT} ${TPWU_SLOT} @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-e-advt-tpwu ${ILM_E_SLOT} ${TPWU_SLOT} @output:${output}" "${output}" "tpwu"
}

test_slotd_ILM_status_get() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  output="$($SLOTD ilm-status-get "${ILM_SLOT}")"
  status=$?

  assertTrue "$SLOTD ilm-status-get ${ILM_SLOT} @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-status-get ${ILM_SLOT} @output:${output}" "${output}" "ilm"
}

test_slotd_ILM_e_status_get() {
  [ -z "${ILM_E_SLOT:-}" ] && startSkipping
  output="$($SLOTD ilm-e-status-get "${ILM_E_SLOT}")"
  status=$?

  assertTrue "$SLOTD ilm-e-status-get ${ILM_E_SLOT} @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-e-status-get ${ILM_E_SLOT} @output:${output}" "${output}" "ilm_e"
}

test_slotd_ILM_conf_get() {
  [ -z "${ILM_SLOT:-}" ] && startSkipping
  output="$($SLOTD ilm-conf-get "${ILM_SLOT}")"
  status=$?

  assertTrue "$SLOTD ilm-conf-get ${ILM_SLOT} @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-conf-get ${ILM_SLOT} @output:${output}" "${output}" "direct"
}

test_slotd_ILM_e_conf_get() {
  [ -z "${ILM_E_SLOT:-}" ] && startSkipping
  output="$($SLOTD ilm-e-conf-get "${ILM_E_SLOT}")"
  status=$?

  assertTrue "$SLOTD ilm-e-conf-get ${ILM_E_SLOT} @ret:${status} @output:${output}" "${status}"
  assertContains "$SLOTD ilm-e-conf-get ${ILM_E_SLOT} @output:${output}" "${output}" "direct"
}

suite_addTest test_slotd_ILM_info_set
suite_addTest test_slotd_ILM_e_info_set
suite_addTest test_slotd_ILM_info_get
suite_addTest test_slotd_ILM_e_info_get
suite_addTest test_slotd_ILM_result_set
suite_addTest test_slotd_ILM_result_get
suite_addTest test_slotd_ILM_advt_tpwu
suite_addTest test_slotd_ILM_e_advt_tpwu
suite_addTest test_slotd_ILM_status_get
suite_addTest test_slotd_ILM_e_status_get
suite_addTest test_slotd_ILM_conf_get
suite_addTest test_slotd_ILM_e_conf_get
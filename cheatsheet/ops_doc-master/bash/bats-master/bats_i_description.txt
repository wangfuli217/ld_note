bats_i_description(){ cat - << 'EOF'
0.4.0 (August 13, 2014)
    Improved the display of failing test cases. Bats now shows the source code of failing test lines, along with full stack traces including function names, filenames, and line numbers.
    Improved the display of the pretty-printed test summary line to include the number of skipped tests, if any.
    Improved the speed of the preprocessor, dramatically shortening test and suite startup times.
    Added support for absolute pathnames to the load helper.
    Added support for single-line @test definitions.
    Added bats(1) and bats(7) manual pages.
    Modified the bats command to default to TAP output when the $CI variable is set, to better support environments such as Travis CI.

0.3.1 (October 28, 2013)
    Fixed an incompatibility with the pretty formatter in certain environments such as tmux.
    Fixed a bug where the pretty formatter would crash if the first line of a test file's output was invalid TAP.

0.3.0 (October 21, 2013)
    Improved formatting for tests run from a terminal. Failing tests are now colored in red, and the total number of failing tests is displayed at the end of the test run. When Bats is not connected to a terminal (e.g. in CI runs), or when invoked with the --tap flag, output is displayed in standard TAP format.
    Added the ability to skip tests using the skip command.
    Added a message to failing test case output indicating the file and line number of the statement that caused the test to fail.
    Added "ad-hoc" test suite support. You can now invoke bats with multiple filename or directory arguments to run all the specified tests in aggregate.
    Added support for test files with Windows line endings.
    Fixed regular expression warnings from certain versions of Bash.
    Fixed a bug running tests containing lines that begin with -e.

0.2.0 (November 16, 2012)
    Added test suite support. The bats command accepts a directory name containing multiple test files to be run in aggregate.
    Added the ability to count the number of test cases in a file or suite by passing the -c flag to bats.
    Preprocessed sources are cached between test case runs in the same file for better performance.

0.1.0 (December 30, 2011)
    Initial public release.
EOF
}



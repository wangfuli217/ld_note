cansniffer: option requires an argument -- 'h'

Usage: cansniffer [can-interface]
Options: -m <mask>  (initial FILTER default 0x00000000)
         -v <value> (initial FILTER default 0x00000000)
         -q         (quiet - all IDs deactivated)
         -r <name>  (read sniffset.name from file)
         -b         (start with binary mode)
         -B         (start with binary mode with gap - exceeds 80 chars!)
         -c         (color changes)
         -f         (filter on CAN-ID only)
         -t <time>  (timeout for ID display [x10ms] default: 500, 0 = OFF)
         -h <time>  (hold marker on changes [x10ms] default: 100)
         -l <time>  (loop time (display) [x10ms] default: 20)
Use interface name 'any' to receive from all can-interfaces

commands that can be entered at runtime:

q<ENTER>       - quit
b<ENTER>       - toggle binary / HEX-ASCII output
B<ENTER>       - toggle binary with gap / HEX-ASCII output (exceeds 80 chars!)
c<ENTER>       - toggle color mode
#<ENTER>       - notch currently marked/changed bits (can be used repeatedly)
*<ENTER>       - clear notched marked
rMYNAME<ENTER> - read settings file (filter/notch)
wMYNAME<ENTER> - write settings file (filter/notch)
+FILTER<ENTER> - add CAN-IDs to sniff
-FILTER<ENTER> - remove CAN-IDs to sniff

FILTER can be a single CAN-ID or a CAN-ID/Bitmask:
+1F5<ENTER>    - add CAN-ID 0x1F5
-42E<ENTER>    - remove CAN-ID 0x42E
-42E7FF<ENTER> - remove CAN-ID 0x42E (using Bitmask)
-500700<ENTER> - remove CAN-IDs 0x500 - 0x5FF
+400600<ENTER> - add CAN-IDs 0x400 - 0x5FF
+000000<ENTER> - add all CAN-IDs
-000000<ENTER> - remove all CAN-IDs

if (id & filter) == (sniff-id & filter) the action (+/-) is performed,
which is quite easy when the filter is 000


编码范围
  [MUST] 文件（夹）的命名均不允许包含空格。
  [MUST] 使用半角符号，也即不允许使用中文命名
项目命名
  [MUST] 全部采用小写形式，以下划线分隔。
  示例：my_project_name、x_client。
目录命名
  [MUST] 全部采用小写形式，以下划线分隔。
  [MUST] 有复数结构时，采用复数命名法。
  [MUST] 简洁且有习惯性缩写的单词必须采用容易理解的缩写。
  示例：pdf_previewer、node_modules、broker_adapters、scripts、src。
文件命名
  [MUST] 全部采用小写形式。
  [MUST] 以中划线分隔。
  示例：html-parser.js、error-detector.js、index.css、logo-cropped.png 。
特例
  [RECOMMENDED] 为了醒目，某些说明文件的文件名，允许使用大写字母，且此时必须使用下划线分隔。
  示例：README.MD、LICENSE、CODE_OF_CONDUCT.MD。


?? 文件命名：为什么要小写。
  一、可移植性
    Linux 系统是大小写敏感的，而 Windows 系统和 Mac 系统正好相反，大小写不敏感。
    如果两个文件名只有大小写不同，其他都相同，跨平台就会出问题。
  二、易读性
    小写文件名通常比大写文件名更易读，比如accessibility.txt就比ACCESSIBILITY.TXT易读。
    有人习惯使用驼峰命名法，单词的第一个字母大写，其他字母小写。这种方法的问题是，如果遇到全部是大写的缩略词，就会不适用。
  三、易用性
    某些系统会生成一些预置的用户目录，采用首字母大写的目录名。比如，Ubuntu 在用户主目录会默认生成Downloads、 Pictures、Documents等目录。
    Mac 系统更过分，一部分系统目录也是大写的，比如/Library/Audio/Apple Loops/。
    另外，某些常见的配置文件或说明文件，也采用大写的文件名，比如Makefile、INSTALL、CHANGELOG、.Xclients和.Xauthority等等。
    所以，用户的文件都采用小写文件名，就很方便与上面这些目录或文件相区分。
  四、便捷性
    文件名全部小写，还有利于命令行操作。比如，某些命令可以不使用-i参数了。
    # 大小写敏感的搜索
    $ find . -name abc
    $ locate "*.htmL"

    # 大小写不敏感的搜索
    $ find . -iname abc
    $ locate -i "*.HtmL"
    
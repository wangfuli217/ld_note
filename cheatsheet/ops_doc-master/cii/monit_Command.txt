T Command_new(const char *path, const char *arg0, ...);  # 创建Command
void Command_free(T *C) 
void Command_appendArgument(T C, const char *argument) 
void Command_setUid(T C, uid_t uid)
uid_t Command_getUid(T C)
void Command_setGid(T C, gid_t gid) 
gid_t Command_getGid(T C) 
void Command_setDir(T C, const char *dir) 
const char *Command_getDir(T C)
void Command_setEnv(Command_T C, const char *name, const char *value) 
void Command_vSetEnv(T C, const char *name, const char *value, ...) 
const char *Command_getEnv(T C, const char *name) 
List_T Command_getCommand(T C) 

Process_T Command_execute(T C)                           # 生成Process -> _Process_new(void) 
void Process_free(Process_T *P) 

uid_t Process_getUid(Process_T P) 
gid_t Process_getGid(Process_T P)
const char *Process_getDir(Process_T P) 
pid_t Process_getPid(Process_T P) 
int Process_waitFor(Process_T P)
int Process_exitStatus(Process_T P) 
int Process_isRunning(Process_T P) 

OutputStream_T Process_getOutputStream(Process_T P) 
InputStream_T Process_getInputStream(Process_T P) 
InputStream_T Process_getErrorStream(Process_T P) 

void Process_terminate(Process_T P) 
void Process_kill(Process_T P) 
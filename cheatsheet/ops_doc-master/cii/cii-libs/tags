!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run aclocal-1.11$/;"	m
ACLOCAL	examples/Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run aclocal-1.11$/;"	m
ACLOCAL	include/Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run aclocal-1.11$/;"	m
ACLOCAL	misc/Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run aclocal-1.11$/;"	m
ACLOCAL	src/Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run aclocal-1.11$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	examples/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	include/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	misc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ALLOC	include/mem.h	14;"	d
AMTAR	Makefile	/^AMTAR = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run tar$/;"	m
AMTAR	examples/Makefile	/^AMTAR = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run tar$/;"	m
AMTAR	include/Makefile	/^AMTAR = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run tar$/;"	m
AMTAR	misc/Makefile	/^AMTAR = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run tar$/;"	m
AMTAR	src/Makefile	/^AMTAR = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run tar$/;"	m
AM_CPPFLAGS	src/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/include$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AP_INCLUDED	include/ap.h	3;"	d
AP_add	src/ap.c	/^T AP_add(T x, T y) {$/;"	f
AP_addi	src/ap.c	/^T AP_addi(T x, long int y) {$/;"	f
AP_cmp	src/ap.c	/^int AP_cmp(T x, T y) {$/;"	f
AP_cmpi	src/ap.c	/^int AP_cmpi(T x, long int y) {$/;"	f
AP_div	src/ap.c	/^T AP_div(T x, T y) {$/;"	f
AP_divi	src/ap.c	/^T AP_divi(T x, long int y) {$/;"	f
AP_fmt	src/ap.c	/^void AP_fmt(int code, va_list_box *box,$/;"	f
AP_free	src/ap.c	/^void AP_free(T *z) {$/;"	f
AP_fromstr	src/ap.c	/^T AP_fromstr(const char *str, int base, char **end) {$/;"	f
AP_lshift	src/ap.c	/^T AP_lshift(T x, int s) {$/;"	f
AP_mod	src/ap.c	/^T AP_mod(T x, T y) {$/;"	f
AP_modi	src/ap.c	/^long int AP_modi(T x, long int y) {$/;"	f
AP_mul	src/ap.c	/^T AP_mul(T x, T y) {$/;"	f
AP_muli	src/ap.c	/^T AP_muli(T x, long int y) {$/;"	f
AP_neg	src/ap.c	/^T AP_neg(T x) {$/;"	f
AP_new	src/ap.c	/^T AP_new(long int n) {$/;"	f
AP_pow	src/ap.c	/^T AP_pow(T x, T y, T p) {$/;"	f
AP_rshift	src/ap.c	/^T AP_rshift(T x, int s) {$/;"	f
AP_sub	src/ap.c	/^T AP_sub(T x, T y) {$/;"	f
AP_subi	src/ap.c	/^T AP_subi(T x, long int y) {$/;"	f
AP_toint	src/ap.c	/^long int AP_toint(T x) {$/;"	f
AP_tostr	src/ap.c	/^char *AP_tostr(char *str, int size, int base, T x) {$/;"	f
AR	Makefile	/^AR = ar$/;"	m
AR	examples/Makefile	/^AR = ar$/;"	m
AR	include/Makefile	/^AR = ar$/;"	m
AR	misc/Makefile	/^AR = ar$/;"	m
AR	src/Makefile	/^AR = ar$/;"	m
ARENA_INCLUDED	include/arena.h	3;"	d
ARRAYREP_INCLUDED	include/arrayrep.h	3;"	d
ARRAY_INCLUDED	include/array.h	3;"	d
ATOM_INCLUDED	include/atom.h	3;"	d
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoconf$/;"	m
AUTOCONF	examples/Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoconf$/;"	m
AUTOCONF	include/Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoconf$/;"	m
AUTOCONF	misc/Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoconf$/;"	m
AUTOCONF	src/Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoheader$/;"	m
AUTOHEADER	examples/Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoheader$/;"	m
AUTOHEADER	include/Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoheader$/;"	m
AUTOHEADER	misc/Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoheader$/;"	m
AUTOHEADER	src/Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run automake-1.11$/;"	m
AUTOMAKE	examples/Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run automake-1.11$/;"	m
AUTOMAKE	include/Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run automake-1.11$/;"	m
AUTOMAKE	misc/Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run automake-1.11$/;"	m
AUTOMAKE	src/Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run automake-1.11$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	examples/Makefile	/^AWK = gawk$/;"	m
AWK	include/Makefile	/^AWK = gawk$/;"	m
AWK	misc/Makefile	/^AWK = gawk$/;"	m
AWK	src/Makefile	/^AWK = gawk$/;"	m
Arena_Failed	src/arena.c	/^const Except_T Arena_Failed    =$/;"	v
Arena_NewFailed	src/arena.c	/^const Except_T Arena_NewFailed =$/;"	v
Arena_alloc	src/arena.c	/^void *Arena_alloc(T arena, long nbytes,$/;"	f
Arena_calloc	src/arena.c	/^void *Arena_calloc(T arena, long count, long nbytes,$/;"	f
Arena_dispose	src/arena.c	/^void Arena_dispose(T *ap) {$/;"	f
Arena_free	src/arena.c	/^void Arena_free(T arena) {$/;"	f
Arena_new	src/arena.c	/^T Arena_new(void) {$/;"	f
Arith_ceiling	src/arith.c	/^int Arith_ceiling(int x, int y) {$/;"	f
Arith_div	src/arith.c	/^int Arith_div(int x, int y) {$/;"	f
Arith_floor	src/arith.c	/^int Arith_floor(int x, int y) {$/;"	f
Arith_max	src/arith.c	/^int Arith_max(int x, int y) {$/;"	f
Arith_min	src/arith.c	/^int Arith_min(int x, int y) {$/;"	f
Arith_mod	src/arith.c	/^int Arith_mod(int x, int y) {$/;"	f
ArrayRep_init	src/array.c	/^void ArrayRep_init(T array, int length, int size,$/;"	f
Array_copy	src/array.c	/^T Array_copy(T array, int length) {$/;"	f
Array_free	src/array.c	/^void Array_free(T *array) {$/;"	f
Array_get	src/array.c	/^void *Array_get(T array, int i) {$/;"	f
Array_length	src/array.c	/^int Array_length(T array) {$/;"	f
Array_new	src/array.c	/^T Array_new(int length, int size) {$/;"	f
Array_put	src/array.c	/^void *Array_put(T array, int i, void *elem) {$/;"	f
Array_resize	src/array.c	/^void Array_resize(T array, int length) {$/;"	f
Array_size	src/array.c	/^int Array_size(T array) {$/;"	f
Assert_Failed	src/assert.c	/^const Except_T Assert_Failed = { "Assertion failed" };$/;"	v
Atom_int	src/atom.c	/^const char *Atom_int(long n) {$/;"	f
Atom_length	src/atom.c	/^int Atom_length(const char *str) {$/;"	f
Atom_new	src/atom.c	/^const char *Atom_new(const char *str, int len) {$/;"	f
Atom_string	src/atom.c	/^const char *Atom_string(const char *str) {$/;"	f
BASE	src/mp.c	16;"	d	file:
BASE	src/xp.c	7;"	d	file:
BIT_INCLUDED	include/bit.h	3;"	d
BPW	src/bit.c	13;"	d	file:
Bit_clear	src/bit.c	/^void Bit_clear(T set, int lo, int hi) {$/;"	f
Bit_count	src/bit.c	/^int Bit_count(T set) {$/;"	f
Bit_diff	src/bit.c	/^T Bit_diff(T s, T t) {$/;"	f
Bit_eq	src/bit.c	/^int Bit_eq(T s, T t) {$/;"	f
Bit_free	src/bit.c	/^void Bit_free(T *set) {$/;"	f
Bit_get	src/bit.c	/^int Bit_get(T set, int n) {$/;"	f
Bit_inter	src/bit.c	/^T Bit_inter(T s, T t) {$/;"	f
Bit_length	src/bit.c	/^int Bit_length(T set) {$/;"	f
Bit_leq	src/bit.c	/^int Bit_leq(T s, T t) {$/;"	f
Bit_lt	src/bit.c	/^int Bit_lt(T s, T t) {$/;"	f
Bit_map	src/bit.c	/^void Bit_map(T set,$/;"	f
Bit_minus	src/bit.c	/^T Bit_minus(T s, T t) {$/;"	f
Bit_new	src/bit.c	/^T Bit_new(int length) {$/;"	f
Bit_not	src/bit.c	/^void Bit_not(T set, int lo, int hi) {$/;"	f
Bit_put	src/bit.c	/^int Bit_put(T set, int n, int bit) {$/;"	f
Bit_set	src/bit.c	/^void Bit_set(T set, int lo, int hi) {$/;"	f
Bit_union	src/bit.c	/^T Bit_union(T s, T t) {$/;"	f
CALLOC	include/mem.h	16;"	d
CC	Makefile	/^CC = gcc$/;"	m
CC	examples/Makefile	/^CC = gcc$/;"	m
CC	include/Makefile	/^CC = gcc$/;"	m
CC	misc/Makefile	/^CC = gcc$/;"	m
CC	src/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	examples/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	include/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	misc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	src/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	examples/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	include/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	misc/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	src/Makefile	/^CFLAGS = -g -O2$/;"	m
CHAN_INCLUDED	include/chan.h	3;"	d
COMPILE	src/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	examples/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	include/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	misc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	examples/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	include/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	misc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	examples/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	include/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	misc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	examples/Makefile	/^CPP = gcc -E$/;"	m
CPP	include/Makefile	/^CPP = gcc -E$/;"	m
CPP	misc/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	examples/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	include/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	misc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	include/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/Makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	examples/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	include/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	misc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/Makefile	/^CYGPATH_W = echo$/;"	m
Chan_new	src/chan.c	/^T Chan_new(void) {$/;"	f
Chan_receive	src/chan.c	/^int Chan_receive(Chan_T c, void *ptr, int size) {$/;"	f
Chan_send	src/chan.c	/^int Chan_send(Chan_T c, const void *ptr, int size) {$/;"	f
DEFAULT_INCLUDES	src/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	examples/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	include/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	misc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	examples/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	include/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	misc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	examples/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	include/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	misc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = README $(am__configure_deps) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	examples/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	include/Makefile	/^DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	misc/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	src/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	examples/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	include/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	misc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/Makefile	/^DIST_SOURCES = $(libcii_la_SOURCES)$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	examples/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	include/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	misc/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	examples/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	include/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	misc/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/Makefile	/^DUMPBIN = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	examples/Makefile	/^ECHO_C = $/;"	m
ECHO_C	include/Makefile	/^ECHO_C = $/;"	m
ECHO_C	misc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	examples/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	include/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	misc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	examples/Makefile	/^ECHO_T = $/;"	m
ECHO_T	include/Makefile	/^ECHO_T = $/;"	m
ECHO_T	misc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	examples/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	include/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	misc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ELSE	include/except.h	48;"	d
ELSE	include/except.h	77;"	d
END_LOCK	include/sem.h	11;"	d
END_TRY	include/except.h	57;"	d
END_TRY	include/except.h	86;"	d
ENTERCRITICAL	src/thread-nt.c	40;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	include/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/Makefile	/^ETAGS = etags$/;"	m
EXCEPT	include/except.h	44;"	d
EXCEPT	include/except.h	73;"	d
EXCEPT_INCLUDED	include/except.h	3;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	examples/Makefile	/^EXEEXT = $/;"	m
EXEEXT	include/Makefile	/^EXEEXT = $/;"	m
EXEEXT	misc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = makefile.nt$/;"	m
Except_Frame	include/except.h	/^struct Except_Frame {$/;"	s
Except_Frame	include/except.h	/^typedef struct Except_Frame Except_Frame;$/;"	t	typeref:struct:Except_Frame
Except_entered	include/except.h	/^enum { Except_entered=0, Except_raised,$/;"	e	enum:__anon1
Except_finalized	include/except.h	/^       Except_handled,   Except_finalized };$/;"	e	enum:__anon1
Except_handled	include/except.h	/^       Except_handled,   Except_finalized };$/;"	e	enum:__anon1
Except_index	src/except.c	/^int Except_index = -1;$/;"	v
Except_init	src/except.c	/^void Except_init(void) {$/;"	f
Except_pop	src/except.c	/^void Except_pop(void) {$/;"	f
Except_push	src/except.c	/^void Except_push(Except_Frame *fp) {$/;"	f
Except_raise	src/except.c	/^void Except_raise(const T *e, const char *file,$/;"	f
Except_raised	include/except.h	/^enum { Except_entered=0, Except_raised,$/;"	e	enum:__anon1
Except_stack	src/except.c	/^Except_Frame *Except_stack = NULL;$/;"	v
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	examples/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	include/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	misc/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FINALLY	include/except.h	52;"	d
FINALLY	include/except.h	81;"	d
FMT_INCLUDED	include/fmt.h	3;"	d
FREE	include/mem.h	20;"	d
Fmt_Overflow	src/fmt.c	/^const Except_T Fmt_Overflow = { "Formatting Overflow" };$/;"	v
Fmt_flags	src/fmt.c	/^char *Fmt_flags = "-+ 0";$/;"	v
Fmt_fmt	src/fmt.c	/^void Fmt_fmt(int put(int c, void *), void *cl,$/;"	f
Fmt_fprint	src/fmt.c	/^void Fmt_fprint(FILE *stream, const char *fmt, ...) {$/;"	f
Fmt_print	examples/sort.c	15;"	d	file:
Fmt_print	src/fmt.c	/^void Fmt_print(const char *fmt, ...) {$/;"	f
Fmt_putd	src/fmt.c	/^void Fmt_putd(const char *str, int len,$/;"	f
Fmt_puts	src/fmt.c	/^void Fmt_puts(const char *str, int len,$/;"	f
Fmt_register	src/fmt.c	/^T Fmt_register(int code, T newcvt) {$/;"	f
Fmt_sfmt	src/fmt.c	/^int Fmt_sfmt(char *buf, int size, const char *fmt, ...) {$/;"	f
Fmt_string	src/fmt.c	/^char *Fmt_string(const char *fmt, ...) {$/;"	f
Fmt_vfmt	src/fmt.c	/^void Fmt_vfmt(int put(int c, void *cl), void *cl,$/;"	f
Fmt_vsfmt	src/fmt.c	/^int Fmt_vsfmt(char *buf, int size, const char *fmt,$/;"	f
Fmt_vstring	src/fmt.c	/^char *Fmt_vstring(const char *fmt, va_list_box *box) {$/;"	f
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	examples/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	include/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	misc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
HASH	src/thread-nt.c	32;"	d	file:
HAVE_DLFCN_H	config.h	5;"	d
HAVE_FLOAT_H	config.h	8;"	d
HAVE_INTTYPES_H	config.h	11;"	d
HAVE_LIMITS_H	config.h	14;"	d
HAVE_MALLOC	config.h	18;"	d
HAVE_MEMCHR	config.h	21;"	d
HAVE_MEMMOVE	config.h	24;"	d
HAVE_MEMORY_H	config.h	27;"	d
HAVE_MEMSET	config.h	30;"	d
HAVE_REALLOC	config.h	34;"	d
HAVE_STDDEF_H	config.h	37;"	d
HAVE_STDINT_H	config.h	40;"	d
HAVE_STDLIB_H	config.h	43;"	d
HAVE_STRCHR	config.h	46;"	d
HAVE_STRERROR	config.h	49;"	d
HAVE_STRINGS_H	config.h	52;"	d
HAVE_STRING_H	config.h	55;"	d
HAVE_SYS_STAT_H	config.h	58;"	d
HAVE_SYS_TIME_H	config.h	61;"	d
HAVE_SYS_TYPES_H	config.h	64;"	d
HAVE_UNISTD_H	config.h	67;"	d
HEADERS	include/Makefile	/^HEADERS = $(pkginclude_HEADERS)$/;"	m
IDThread	src/thread-nt.c	/^	DWORD IDThread;		\/* Win 32 thread identifier *\/$/;"	m	struct:T	file:
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	examples/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	include/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	misc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	examples/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	include/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	misc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	examples/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	include/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	misc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	examples/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	include/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	misc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	examples/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	include/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	misc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	examples/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	include/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	misc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INTEGER_INCLUDED	examples/integer.h	2;"	d
Integer_cmp	examples/integer.c	/^int Integer_cmp(T i1, T i2) {$/;"	f
Integer_fmt	examples/integer.c	/^void Integer_fmt(int code, va_list_box *box,$/;"	f
Integer_get	examples/integer.c	/^int Integer_get(T integer) {$/;"	f
Integer_new	examples/integer.c	/^T Integer_new(int n) {$/;"	f
Integer_put	examples/integer.c	/^int Integer_put(T integer, int n) {$/;"	f
LD	Makefile	/^LD = \/bin\/ld -m elf_x86_64$/;"	m
LD	examples/Makefile	/^LD = \/bin\/ld -m elf_x86_64$/;"	m
LD	include/Makefile	/^LD = \/bin\/ld -m elf_x86_64$/;"	m
LD	misc/Makefile	/^LD = \/bin\/ld -m elf_x86_64$/;"	m
LD	src/Makefile	/^LD = \/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	examples/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	include/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	misc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/Makefile	/^LDFLAGS = $/;"	m
LEAVECRITICAL	src/thread-nt.c	41;"	d	file:
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	examples/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	include/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	misc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	examples/Makefile	/^LIBS = $/;"	m
LIBS	include/Makefile	/^LIBS = $/;"	m
LIBS	misc/Makefile	/^LIBS = $/;"	m
LIBS	src/Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	examples/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	include/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	misc/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	examples/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	include/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	misc/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	src/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LINK	src/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIPO	examples/Makefile	/^LIPO = $/;"	m
LIPO	include/Makefile	/^LIPO = $/;"	m
LIPO	misc/Makefile	/^LIPO = $/;"	m
LIPO	src/Makefile	/^LIPO = $/;"	m
LIST_INCLUDED	include/list.h	3;"	d
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	examples/Makefile	/^LN_S = ln -s$/;"	m
LN_S	include/Makefile	/^LN_S = ln -s$/;"	m
LN_S	misc/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/Makefile	/^LN_S = ln -s$/;"	m
LOCK	include/sem.h	9;"	d
LTCOMPILE	src/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	examples/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	include/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	misc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	src/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	71;"	d
List_append	src/list.c	/^T List_append(T list, T tail) {$/;"	f
List_copy	src/list.c	/^T List_copy(T list) {$/;"	f
List_free	src/list.c	/^void List_free(T *list) {$/;"	f
List_length	src/list.c	/^int List_length(T list) {$/;"	f
List_list	src/list.c	/^T List_list(void *x, ...) {$/;"	f
List_map	src/list.c	/^void List_map(T list,$/;"	f
List_pop	src/list.c	/^T List_pop(T list, void **x) {$/;"	f
List_push	src/list.c	/^T List_push(T list, void *x) {$/;"	f
List_reverse	src/list.c	/^T List_reverse(T list) {$/;"	f
List_toArray	src/list.c	/^void **List_toArray(T list, void *end) {$/;"	f
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run makeinfo$/;"	m
MAKEINFO	examples/Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run makeinfo$/;"	m
MAKEINFO	include/Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run makeinfo$/;"	m
MAKEINFO	misc/Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run makeinfo$/;"	m
MAKEINFO	src/Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/missing --run makeinfo$/;"	m
MEM_INCLUDED	include/mem.h	3;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	examples/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	include/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	misc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MP_Dividebyzero	src/mp.c	/^const Except_T MP_Dividebyzero = { "Division by zero" };$/;"	v
MP_INCLUDED	include/mp.h	3;"	d
MP_Overflow	src/mp.c	/^const Except_T MP_Overflow     = { "Overflow" };$/;"	v
MP_add	src/mp.c	/^T MP_add(T z, T x, T y) {$/;"	f
MP_addi	src/mp.c	/^T MP_addi(T z, T x, long y) {$/;"	f
MP_addu	src/mp.c	/^T MP_addu(T z, T x, T y) {$/;"	f
MP_addui	src/mp.c	/^T MP_addui(T z, T x, unsigned long y) {$/;"	f
MP_and	src/mp.c	/^T MP_and(T z, T x, T y) { bitop(&); }$/;"	f
MP_andi	src/mp.c	/^T MP_andi(T z, T x, unsigned long y) { bitopi(MP_and); }$/;"	f
MP_ashift	src/mp.c	/^T MP_ashift(T z, T x, int s) { shft(sign(x),XP_rshift); }$/;"	f
MP_cmp	src/mp.c	/^int MP_cmp(T x, T y) {$/;"	f
MP_cmpi	src/mp.c	/^int MP_cmpi(T x, long y) {$/;"	f
MP_cmpu	src/mp.c	/^int MP_cmpu(T x, T y) {$/;"	f
MP_cmpui	src/mp.c	/^int MP_cmpui(T x, unsigned long y) {$/;"	f
MP_cvt	src/mp.c	/^T MP_cvt(int m, T z, T x) {$/;"	f
MP_cvtu	src/mp.c	/^T MP_cvtu(int m, T z, T x) {$/;"	f
MP_div	src/mp.c	/^T MP_div(T z, T x, T y) {$/;"	f
MP_divi	src/mp.c	/^T MP_divi(T z, T x, long y) {$/;"	f
MP_divu	src/mp.c	/^T MP_divu(T z, T x, T y) {$/;"	f
MP_divui	src/mp.c	/^T MP_divui(T z, T x, unsigned long y) {$/;"	f
MP_fmt	src/mp.c	/^void MP_fmt(int code, va_list_box *box,$/;"	f
MP_fmtu	src/mp.c	/^void MP_fmtu(int code, va_list_box *box,$/;"	f
MP_fromint	src/mp.c	/^T MP_fromint(T z, long v) {$/;"	f
MP_fromintu	src/mp.c	/^T MP_fromintu(T z, unsigned long u) {$/;"	f
MP_fromstr	src/mp.c	/^T MP_fromstr(T z, const char *str, int base, char **end){$/;"	f
MP_lshift	src/mp.c	/^T MP_lshift(T z, T x, int s) { shft(0, XP_lshift); }$/;"	f
MP_mod	src/mp.c	/^T MP_mod(T z, T x, T y) {$/;"	f
MP_modi	src/mp.c	/^long MP_modi(T x, long y) {$/;"	f
MP_modu	src/mp.c	/^T MP_modu(T z, T x, T y) {$/;"	f
MP_modui	src/mp.c	/^unsigned long MP_modui(T x, unsigned long y) {$/;"	f
MP_mul	src/mp.c	/^T MP_mul(T z, T x, T y) {$/;"	f
MP_mul2	src/mp.c	/^T MP_mul2(T z, T x, T y) {$/;"	f
MP_mul2u	src/mp.c	/^T MP_mul2u(T z, T x, T y) {$/;"	f
MP_muli	src/mp.c	/^T MP_muli(T z, T x, long y) {$/;"	f
MP_mulu	src/mp.c	/^T MP_mulu(T z, T x, T y) {$/;"	f
MP_mului	src/mp.c	/^T MP_mului(T z, T x, unsigned long y) {$/;"	f
MP_neg	src/mp.c	/^T MP_neg(T z, T x) {$/;"	f
MP_new	src/mp.c	/^T MP_new(unsigned long u) {$/;"	f
MP_not	src/mp.c	/^T MP_not(T z, T x) {$/;"	f
MP_or	src/mp.c	/^T MP_or (T z, T x, T y) { bitop(|); }$/;"	f
MP_ori	src/mp.c	/^T MP_ori (T z, T x, unsigned long y) { bitopi(MP_or);  }$/;"	f
MP_rshift	src/mp.c	/^T MP_rshift(T z, T x, int s) { shft(0, XP_rshift); }$/;"	f
MP_set	src/mp.c	/^int MP_set(int n) {$/;"	f
MP_sub	src/mp.c	/^T MP_sub(T z, T x, T y) {$/;"	f
MP_subi	src/mp.c	/^T MP_subi(T z, T x, long y) {$/;"	f
MP_subu	src/mp.c	/^T MP_subu(T z, T x, T y) {$/;"	f
MP_subui	src/mp.c	/^T MP_subui(T z, T x, unsigned long y) {$/;"	f
MP_toint	src/mp.c	/^long MP_toint(T x) {$/;"	f
MP_tointu	src/mp.c	/^unsigned long MP_tointu(T x) {$/;"	f
MP_tostr	src/mp.c	/^char *MP_tostr(char *str, int size, int base, T x) {$/;"	f
MP_xor	src/mp.c	/^T MP_xor(T z, T x, T y) { bitop(^); }$/;"	f
MP_xori	src/mp.c	/^T MP_xori(T z, T x, unsigned long y) { bitopi(MP_xor); }$/;"	f
Mem_Failed	src/mem.c	/^const Except_T Mem_Failed = { "Allocation failed" };$/;"	v
Mem_Failed	src/memchk.c	/^const Except_T Mem_Failed = { "Allocation failed" };$/;"	v
Mem_alloc	src/mem.c	/^void *Mem_alloc(long nbytes, const char *file, int line){$/;"	f
Mem_alloc	src/memchk.c	/^void *Mem_alloc(long nbytes, const char *file, int line){$/;"	f
Mem_calloc	src/mem.c	/^void *Mem_calloc(long count, long nbytes,$/;"	f
Mem_calloc	src/memchk.c	/^void *Mem_calloc(long count, long nbytes,$/;"	f
Mem_free	src/mem.c	/^void Mem_free(void *ptr, const char *file, int line) {$/;"	f
Mem_free	src/memchk.c	/^void Mem_free(void *ptr, const char *file, int line) {$/;"	f
Mem_resize	src/mem.c	/^void *Mem_resize(void *ptr, long nbytes,$/;"	f
Mem_resize	src/memchk.c	/^void *Mem_resize(void *ptr, long nbytes,$/;"	f
NALLOC	src/memchk.c	24;"	d	file:
NBUMP	examples/spin.c	8;"	d	file:
NDESCRIPTORS	src/memchk.c	23;"	d	file:
NELEMS	src/atom.c	7;"	d	file:
NEW	include/mem.h	18;"	d
NEW0	include/mem.h	19;"	d
NM	Makefile	/^NM = \/bin\/nm -B$/;"	m
NM	examples/Makefile	/^NM = \/bin\/nm -B$/;"	m
NM	include/Makefile	/^NM = \/bin\/nm -B$/;"	m
NM	misc/Makefile	/^NM = \/bin\/nm -B$/;"	m
NM	src/Makefile	/^NM = \/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMEDIT	examples/Makefile	/^NMEDIT = $/;"	m
NMEDIT	include/Makefile	/^NMEDIT = $/;"	m
NMEDIT	misc/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/Makefile	/^NMEDIT = $/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	examples/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	include/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	misc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	examples/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	include/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	misc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	examples/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	include/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	misc/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	examples/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	include/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	misc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/Makefile	/^OBJEXT = o$/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL	examples/Makefile	/^OTOOL = $/;"	m
OTOOL	include/Makefile	/^OTOOL = $/;"	m
OTOOL	misc/Makefile	/^OTOOL = $/;"	m
OTOOL	src/Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OTOOL64	examples/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	include/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	misc/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/Makefile	/^OTOOL64 = $/;"	m
PACKAGE	Makefile	/^PACKAGE = libcii$/;"	m
PACKAGE	config.h	74;"	d
PACKAGE	examples/Makefile	/^PACKAGE = libcii$/;"	m
PACKAGE	include/Makefile	/^PACKAGE = libcii$/;"	m
PACKAGE	misc/Makefile	/^PACKAGE = libcii$/;"	m
PACKAGE	src/Makefile	/^PACKAGE = libcii$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = kevin.bowling@kev009.com$/;"	m
PACKAGE_BUGREPORT	config.h	77;"	d
PACKAGE_BUGREPORT	examples/Makefile	/^PACKAGE_BUGREPORT = kevin.bowling@kev009.com$/;"	m
PACKAGE_BUGREPORT	include/Makefile	/^PACKAGE_BUGREPORT = kevin.bowling@kev009.com$/;"	m
PACKAGE_BUGREPORT	misc/Makefile	/^PACKAGE_BUGREPORT = kevin.bowling@kev009.com$/;"	m
PACKAGE_BUGREPORT	src/Makefile	/^PACKAGE_BUGREPORT = kevin.bowling@kev009.com$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = libcii$/;"	m
PACKAGE_NAME	config.h	80;"	d
PACKAGE_NAME	examples/Makefile	/^PACKAGE_NAME = libcii$/;"	m
PACKAGE_NAME	include/Makefile	/^PACKAGE_NAME = libcii$/;"	m
PACKAGE_NAME	misc/Makefile	/^PACKAGE_NAME = libcii$/;"	m
PACKAGE_NAME	src/Makefile	/^PACKAGE_NAME = libcii$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = libcii 2.0$/;"	m
PACKAGE_STRING	config.h	83;"	d
PACKAGE_STRING	examples/Makefile	/^PACKAGE_STRING = libcii 2.0$/;"	m
PACKAGE_STRING	include/Makefile	/^PACKAGE_STRING = libcii 2.0$/;"	m
PACKAGE_STRING	misc/Makefile	/^PACKAGE_STRING = libcii 2.0$/;"	m
PACKAGE_STRING	src/Makefile	/^PACKAGE_STRING = libcii 2.0$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = libcii$/;"	m
PACKAGE_TARNAME	config.h	86;"	d
PACKAGE_TARNAME	examples/Makefile	/^PACKAGE_TARNAME = libcii$/;"	m
PACKAGE_TARNAME	include/Makefile	/^PACKAGE_TARNAME = libcii$/;"	m
PACKAGE_TARNAME	misc/Makefile	/^PACKAGE_TARNAME = libcii$/;"	m
PACKAGE_TARNAME	src/Makefile	/^PACKAGE_TARNAME = libcii$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	89;"	d
PACKAGE_URL	examples/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	include/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	misc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 2.0$/;"	m
PACKAGE_VERSION	config.h	92;"	d
PACKAGE_VERSION	examples/Makefile	/^PACKAGE_VERSION = 2.0$/;"	m
PACKAGE_VERSION	include/Makefile	/^PACKAGE_VERSION = 2.0$/;"	m
PACKAGE_VERSION	misc/Makefile	/^PACKAGE_VERSION = 2.0$/;"	m
PACKAGE_VERSION	src/Makefile	/^PACKAGE_VERSION = 2.0$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	examples/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	include/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	misc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	examples/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	include/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	misc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	examples/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	include/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	misc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	examples/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	include/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	misc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	examples/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	include/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	misc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/Makefile	/^PRE_UNINSTALL = :$/;"	m
RAISE	include/except.h	32;"	d
RAISE	include/except.h	62;"	d
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	examples/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	include/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	misc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/Makefile	/^RANLIB = ranlib$/;"	m
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RERAISE	include/except.h	33;"	d
RERAISE	include/except.h	63;"	d
RESIZE	include/mem.h	22;"	d
RETURN	include/except.h	35;"	d
RETURN	include/except.h	65;"	d
RING_INCLUDED	include/ring.h	3;"	d
Ring_add	src/ring.c	/^void *Ring_add(T ring, int pos, void *x) {$/;"	f
Ring_addhi	src/ring.c	/^void *Ring_addhi(T ring, void *x) {$/;"	f
Ring_addlo	src/ring.c	/^void *Ring_addlo(T ring, void *x) {$/;"	f
Ring_free	src/ring.c	/^void Ring_free(T *ring) {$/;"	f
Ring_get	src/ring.c	/^void *Ring_get(T ring, int i) {$/;"	f
Ring_length	src/ring.c	/^int Ring_length(T ring) {$/;"	f
Ring_new	src/ring.c	/^T Ring_new(void) {$/;"	f
Ring_put	src/ring.c	/^void *Ring_put(T ring, int i, void *x) {$/;"	f
Ring_remhi	src/ring.c	/^void *Ring_remhi(T ring) {$/;"	f
Ring_remlo	src/ring.c	/^void *Ring_remlo(T ring) {$/;"	f
Ring_remove	src/ring.c	/^void *Ring_remove(T ring, int i) {$/;"	f
Ring_ring	src/ring.c	/^T Ring_ring(void *x, ...) {$/;"	f
Ring_rotate	src/ring.c	/^void Ring_rotate(T ring, int n) {$/;"	f
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SED	examples/Makefile	/^SED = \/bin\/sed$/;"	m
SED	include/Makefile	/^SED = \/bin\/sed$/;"	m
SED	misc/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/Makefile	/^SED = \/bin\/sed$/;"	m
SEM_INCLUDED	include/sem.h	3;"	d
SEQ_INCLUDED	include/seq.h	3;"	d
SET_INCLUDED	include/set.h	3;"	d
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	examples/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	include/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	misc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	examples/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	include/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	misc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SOURCES	Makefile	/^SOURCES =$/;"	m
SOURCES	examples/Makefile	/^SOURCES =$/;"	m
SOURCES	include/Makefile	/^SOURCES =$/;"	m
SOURCES	misc/Makefile	/^SOURCES =$/;"	m
SOURCES	src/Makefile	/^SOURCES = $(libcii_la_SOURCES)$/;"	m
STACK_INCLUDED	include/stack.h	3;"	d
STDC_HEADERS	config.h	95;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	examples/Makefile	/^STRIP = strip$/;"	m
STRIP	include/Makefile	/^STRIP = strip$/;"	m
STRIP	misc/Makefile	/^STRIP = strip$/;"	m
STRIP	src/Makefile	/^STRIP = strip$/;"	m
STR_INCLUDED	include/str.h	3;"	d
SUBDIRS	Makefile	/^SUBDIRS = src include misc examples$/;"	m
Sem_init	src/thread-nt.c	/^void Sem_init(T *s, int count) {$/;"	f
Sem_init	src/thread.c	/^void Sem_init(T *s, int count) {$/;"	f
Sem_new	src/thread-nt.c	/^T *Sem_new(int count) {$/;"	f
Sem_new	src/thread.c	/^T *Sem_new(int count) {$/;"	f
Sem_signal	src/thread-nt.c	/^void Sem_signal(T *s) {$/;"	f
Sem_signal	src/thread.c	/^void Sem_signal(T *s) {$/;"	f
Sem_wait	src/thread-nt.c	/^void Sem_wait(T *s) {$/;"	f
Sem_wait	src/thread.c	/^void Sem_wait(T *s) {$/;"	f
Seq_addhi	src/seq.c	/^void *Seq_addhi(T seq, void *x) {$/;"	f
Seq_addlo	src/seq.c	/^void *Seq_addlo(T seq, void *x) {$/;"	f
Seq_free	src/seq.c	/^void Seq_free(T *seq) {$/;"	f
Seq_get	src/seq.c	/^void *Seq_get(T seq, int i) {$/;"	f
Seq_length	src/seq.c	/^int Seq_length(T seq) {$/;"	f
Seq_new	src/seq.c	/^T Seq_new(int hint) {$/;"	f
Seq_put	src/seq.c	/^void *Seq_put(T seq, int i, void *x) {$/;"	f
Seq_remhi	src/seq.c	/^void *Seq_remhi(T seq) {$/;"	f
Seq_remlo	src/seq.c	/^void *Seq_remlo(T seq) {$/;"	f
Seq_seq	src/seq.c	/^T Seq_seq(void *x, ...) {$/;"	f
Set_diff	src/set.c	/^T Set_diff(T s, T t) {$/;"	f
Set_free	src/set.c	/^void Set_free(T *set) {$/;"	f
Set_inter	src/set.c	/^T Set_inter(T s, T t) {$/;"	f
Set_length	src/set.c	/^int Set_length(T set) {$/;"	f
Set_map	src/set.c	/^void Set_map(T set,$/;"	f
Set_member	src/set.c	/^int Set_member(T set, const void *member) {$/;"	f
Set_minus	src/set.c	/^T Set_minus(T t, T s) {$/;"	f
Set_new	src/set.c	/^T Set_new(int hint,$/;"	f
Set_put	src/set.c	/^void Set_put(T set, const void *member) {$/;"	f
Set_remove	src/set.c	/^void *Set_remove(T set, const void *member) {$/;"	f
Set_toArray	src/set.c	/^void **Set_toArray(T set, void *end) {$/;"	f
Set_union	src/set.c	/^T Set_union(T s, T t) {$/;"	f
Stack_empty	src/stack.c	/^int Stack_empty(T stk) {$/;"	f
Stack_free	src/stack.c	/^void Stack_free(T *stk) {$/;"	f
Stack_new	src/stack.c	/^T Stack_new(void) {$/;"	f
Stack_pop	src/stack.c	/^void *Stack_pop(T stk) {$/;"	f
Stack_push	src/stack.c	/^void Stack_push(T stk, void *x) {$/;"	f
Str_any	src/str.c	/^int Str_any(const char *s, int i, const char *set) {$/;"	f
Str_cat	src/str.c	/^char *Str_cat(const char *s1, int i1, int j1,$/;"	f
Str_catv	src/str.c	/^char *Str_catv(const char *s, ...) {$/;"	f
Str_chr	src/str.c	/^int Str_chr(const char *s, int i, int j, int c) {$/;"	f
Str_cmp	src/str.c	/^int Str_cmp(const char *s1, int i1, int j1,$/;"	f
Str_dup	src/str.c	/^char *Str_dup(const char *s, int i, int j, int n) {$/;"	f
Str_find	src/str.c	/^int Str_find(const char *s, int i, int j,$/;"	f
Str_fmt	src/str.c	/^void Str_fmt(int code, va_list_box *box,$/;"	f
Str_len	src/str.c	/^int Str_len(const char *s, int i, int j) {$/;"	f
Str_many	src/str.c	/^int Str_many(const char *s, int i, int j,$/;"	f
Str_map	src/str.c	/^char *Str_map(const char *s, int i, int j,$/;"	f
Str_match	src/str.c	/^int Str_match(const char *s, int i, int j,$/;"	f
Str_pos	src/str.c	/^int Str_pos(const char *s, int i) {$/;"	f
Str_rchr	src/str.c	/^int Str_rchr(const char *s, int i, int j, int c) {$/;"	f
Str_reverse	src/str.c	/^char *Str_reverse(const char *s, int i, int j) {$/;"	f
Str_rfind	src/str.c	/^int Str_rfind(const char *s, int i, int j,$/;"	f
Str_rmany	src/str.c	/^int Str_rmany(const char *s, int i, int j,$/;"	f
Str_rmatch	src/str.c	/^int Str_rmatch(const char *s, int i, int j,$/;"	f
Str_rupto	src/str.c	/^int Str_rupto(const char *s, int i, int j,$/;"	f
Str_sub	src/str.c	/^char *Str_sub(const char *s, int i, int j) {$/;"	f
Str_upto	src/str.c	/^int Str_upto(const char *s, int i, int j,$/;"	f
T	examples/integer.c	/^typedef int *T;$/;"	t	file:
T	examples/integer.c	5;"	d	file:
T	examples/integer.h	/^typedef int *T;$/;"	t
T	examples/integer.h	15;"	d
T	examples/integer.h	4;"	d
T	include/ap.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/ap.h	34;"	d
T	include/ap.h	6;"	d
T	include/arena.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/arena.h	16;"	d
T	include/arena.h	5;"	d
T	include/array.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/array.h	14;"	d
T	include/array.h	4;"	d
T	include/arrayrep.h	/^struct T {$/;"	s
T	include/arrayrep.h	12;"	d
T	include/arrayrep.h	4;"	d
T	include/bit.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/bit.h	24;"	d
T	include/bit.h	4;"	d
T	include/chan.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/chan.h	4;"	d
T	include/chan.h	9;"	d
T	include/except.h	/^typedef struct T {$/;"	s
T	include/except.h	/^} T;$/;"	t	typeref:struct:T
T	include/except.h	5;"	d
T	include/except.h	91;"	d
T	include/fmt.h	/^typedef void (*T)(int code, va_list_box *box,$/;"	t
T	include/fmt.h	10;"	d
T	include/fmt.h	36;"	d
T	include/list.h	/^struct T {$/;"	s
T	include/list.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/list.h	21;"	d
T	include/list.h	4;"	d
T	include/mp.h	/^typedef unsigned char *T;$/;"	t
T	include/mp.h	67;"	d
T	include/mp.h	8;"	d
T	include/ring.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/ring.h	19;"	d
T	include/ring.h	4;"	d
T	include/sem.h	/^typedef struct T {$/;"	s
T	include/sem.h	/^} T;$/;"	t	typeref:struct:T
T	include/sem.h	16;"	d
T	include/sem.h	4;"	d
T	include/seq.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/seq.h	16;"	d
T	include/seq.h	4;"	d
T	include/set.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/set.h	21;"	d
T	include/set.h	4;"	d
T	include/stack.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/stack.h	11;"	d
T	include/stack.h	4;"	d
T	include/str.h	41;"	d
T	include/table.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/table.h	19;"	d
T	include/table.h	4;"	d
T	include/text.h	/^typedef struct T {$/;"	s
T	include/text.h	/^} T;$/;"	t	typeref:struct:T
T	include/text.h	44;"	d
T	include/text.h	6;"	d
T	include/thread.h	/^typedef struct T *T;$/;"	t	typeref:struct:T
T	include/thread.h	17;"	d
T	include/thread.h	5;"	d
T	include/xp.h	/^typedef unsigned char *T;$/;"	t
T	include/xp.h	28;"	d
T	include/xp.h	4;"	d
T	src/ap.c	/^struct T {$/;"	s	file:
T	src/ap.c	11;"	d	file:
T	src/arena.c	/^struct T {$/;"	s	file:
T	src/arena.c	7;"	d	file:
T	src/array.c	8;"	d	file:
T	src/bit.c	/^struct T {$/;"	s	file:
T	src/bit.c	7;"	d	file:
T	src/chan.c	/^struct T {$/;"	s	file:
T	src/chan.c	7;"	d	file:
T	src/except.c	6;"	d	file:
T	src/fmt.c	14;"	d	file:
T	src/list.c	7;"	d	file:
T	src/mp.c	12;"	d	file:
T	src/ring.c	/^struct T {$/;"	s	file:
T	src/ring.c	8;"	d	file:
T	src/seq.c	/^struct T {$/;"	s	file:
T	src/seq.c	10;"	d	file:
T	src/set.c	/^struct T {$/;"	s	file:
T	src/set.c	8;"	d	file:
T	src/stack.c	/^struct T {$/;"	s	file:
T	src/stack.c	6;"	d	file:
T	src/table.c	/^struct T {$/;"	s	file:
T	src/table.c	7;"	d	file:
T	src/text.c	8;"	d	file:
T	src/thread-nt.c	/^struct T {$/;"	s	file:
T	src/thread-nt.c	14;"	d	file:
T	src/thread-nt.c	265;"	d	file:
T	src/thread-nt.c	267;"	d	file:
T	src/thread-nt.c	313;"	d	file:
T	src/thread.c	/^struct T {$/;"	s	file:
T	src/thread.c	13;"	d	file:
T	src/thread.c	290;"	d	file:
T	src/thread.c	291;"	d	file:
T	src/thread.c	325;"	d	file:
T	src/xp.c	6;"	d	file:
TABLE_INCLUDED	include/table.h	3;"	d
TEXT_INCLUDED	include/text.h	3;"	d
THREAD_INCLUDED	include/thread.h	3;"	d
THRESHOLD	src/arena.c	12;"	d	file:
TRY	include/except.h	36;"	d
TRY	include/except.h	66;"	d
Table_free	src/table.c	/^void Table_free(T *table) {$/;"	f
Table_get	src/table.c	/^void *Table_get(T table, const void *key) {$/;"	f
Table_length	src/table.c	/^int Table_length(T table) {$/;"	f
Table_map	src/table.c	/^void Table_map(T table,$/;"	f
Table_new	src/table.c	/^T Table_new(int hint,$/;"	f
Table_put	src/table.c	/^void *Table_put(T table, const void *key, void *value) {$/;"	f
Table_remove	src/table.c	/^void *Table_remove(T table, const void *key) {$/;"	f
Table_toArray	src/table.c	/^void **Table_toArray(T table, void *end) {$/;"	f
Text_any	src/text.c	/^int Text_any(T s, int i, T set) {$/;"	f
Text_ascii	src/text.c	/^const T Text_ascii  = { 127, cset };$/;"	v
Text_box	src/text.c	/^T Text_box(const char *str, int len) {$/;"	f
Text_cat	src/text.c	/^T Text_cat(T s1, T s2) {$/;"	f
Text_chr	src/text.c	/^int Text_chr(T s, int i, int j, int c) {$/;"	f
Text_cmp	src/text.c	/^int Text_cmp(T s1, T s2) {$/;"	f
Text_cset	src/text.c	/^const T Text_cset   = { 256, cset };$/;"	v
Text_digits	src/text.c	/^const T Text_digits = {  10, cset + '0' };$/;"	v
Text_dup	src/text.c	/^T Text_dup(T s, int n) {$/;"	f
Text_find	src/text.c	/^int Text_find(T s, int i, int j, T str) {$/;"	f
Text_fmt	src/text.c	/^void Text_fmt(int code, va_list_box *box,$/;"	f
Text_get	src/text.c	/^char *Text_get(char *str, int size, T s) {$/;"	f
Text_lcase	src/text.c	/^const T Text_lcase  = {  26, cset + 'a' };$/;"	v
Text_many	src/text.c	/^int Text_many(T s, int i, int j, T set) {$/;"	f
Text_map	src/text.c	/^T Text_map(T s, const T *from, const T *to) {$/;"	f
Text_match	src/text.c	/^int Text_match(T s, int i, int j, T str) {$/;"	f
Text_null	src/text.c	/^const T Text_null   = {   0, cset };$/;"	v
Text_pos	src/text.c	/^int Text_pos(T s, int i) {$/;"	f
Text_put	src/text.c	/^T Text_put(const char *str) {$/;"	f
Text_rchr	src/text.c	/^int Text_rchr(T s, int i, int j, int c) {$/;"	f
Text_restore	src/text.c	/^void Text_restore(Text_save_T *save) {$/;"	f
Text_reverse	src/text.c	/^T Text_reverse(T s) {$/;"	f
Text_rfind	src/text.c	/^int Text_rfind(T s, int i, int j, T str) {$/;"	f
Text_rmany	src/text.c	/^int Text_rmany(T s, int i, int j, T set) {$/;"	f
Text_rmatch	src/text.c	/^int Text_rmatch(T s, int i, int j, T str) {$/;"	f
Text_rupto	src/text.c	/^int Text_rupto(T s, int i, int j, T set) {$/;"	f
Text_save	src/text.c	/^Text_save_T Text_save(void) {$/;"	f
Text_save_T	include/text.h	/^typedef struct Text_save_T *Text_save_T;$/;"	t	typeref:struct:Text_save_T
Text_save_T	src/text.c	/^struct Text_save_T {$/;"	s	file:
Text_sub	src/text.c	/^T Text_sub(T s, int i, int j) {$/;"	f
Text_ucase	src/text.c	/^const T Text_ucase  = {  26, cset + 'A' };$/;"	v
Text_upto	src/text.c	/^int Text_upto(T s, int i, int j, T set) {$/;"	f
Thread_Alerted	src/thread-nt.c	/^const Except_T Thread_Alerted = { "Thread alerted" };$/;"	v
Thread_Alerted	src/thread.c	/^const Except_T Thread_Alerted = { "Thread alerted" };$/;"	v
Thread_Failed	src/thread-nt.c	/^const Except_T Thread_Failed  = { "Thread creation failed" };$/;"	v
Thread_Failed	src/thread.c	/^const Except_T Thread_Failed =$/;"	v
Thread_alert	src/thread-nt.c	/^void Thread_alert(T t) {$/;"	f
Thread_alert	src/thread.c	/^void Thread_alert(T t) {$/;"	f
Thread_exit	src/thread-nt.c	/^void Thread_exit(int code) {$/;"	f
Thread_exit	src/thread.c	/^void Thread_exit(int code) {$/;"	f
Thread_init	src/thread-nt.c	/^int Thread_init(int preempt, ...) {$/;"	f
Thread_init	src/thread.c	/^int Thread_init(int preempt, ...) {$/;"	f
Thread_join	src/thread-nt.c	/^int Thread_join(T t) {$/;"	f
Thread_join	src/thread.c	/^int Thread_join(T t) {$/;"	f
Thread_new	src/thread-nt.c	/^T Thread_new(int apply(void *), void *args, int nbytes, ...) {$/;"	f
Thread_new	src/thread.c	/^T Thread_new(int apply(void *), void *args,$/;"	f
Thread_pause	src/thread-nt.c	/^void Thread_pause(void) {$/;"	f
Thread_pause	src/thread.c	/^void Thread_pause(void) {$/;"	f
Thread_self	src/thread-nt.c	/^T Thread_self(void) {$/;"	f
Thread_self	src/thread.c	/^T Thread_self(void) {$/;"	f
Unsupported	src/swtch.s	/^Unsupported platform$/;"	l
VERSION	Makefile	/^VERSION = 2.0$/;"	m
VERSION	config.h	98;"	d
VERSION	examples/Makefile	/^VERSION = 2.0$/;"	m
VERSION	include/Makefile	/^VERSION = 2.0$/;"	m
VERSION	misc/Makefile	/^VERSION = 2.0$/;"	m
VERSION	src/Makefile	/^VERSION = 2.0$/;"	m
XP_INCLUDED	include/xp.h	3;"	d
XP_add	src/xp.c	/^int XP_add(int n, T z, T x, T y, int carry) {$/;"	f
XP_cmp	src/xp.c	/^int XP_cmp(int n, T x, T y) {$/;"	f
XP_diff	src/xp.c	/^int XP_diff(int n, T z, T x, int y) {$/;"	f
XP_div	src/xp.c	/^int XP_div(int n, T q, T x, int m, T y, T r, T tmp) {$/;"	f
XP_fromint	src/xp.c	/^unsigned long XP_fromint(int n, T z, unsigned long u) {$/;"	f
XP_fromstr	src/xp.c	/^int XP_fromstr(int n, T z, const char *str,$/;"	f
XP_length	src/xp.c	/^int XP_length(int n, T x) {$/;"	f
XP_lshift	src/xp.c	/^void XP_lshift(int n, T z, int m, T x, int s, int fill) {$/;"	f
XP_mul	src/xp.c	/^int XP_mul(T z, int n, T x, int m, T y) {$/;"	f
XP_neg	src/xp.c	/^int XP_neg(int n, T z, T x, int carry) {$/;"	f
XP_product	src/xp.c	/^int XP_product(int n, T z, T x, int y) {$/;"	f
XP_quotient	src/xp.c	/^int XP_quotient(int n, T z, T x, int y) {$/;"	f
XP_rshift	src/xp.c	/^void XP_rshift(int n, T z, int m, T x, int s, int fill) {$/;"	f
XP_sub	src/xp.c	/^int XP_sub(int n, T z, T x, T y, int borrow) {$/;"	f
XP_sum	src/xp.c	/^int XP_sum(int n, T z, T x, int y) {$/;"	f
XP_toint	src/xp.c	/^unsigned long XP_toint(int n, T x) {$/;"	f
XP_tostr	src/xp.c	/^char *XP_tostr(char *str, int size, int base,$/;"	f
_ENDMONITOR	src/swtch.s	/^_ENDMONITOR:$/;"	l
_MONITOR	src/thread.c	/^void _MONITOR(void) {}$/;"	f
__ENDMONITOR	src/swtch.s	/^	__ENDMONITOR:$/;"	l
__ENDMONITOR	src/swtch.s	/^__ENDMONITOR:$/;"	l
__start	src/swtch.s	/^	__start:	ld	[%sp+64+4],%o0$/;"	l
__swtch	src/swtch.s	/^	__swtch:	save	%sp,-(8+64),%sp$/;"	l
__swtch	src/swtch.s	/^__swtch:$/;"	l
__thrstart	src/swtch.s	/^__thrstart:$/;"	l
_start	src/swtch.s	/^_start:	.frame	$sp,0,$26$/;"	l
_start	src/swtch.s	/^_start:	move	$4,$23	# register 23 holds args$/;"	l
_swtch	src/swtch.s	/^_swtch:	.frame	$sp,88,$31$/;"	l
_swtch	src/swtch.s	/^_swtch:	lda	$sp,-112($sp)	# allocate _swtch's frame$/;"	l
_swtch	src/swtch.s	/^_swtch:$/;"	l
_thrstart	src/swtch.s	/^_thrstart:$/;"	l
a	examples/sort.c	/^	int *a;$/;"	m	struct:args	file:
a	src/arena.c	/^	union align a;$/;"	m	union:header	typeref:union:header::align	file:
abs_builddir	Makefile	/^abs_builddir = \/root\/rtu\/cii-master$/;"	m
abs_builddir	examples/Makefile	/^abs_builddir = \/root\/rtu\/cii-master\/examples$/;"	m
abs_builddir	include/Makefile	/^abs_builddir = \/root\/rtu\/cii-master\/include$/;"	m
abs_builddir	misc/Makefile	/^abs_builddir = \/root\/rtu\/cii-master\/misc$/;"	m
abs_builddir	src/Makefile	/^abs_builddir = \/root\/rtu\/cii-master\/src$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/root\/rtu\/cii-master$/;"	m
abs_srcdir	examples/Makefile	/^abs_srcdir = \/root\/rtu\/cii-master\/examples$/;"	m
abs_srcdir	include/Makefile	/^abs_srcdir = \/root\/rtu\/cii-master\/include$/;"	m
abs_srcdir	misc/Makefile	/^abs_srcdir = \/root\/rtu\/cii-master\/misc$/;"	m
abs_srcdir	src/Makefile	/^abs_srcdir = \/root\/rtu\/cii-master\/src$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/root\/rtu\/cii-master$/;"	m
abs_top_builddir	examples/Makefile	/^abs_top_builddir = \/root\/rtu\/cii-master$/;"	m
abs_top_builddir	include/Makefile	/^abs_top_builddir = \/root\/rtu\/cii-master$/;"	m
abs_top_builddir	misc/Makefile	/^abs_top_builddir = \/root\/rtu\/cii-master$/;"	m
abs_top_builddir	src/Makefile	/^abs_top_builddir = \/root\/rtu\/cii-master$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/root\/rtu\/cii-master$/;"	m
abs_top_srcdir	examples/Makefile	/^abs_top_srcdir = \/root\/rtu\/cii-master$/;"	m
abs_top_srcdir	include/Makefile	/^abs_top_srcdir = \/root\/rtu\/cii-master$/;"	m
abs_top_srcdir	misc/Makefile	/^abs_top_srcdir = \/root\/rtu\/cii-master$/;"	m
abs_top_srcdir	src/Makefile	/^abs_top_srcdir = \/root\/rtu\/cii-master$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	examples/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	include/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	misc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	examples/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	include/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	misc/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
add	examples/mpcalc.c	/^	MP_T (*add)(MP_T, MP_T, MP_T);$/;"	m	struct:__anon2	file:
add	src/ap.c	/^static T add(T z, T x, T y) {$/;"	f	file:
addThread	src/thread-nt.c	/^static void addThread(T t) {$/;"	f	file:
alerted	src/thread-nt.c	/^	int alerted;		\/* 1 if this thread has been alerted *\/$/;"	m	struct:T	file:
alerted	src/thread.c	/^	int alerted;$/;"	m	struct:T	file:
align	misc/maxalign.c	/^union align {$/;"	u	file:
align	src/arena.c	/^union align {$/;"	u	file:
align	src/memchk.c	/^union align {$/;"	u	file:
alloc	src/text.c	/^static char *alloc(int len) {$/;"	f	file:
allthreads	src/thread-nt.c	/^static T allthreads[317];$/;"	v	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	examples/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	include/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	misc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__base_list	include/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/Makefile	/^am__base_list = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	examples/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	include/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	misc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	examples/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	include/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	misc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	src/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	examples/Makefile	/^am__include = include$/;"	m
am__include	include/Makefile	/^am__include = include$/;"	m
am__include	misc/Makefile	/^am__include = include$/;"	m
am__include	src/Makefile	/^am__include = include$/;"	m
am__install_max	include/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	include/Makefile	/^am__installdirs = "$(DESTDIR)$(pkgincludedir)"$/;"	m
am__installdirs	src/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	examples/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	include/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	misc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/Makefile	/^am__leading_dot = .$/;"	m
am__mv	src/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	include/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	include/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	include/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	examples/Makefile	/^am__quote = $/;"	m
am__quote	include/Makefile	/^am__quote = $/;"	m
am__quote	misc/Makefile	/^am__quote = $/;"	m
am__quote	src/Makefile	/^am__quote = $/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	include/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	examples/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	include/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	misc/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	src/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	examples/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	include/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	misc/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	src/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	include/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	include/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libcii_la_OBJECTS	src/Makefile	/^am_libcii_la_OBJECTS = libcii_la-ap.lo libcii_la-arena.lo \\$/;"	m
ap	include/fmt.h	/^	va_list ap;$/;"	m	struct:va_list_box
append	src/fmt.c	/^static int append(int c, void *cl) {$/;"	f	file:
apply	src/thread-nt.c	/^	int (*apply)(void *);	\/* initial function for this thread *\/$/;"	m	struct:T	file:
args	examples/sieve.c	/^struct args {$/;"	s	file:
args	examples/sort.c	/^struct args {$/;"	s	file:
args	examples/spin.c	/^struct args {$/;"	s	file:
args	src/thread-nt.c	/^	void *args;		\/* argument for apply *\/$/;"	m	struct:T	file:
array	include/arrayrep.h	/^	char *array;$/;"	m	struct:T
array	src/seq.c	/^	struct Array_T array;$/;"	m	struct:T	typeref:struct:T::Array_T	file:
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
assert	include/assert.h	2;"	d
assert	include/assert.h	4;"	d
assert	include/assert.h	8;"	d
assert	src/assert.c	/^void (assert)(int e) {$/;"	f
assert	src/except.c	44;"	d	file:
assert	src/except.c	45;"	d	file:
atom	src/atom.c	/^static struct atom {$/;"	s	file:
avail	src/arena.c	/^	char *avail;$/;"	m	struct:T	file:
avail	src/text.c	/^	char *avail;$/;"	m	struct:Text_save_T	file:
avail	src/text.c	/^	char *avail;$/;"	m	struct:chunk	file:
b	src/arena.c	/^	struct T b;$/;"	m	union:header	typeref:struct:header::T	file:
basename	examples/basename.c	/^char *basename(char *path, int i, int j, const char *suffix) {$/;"	f
binding	src/table.c	/^	struct binding {$/;"	s	struct:T	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	examples/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	include/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	misc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bitop	src/mp.c	17;"	d	file:
bitopi	src/mp.c	21;"	d	file:
bp	src/fmt.c	/^	char *bp;$/;"	m	struct:buf	file:
buckets	src/atom.c	/^} *buckets[2048];$/;"	v	typeref:struct:atom	file:
buckets	src/set.c	/^	} **buckets;$/;"	m	struct:T	typeref:struct:T::member	file:
buckets	src/table.c	/^	} **buckets;$/;"	m	struct:T	typeref:struct:T::binding	file:
buf	src/fmt.c	/^	char *buf;$/;"	m	struct:buf	file:
buf	src/fmt.c	/^struct buf {$/;"	s	file:
bugs	install.html	/^<h2><a NAME="bugs">Reporting Bugs<\/a><\/h2>$/;"	a
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	examples/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	include/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	misc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	examples/Makefile	/^build_alias = $/;"	m
build_alias	include/Makefile	/^build_alias = $/;"	m
build_alias	misc/Makefile	/^build_alias = $/;"	m
build_alias	src/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	examples/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	include/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	misc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	examples/Makefile	/^build_os = linux-gnu$/;"	m
build_os	include/Makefile	/^build_os = linux-gnu$/;"	m
build_os	misc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	examples/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	include/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	misc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
build_vendor	examples/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	include/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	misc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	examples/Makefile	/^builddir = .$/;"	m
builddir	include/Makefile	/^builddir = .$/;"	m
builddir	misc/Makefile	/^builddir = .$/;"	m
builddir	src/Makefile	/^builddir = .$/;"	m
bytes	src/bit.c	/^	unsigned char *bytes;$/;"	m	struct:T	file:
c	examples/sieve.c	/^	Chan_T c;$/;"	m	struct:args	file:
chunk	src/text.c	/^static struct chunk {$/;"	s	file:
cmp	src/ap.c	/^static int cmp(T x, T y) {$/;"	f	file:
cmp	src/set.c	/^	int (*cmp)(const void *x, const void *y);$/;"	m	struct:T	file:
cmp	src/table.c	/^	int (*cmp)(const void *x, const void *y);$/;"	m	struct:T	file:
cmpatom	src/set.c	/^static int cmpatom(const void *x, const void *y) {$/;"	f	file:
cmpatom	src/table.c	/^static int cmpatom(const void *x, const void *y) {$/;"	f	file:
cmpint	examples/xref.c	/^int cmpint(const void *x, const void *y) {$/;"	f
code	src/thread-nt.c	/^	int code;		\/* exit code *\/$/;"	m	struct:T	file:
code	src/thread.c	/^	int code;$/;"	m	struct:T	file:
compare	examples/cref.c	/^int compare(const void *x, const void *y) {$/;"	f
compare	examples/iref.c	/^int compare(const void *x, const void *y) {$/;"	f
compare	examples/kref.c	/^int compare(const void *x, const void *y) {$/;"	f
compare	examples/wf.c	/^int compare(const void *x, const void *y) {$/;"	f
compare	examples/xref.c	/^int compare(const void *x, const void *y) {$/;"	f
convert	src/str.c	9;"	d	file:
copy	examples/cref.c	/^Text_T *copy(Text_T t) {$/;"	f
copy	examples/iref.c	/^Text_T *copy(Text_T t) {$/;"	f
copy	src/bit.c	/^static T copy(T t) {$/;"	f	file:
copy	src/set.c	/^static T copy(T t, int hint) {$/;"	f	file:
count	include/sem.h	/^	int count;$/;"	m	struct:T
count	src/stack.c	/^	int count;$/;"	m	struct:T	file:
cref	examples/cref.c	/^void cref(char *name, FILE *fp, Table_T identifiers) {$/;"	f
critical	src/thread-nt.c	/^static int critical;$/;"	v	file:
critical	src/thread.c	/^static int critical;$/;"	v	file:
csection	src/thread-nt.c	/^static CRITICAL_SECTION csection;$/;"	v	file:
cset	src/text.c	/^static char cset[] =$/;"	v	file:
current	src/text.c	/^	struct chunk *current;$/;"	m	struct:Text_save_T	typeref:struct:Text_save_T::chunk	file:
current	src/text.c	/^} head = { NULL, NULL, NULL }, *current = &head;$/;"	v	typeref:struct:chunk	file:
current	src/thread.c	/^static T current;$/;"	v	file:
cutoff	examples/sort.c	/^int cutoff = 10000;$/;"	v
cvt	src/fmt.c	/^static T cvt[256] = {$/;"	v	file:
cvt_c	src/fmt.c	/^static void cvt_c(int code, va_list_box *box,$/;"	f	file:
cvt_d	src/fmt.c	/^static void cvt_d(int code, va_list_box *box,$/;"	f	file:
cvt_f	src/fmt.c	/^static void cvt_f(int code, va_list_box *box,$/;"	f	file:
cvt_o	src/fmt.c	/^static void cvt_o(int code, va_list_box *box,$/;"	f	file:
cvt_p	src/fmt.c	/^static void cvt_p(int code, va_list_box *box,$/;"	f	file:
cvt_s	src/fmt.c	/^static void cvt_s(int code, va_list_box *box,$/;"	f	file:
cvt_u	src/fmt.c	/^static void cvt_u(int code, va_list_box *box,$/;"	f	file:
cvt_x	src/fmt.c	/^static void cvt_x(int code, va_list_box *box,$/;"	f	file:
d	misc/maxalign.c	/^	double d;$/;"	m	union:align	file:
dalloc	src/memchk.c	/^static struct descriptor *dalloc(void *ptr, long size,$/;"	f	file:
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	examples/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	include/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	misc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	examples/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	include/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	misc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
delete	src/thread.c	/^static void delete(T t, T *q) {$/;"	f	file:
depcomp	src/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
descriptor	src/memchk.c	/^static struct descriptor {$/;"	s	file:
digits	src/ap.c	/^	XP_T digits;$/;"	m	struct:T	file:
dirname	examples/basename.c	/^char *dirname(char *path, int i, int j) {$/;"	f
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
div	examples/mpcalc.c	/^	MP_T (*div)(MP_T, MP_T, MP_T);$/;"	m	struct:__anon2	file:
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	examples/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	include/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	misc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
doubleword	examples/double.c	/^void doubleword(char *name, FILE *fp) {$/;"	f
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	examples/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	include/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	misc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/Makefile	/^dvidir = ${docdir}$/;"	m
elem	src/stack.c	/^	struct elem {$/;"	s	struct:T	file:
env	include/except.h	/^	jmp_buf env;$/;"	m	struct:Except_Frame
equal	src/text.c	12;"	d	file:
estack	src/thread.c	/^	Except_Frame *estack;$/;"	m	struct:T	file:
exception	include/except.h	/^	const T *exception;$/;"	m	struct:Except_Frame
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	examples/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	include/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	misc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/Makefile	/^exec_prefix = ${prefix}$/;"	m
expand	src/seq.c	/^static void expand(T seq) {$/;"	f	file:
f	examples/mpcalc.c	/^ *f = &s;$/;"	v	typeref:struct:__anon2
f	misc/maxalign.c	/^	float f;$/;"	m	union:align	file:
file	include/except.h	/^	const char *file;$/;"	m	struct:Except_Frame
file	src/memchk.c	/^	const char *file;$/;"	m	struct:descriptor	file:
filter	examples/sieve.c	/^void filter(int primes[], Chan_T input, Chan_T output) {$/;"	f
find	src/memchk.c	/^static struct descriptor *find(const void *ptr) {$/;"	f	file:
first	examples/cref.c	/^Text_T first, rest;$/;"	v
first	examples/iref.c	/^Text_T first, rest;$/;"	v
first	examples/kref.c	/^char *first, *rest;$/;"	v
first	examples/wf.c	/^int first(int c) {$/;"	f
first	examples/xref.c	/^int first(int c) {$/;"	f
first	include/list.h	/^	void *first;$/;"	m	struct:T
fmt	examples/mpcalc.c	/^	const char *fmt;$/;"	m	struct:__anon2	file:
fp	misc/maxalign.c	/^	void (*fp)(void);$/;"	m	union:align	file:
free	src/memchk.c	/^	struct descriptor *free;$/;"	m	struct:descriptor	typeref:struct:descriptor::descriptor	file:
freechunks	src/arena.c	/^static T freechunks;$/;"	v	file:
freelist	src/memchk.c	/^static struct descriptor freelist = { &freelist };$/;"	v	typeref:struct:descriptor	file:
freelist	src/thread.c	/^static T freelist;$/;"	v	file:
func_append	config.status	/^func_append ()$/;"	f
func_append	configure	/^func_append ()$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_arith	config.status	/^func_arith ()$/;"	f
func_arith	configure	/^func_arith ()$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_basename	config.status	/^func_basename ()$/;"	f
func_basename	configure	/^func_basename ()$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_check_version_match	build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_config	build-aux/ltmain.sh	/^func_config ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_dirname	config.status	/^func_dirname ()$/;"	f
func_dirname	configure	/^func_dirname ()$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	build-aux/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_echo	build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_emit_cwrapperexe_src	build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper_part1	build-aux/ltmain.sh	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part1	libtool	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part2	build-aux/ltmain.sh	/^func_emit_wrapper_part2 ()$/;"	f
func_emit_wrapper_part2	libtool	/^func_emit_wrapper_part2 ()$/;"	f
func_enable_tag	build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_error	build-aux/ltmain.sh	/^func_error ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_execute_cmds	build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_fatal_configuration	build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_features	build-aux/ltmain.sh	/^func_features ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_generate_dlsyms	build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_grep	build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_help	build-aux/ltmain.sh	/^func_help ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_infer_tag	build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_lalib_p	build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()$/;"	f
func_len	configure	/^func_len ()$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()$/;"	f
func_lo2o	configure	/^func_lo2o ()$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_ltwrapper_executable_p	build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_help	build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_install	build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_link	build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_opt_split	config.status	/^func_opt_split ()$/;"	f
func_opt_split	configure	/^func_opt_split ()$/;"	f
func_opt_split	libtool	/^func_opt_split ()$/;"	f
func_quote_for_eval	build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_show_eval	build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_source	build-aux/ltmain.sh	/^func_source ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_stripname	config.status	/^func_stripname ()$/;"	f
func_stripname	configure	/^func_stripname ()$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_to_host_path	build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_pathlist	build-aux/ltmain.sh	/^func_to_host_pathlist ()$/;"	f
func_to_host_pathlist	libtool	/^func_to_host_pathlist ()$/;"	f
func_usage	build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_verbose	build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_version	build-aux/ltmain.sh	/^func_version ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_warning	build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_win32_libid	build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()$/;"	f
func_xform	configure	/^func_xform ()$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
functp	misc/maxalign.c	/^typedef void (*functp);$/;"	t	file:
get	src/thread.c	/^static T get(T *q) {$/;"	f	file:
getThreadByID	src/thread-nt.c	/^static T getThreadByID(DWORD id) {$/;"	f	file:
getword	examples/cref.c	/^Text_T getword(Text_T *line, Text_T first, Text_T rest) {$/;"	f
getword	examples/double.c	/^int getword(FILE *fp, char *buf, int size) {$/;"	f
getword	examples/getword.c	/^int getword(FILE *fp, char *buf, int size,$/;"	f
getword	examples/iref.c	/^Text_T getword(Text_T *line, Text_T first, Text_T rest) {$/;"	f
getword	examples/kref.c	/^int getword(char *line, int *i, char *first, char *rest) {$/;"	f
handle	src/thread-nt.c	/^	T handle;		\/* self pointer *\/$/;"	m	struct:T	file:
handle	src/thread.c	/^	T handle;$/;"	m	struct:T	file:
hash	src/memchk.c	21;"	d	file:
hash	src/set.c	/^	unsigned (*hash)(const void *x);$/;"	m	struct:T	file:
hash	src/table.c	/^	unsigned (*hash)(const void *key);$/;"	m	struct:T	file:
hashatom	src/set.c	/^static unsigned hashatom(const void *x) {$/;"	f	file:
hashatom	src/table.c	/^static unsigned hashatom(const void *key) {$/;"	f	file:
head	src/ring.c	/^	} *head;$/;"	m	struct:T	typeref:struct:T::node	file:
head	src/seq.c	/^	int head;$/;"	m	struct:T	file:
head	src/stack.c	/^	} *head;$/;"	m	struct:T	typeref:struct:T::elem	file:
head	src/text.c	/^} head = { NULL, NULL, NULL }, *current = &head;$/;"	v	typeref:struct:chunk	file:
header	src/arena.c	/^union header {$/;"	u	file:
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	examples/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	include/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	misc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	examples/Makefile	/^host_alias = $/;"	m
host_alias	include/Makefile	/^host_alias = $/;"	m
host_alias	misc/Makefile	/^host_alias = $/;"	m
host_alias	src/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	examples/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	include/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	misc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	examples/Makefile	/^host_os = linux-gnu$/;"	m
host_os	include/Makefile	/^host_os = linux-gnu$/;"	m
host_os	misc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	examples/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	include/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	misc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_vendor	examples/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	include/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	misc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/Makefile	/^host_vendor = unknown$/;"	m
htab	src/memchk.c	/^} *htab[2048];$/;"	v	typeref:struct:descriptor	file:
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	examples/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	include/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	misc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/Makefile	/^htmldir = ${docdir}$/;"	m
i	misc/maxalign.c	/^	int i;$/;"	m	union:align	file:
ibase	examples/mpcalc.c	/^int ibase = 10;$/;"	v
idx	src/str.c	8;"	d	file:
idx	src/text.c	9;"	d	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	examples/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	include/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	misc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	examples/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	include/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	misc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inqueue	src/thread.c	/^	T *inqueue;$/;"	m	struct:T	file:
insert	src/fmt.c	/^static int insert(int c, void *cl) {$/;"	f	file:
install_sh	Makefile	/^install_sh = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/install-sh$/;"	m
install_sh	examples/Makefile	/^install_sh = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/install-sh$/;"	m
install_sh	include/Makefile	/^install_sh = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/install-sh$/;"	m
install_sh	misc/Makefile	/^install_sh = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/install-sh$/;"	m
install_sh	src/Makefile	/^install_sh = ${SHELL} \/root\/rtu\/cii-master\/build-aux\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	examples/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	include/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	misc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	examples/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	include/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	misc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	examples/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	include/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	misc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
intcmp	examples/xref.c	/^int intcmp(const void *x, const void *y) {$/;"	f
interrupt	src/thread.c	/^static int interrupt(int sig, int code,$/;"	f	file:
interrupt	src/thread.c	/^static int interrupt(int sig, struct sigcontext sc) {$/;"	f	file:
inthash	examples/xref.c	/^unsigned inthash(const void *x) {$/;"	f
intro	install.html	/^<h2><a NAME="intro">Introduction<\/a><\/h2>$/;"	a
ip	examples/spin.c	/^	int *ip;$/;"	m	struct:args	file:
iref	examples/iref.c	/^void iref(char *name, FILE *fp, Table_T identifiers) {$/;"	f
isatend	src/text.c	10;"	d	file:
isempty	src/thread.c	14;"	d	file:
isone	src/ap.c	21;"	d	file:
iszero	src/ap.c	18;"	d	file:
iszero	src/mp.c	15;"	d	file:
join	src/thread-nt.c	/^	HANDLE join;		\/* join semaphore *\/$/;"	m	struct:T	file:
join	src/thread.c	/^	T join;$/;"	m	struct:T	file:
join0	src/thread-nt.c	/^static HANDLE join0;		\/* Thread_join(NULL) semaphore *\/$/;"	v	file:
join0	src/thread.c	/^static T join0;$/;"	v	file:
join0count	src/thread-nt.c	/^static int join0count;		\/* number of threads waiting on join0; always 0 or 1 *\/$/;"	v	file:
joinlist	src/thread-nt.c	/^	T joinlist;		\/* threads waiting on join *\/$/;"	m	struct:T	file:
key	src/table.c	/^		const void *key;$/;"	m	struct:T::binding	file:
kref	examples/kref.c	/^void kref(char *name, FILE *fp, Table_T identifiers) {$/;"	f
l	misc/maxalign.c	/^	long l;$/;"	m	union:align	file:
last	examples/sieve.c	/^	int n, last;$/;"	m	struct:args	file:
lb	examples/sort.c	/^	int lb, ub;$/;"	m	struct:args	file:
ld	misc/maxalign.c	/^	long double ld;$/;"	m	union:align	file:
len	include/text.h	/^	int len;$/;"	m	struct:T
len	src/atom.c	/^	int len;$/;"	m	struct:atom	file:
length	include/arrayrep.h	/^	int length;$/;"	m	struct:T
length	src/bit.c	/^	int length;$/;"	m	struct:T	file:
length	src/ring.c	/^	int length;$/;"	m	struct:T	file:
length	src/seq.c	/^	int length;$/;"	m	struct:T	file:
length	src/set.c	/^	int length;$/;"	m	struct:T	file:
length	src/table.c	/^	int length;$/;"	m	struct:T	file:
lib_LTLIBRARIES	src/Makefile	/^lib_LTLIBRARIES = libcii.la$/;"	m
libcii_la_CPPFLAGS	src/Makefile	/^libcii_la_CPPFLAGS = -I$(top_srcdir)\/include$/;"	m
libcii_la_LDFLAGS	src/Makefile	/^libcii_la_LDFLAGS = -version-info 2:0:0$/;"	m
libcii_la_LIBADD	src/Makefile	/^libcii_la_LIBADD =$/;"	m
libcii_la_LINK	src/Makefile	/^libcii_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libcii_la_OBJECTS	src/Makefile	/^libcii_la_OBJECTS = $(am_libcii_la_OBJECTS)$/;"	m
libcii_la_SOURCES	src/Makefile	/^libcii_la_SOURCES = ap.c \\$/;"	m
libcii_la_includedir	src/Makefile	/^libcii_la_includedir = $(top_srcdir)\/include$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	examples/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	include/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	misc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	examples/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	include/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	misc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
limit	src/arena.c	/^	char *limit;$/;"	m	struct:T	file:
limit	src/text.c	/^	char *limit;$/;"	m	struct:chunk	file:
line	include/except.h	/^	int line;$/;"	m	struct:Except_Frame
line	src/memchk.c	/^	int line;$/;"	m	struct:descriptor	file:
linenum	examples/double.c	/^int linenum;$/;"	v
linenum	examples/xref.c	/^int linenum;$/;"	v
link	src/atom.c	/^	struct atom *link;$/;"	m	struct:atom	typeref:struct:atom::atom	file:
link	src/memchk.c	/^	struct descriptor *link;$/;"	m	struct:descriptor	typeref:struct:descriptor::descriptor	file:
link	src/set.c	/^		struct member *link;$/;"	m	struct:T::member	typeref:struct:T::member::member	file:
link	src/stack.c	/^		struct elem *link;$/;"	m	struct:T::elem	typeref:struct:T::elem::elem	file:
link	src/table.c	/^		struct binding *link;$/;"	m	struct:T::binding	typeref:struct:T::binding::binding	file:
link	src/text.c	/^	struct chunk *link;$/;"	m	struct:chunk	typeref:struct:chunk::chunk	file:
link	src/thread-nt.c	/^	T link;			\/* next thread on this join list *\/$/;"	m	struct:T	file:
link	src/thread.c	/^	T link;$/;"	m	struct:T	file:
llink	src/ring.c	/^		struct node *llink, *rlink;$/;"	m	struct:T::node	typeref:struct:T::node::node	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	examples/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	include/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	misc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	examples/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	include/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	misc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lp	misc/maxalign.c	/^	long *lp;$/;"	m	union:align	file:
lsbmask	src/bit.c	/^unsigned char lsbmask[] = {$/;"	v
lt_ECHO	Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	examples/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	include/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	misc/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	src/Makefile	/^lt_ECHO = echo$/;"	m
main	build-aux/config.guess	/^		main()$/;"	f
main	build-aux/config.guess	/^	main ()$/;"	f
main	build-aux/config.guess	/^main ()$/;"	f
main	examples/basename.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/calc.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/cref.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/double.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/idents.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/ids.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/iref.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/kref.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/mpcalc.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/sieve.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/sort.c	/^main(int argc, char *argv[]) {$/;"	f
main	examples/spin.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/wf.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/words.c	/^int main(int argc, char *argv[]) {$/;"	f
main	examples/xref.c	/^int main(int argc, char *argv[]) {$/;"	f
main	misc/maxalign.c	/^int main(int argc, char *argv[]) {$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	examples/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	include/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	misc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map	src/xp.c	/^static char map[] = {$/;"	v	file:
maxalign	install.html	/^    <p><a name="maxalign">On most platforms<\/a>, <code>malloc<\/code> returns pointers to$/;"	a
maxdigits	src/ap.c	19;"	d	file:
member	src/set.c	/^		const void *member;$/;"	m	struct:T::member	file:
member	src/set.c	/^	struct member {$/;"	s	struct:T	file:
memcmp	src/memcmp.c	/^int memcmp(const void *s1, const void *s2, size_t n) {$/;"	f
memmove	src/memmove.c	/^void *memmove(void *s1, const void *s2, size_t n) {$/;"	f
mk	src/ap.c	/^static T mk(int size) {$/;"	f	file:
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	examples/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	include/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	misc/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	src/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	examples/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	include/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	misc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mod	examples/mpcalc.c	/^	MP_T (*mod)(MP_T, MP_T, MP_T);$/;"	m	struct:__anon2	file:
msb	src/mp.c	/^static unsigned char msb = 0xFF;$/;"	v	file:
msbmask	src/bit.c	/^unsigned char msbmask[] = {$/;"	v
mul	examples/mpcalc.c	/^	MP_T (*mul)(MP_T, MP_T, MP_T);$/;"	m	struct:__anon2	file:
mulmod	src/ap.c	/^static T mulmod(T x, T y, T p) {$/;"	f	file:
mutex	examples/spin.c	/^	Sem_T *mutex;$/;"	m	struct:args	file:
n	examples/sieve.c	/^	int n, last;$/;"	m	struct:args	file:
n	examples/spin.c	/^int n;$/;"	v
nbits	src/mp.c	/^static int nbits  =  32;$/;"	v	file:
nbytes	src/bit.c	15;"	d	file:
nbytes	src/mp.c	/^static int nbytes = (32-1)\/8 + 1;$/;"	v	file:
ndigits	src/ap.c	/^	int ndigits;$/;"	m	struct:T	file:
next	src/thread-nt.c	/^	T next;			\/* next thread on this hash chain *\/$/;"	m	struct:T	file:
next	src/thread.c	/^	T next;$/;"	m	struct:T	file:
nfree	src/arena.c	/^static int nfree;$/;"	v	file:
node	src/ring.c	/^	struct node {$/;"	s	struct:T	file:
normalize	src/ap.c	/^static T normalize(T z, int n) {$/;"	f	file:
nthreads	src/thread-nt.c	/^static int nthreads;		\/* number of threads in allthreads *\/$/;"	v	file:
nthreads	src/thread.c	/^static int nthreads;$/;"	v	file:
nwords	src/bit.c	14;"	d	file:
obase	examples/mpcalc.c	/^int obase = 10;$/;"	v
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	examples/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	include/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	misc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
ones	src/mp.c	14;"	d	file:
outc	src/fmt.c	/^static int outc(int c, void *cl) {$/;"	f	file:
outs	examples/sort.c	/^static void outs(const char *fmt, ...) {$/;"	f	file:
p	misc/maxalign.c	/^	void *p;$/;"	m	union:align	file:
pad	src/arena.c	/^	char pad[MAXALIGN];$/;"	m	union:align	file:
pad	src/fmt.c	20;"	d	file:
pad	src/memchk.c	/^	char pad[MAXALIGN];$/;"	m	union:align	file:
partition	examples/sort.c	/^int partition(int a[], int i, int j) {$/;"	f
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	examples/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	include/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	misc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/Makefile	/^pdfdir = ${docdir}$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/libcii$/;"	m
pkgdatadir	examples/Makefile	/^pkgdatadir = $(datadir)\/libcii$/;"	m
pkgdatadir	include/Makefile	/^pkgdatadir = $(datadir)\/libcii$/;"	m
pkgdatadir	misc/Makefile	/^pkgdatadir = $(datadir)\/libcii$/;"	m
pkgdatadir	src/Makefile	/^pkgdatadir = $(datadir)\/libcii$/;"	m
pkginclude_HEADERS	include/Makefile	/^pkginclude_HEADERS = ap.h \\$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/libcii$/;"	m
pkgincludedir	examples/Makefile	/^pkgincludedir = $(includedir)\/libcii$/;"	m
pkgincludedir	include/Makefile	/^pkgincludedir = $(includedir)\/libcii$/;"	m
pkgincludedir	misc/Makefile	/^pkgincludedir = $(includedir)\/libcii$/;"	m
pkgincludedir	src/Makefile	/^pkgincludedir = $(includedir)\/libcii$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/libcii$/;"	m
pkglibdir	examples/Makefile	/^pkglibdir = $(libdir)\/libcii$/;"	m
pkglibdir	include/Makefile	/^pkglibdir = $(libdir)\/libcii$/;"	m
pkglibdir	misc/Makefile	/^pkglibdir = $(libdir)\/libcii$/;"	m
pkglibdir	src/Makefile	/^pkglibdir = $(libdir)\/libcii$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/libcii$/;"	m
pkglibexecdir	examples/Makefile	/^pkglibexecdir = $(libexecdir)\/libcii$/;"	m
pkglibexecdir	include/Makefile	/^pkglibexecdir = $(libexecdir)\/libcii$/;"	m
pkglibexecdir	misc/Makefile	/^pkglibexecdir = $(libexecdir)\/libcii$/;"	m
pkglibexecdir	src/Makefile	/^pkglibexecdir = $(libexecdir)\/libcii$/;"	m
pop	examples/calc.c	/^AP_T pop(void) {$/;"	f
pop	examples/mpcalc.c	/^MP_T pop(void) {$/;"	f
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	examples/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	include/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	misc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/Makefile	/^prefix = \/usr\/local$/;"	m
prev	include/except.h	/^	Except_Frame *prev;$/;"	m	struct:Except_Frame
prev	src/arena.c	/^	T prev;$/;"	m	struct:T	file:
print	examples/cref.c	/^void print(Table_T files) {$/;"	f
print	examples/iref.c	/^void print(Table_T files) {$/;"	f
print	examples/kref.c	/^void print(Table_T files) {$/;"	f
print	examples/xref.c	/^void print(Table_T files) {$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	examples/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	include/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	misc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	examples/Makefile	/^psdir = ${docdir}$/;"	m
psdir	include/Makefile	/^psdir = ${docdir}$/;"	m
psdir	misc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/Makefile	/^psdir = ${docdir}$/;"	m
ptr	src/chan.c	/^	const void *ptr;$/;"	m	struct:T	file:
ptr	src/memchk.c	/^	const void *ptr;$/;"	m	struct:descriptor	file:
put	src/thread.c	/^static void put(T t, T *q) {$/;"	f	file:
queue	include/sem.h	/^	void *queue;$/;"	m	struct:T
quick	examples/sort.c	/^int quick(void *cl) {$/;"	f
rcsid	examples/calc.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/cref.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/double.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/getword.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/ids.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/iref.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/kref.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/mpcalc.c	/^static const char *rcsid = "$Id$";$/;"	v	file:
rcsid	examples/sieve.c	/^static const char *rcsid = "$Id$" "\\n$Id$";$/;"	v	file:
rcsid	examples/sort.c	/^static char rcsid[] = "$Id$" "\\n$Id$";$/;"	v	file:
rcsid	examples/spin.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/wf.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	examples/xref.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/ap.c	/^static const char *rcsid = "$Id$";$/;"	v	file:
rcsid	src/arena.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/arith.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/array.c	/^static const char *rcsid = "$Id$";$/;"	v	file:
rcsid	src/assert.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/atom.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/bit.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/chan.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/except.c	/^static char rcsid[] = "$Id$" "\\n$Id$";$/;"	v	file:
rcsid	src/fmt.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/list.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/mem.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/memchk.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/mp.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/ring.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/seq.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/set.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/stack.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/str.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/table.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/text.c	/^static const char *rcsid = "$Id$";$/;"	v	file:
rcsid	src/thread-nt.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/thread.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
rcsid	src/xp.c	/^static char rcsid[] = "$Id$";$/;"	v	file:
ready	src/thread.c	/^static T ready = NULL;$/;"	v	file:
reason	include/except.h	/^	const char *reason;$/;"	m	struct:T
recv	src/chan.c	/^	Sem_T send, recv, sync;$/;"	m	struct:T	file:
release	src/thread.c	/^static void release(void) {$/;"	f	file:
removeThread	src/thread-nt.c	/^static void removeThread(T t) {$/;"	f	file:
rest	examples/cref.c	/^Text_T first, rest;$/;"	v
rest	examples/iref.c	/^Text_T first, rest;$/;"	v
rest	examples/kref.c	/^char *first, *rest;$/;"	v
rest	examples/wf.c	/^int rest(int c) {$/;"	f
rest	examples/xref.c	/^int rest(int c) {$/;"	f
rest	include/list.h	/^	T rest;$/;"	m	struct:T
rlink	src/ring.c	/^		struct node *llink, *rlink;$/;"	m	struct:T::node	typeref:struct:T::node::	file:
root	src/thread-nt.c	/^static T root;$/;"	v	file:
root	src/thread.c	/^static struct Thread_T root;$/;"	v	typeref:struct:Thread_T	file:
run	src/thread.c	/^static void run(void) {$/;"	f	file:
s	examples/mpcalc.c	/^} s = { "%D\\n",$/;"	v	typeref:struct:__anon2
safe	examples/spin.c	/^int safe(void *cl) {$/;"	f
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	examples/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	include/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	misc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sc_pc	src/thread.c	115;"	d	file:
scatter	src/atom.c	/^static unsigned long scatter[] = {$/;"	v	file:
send	src/chan.c	/^	Sem_T send, recv, sync;$/;"	m	struct:T	file:
set	src/ap.c	/^static T set(T z, long int n) {$/;"	f	file:
setop	src/bit.c	16;"	d	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	examples/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	include/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	misc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shft	src/mp.c	24;"	d	file:
shift	src/mp.c	/^static int shift  = (32-1)%8;$/;"	v	file:
sign	src/ap.c	/^	int sign;$/;"	m	struct:T	file:
sign	src/mp.c	13;"	d	file:
sink	examples/sieve.c	/^int sink(void *cl) {$/;"	f
size	include/arrayrep.h	/^	int size;$/;"	m	struct:T
size	src/ap.c	/^	int size;$/;"	m	struct:T	file:
size	src/chan.c	/^	int *size;$/;"	m	struct:T	file:
size	src/fmt.c	/^	int size;$/;"	m	struct:buf	file:
size	src/memchk.c	/^	long size;$/;"	m	struct:descriptor	file:
size	src/set.c	/^	int size;$/;"	m	struct:T	file:
size	src/table.c	/^	int size;$/;"	m	struct:T	file:
sort	examples/sort.c	/^void sort(int *x, int n, int argc, char *argv[]) {$/;"	f
source	examples/sieve.c	/^int source(void *cl) {$/;"	f
sp	examples/calc.c	/^Stack_T sp;$/;"	v
sp	examples/mpcalc.c	/^Seq_T sp;$/;"	v
sp	src/thread.c	/^	unsigned long *sp;						\/* must be first *\/$/;"	m	struct:T	file:
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	examples/Makefile	/^srcdir = .$/;"	m
srcdir	include/Makefile	/^srcdir = .$/;"	m
srcdir	misc/Makefile	/^srcdir = .$/;"	m
srcdir	src/Makefile	/^srcdir = .$/;"	m
start	src/thread-nt.c	/^static unsigned __stdcall start(void *p) {$/;"	f	file:
str	include/text.h	/^	const char *str;$/;"	m	struct:T
str	src/atom.c	/^	char *str;$/;"	m	struct:atom	file:
strerror	src/strerror.c	/^char *strerror(int errnum) {$/;"	f
strhash	examples/kref.c	/^unsigned strhash(const void *x) {$/;"	f
strncmp	src/strncmp.c	/^int strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
sub	examples/mpcalc.c	/^	MP_T (*sub)(MP_T, MP_T, MP_T);$/;"	m	struct:__anon2	file:
sub	src/ap.c	/^static T sub(T z, T x, T y) {$/;"	f	file:
subdir	Makefile	/^subdir = .$/;"	m
subdir	examples/Makefile	/^subdir = examples$/;"	m
subdir	include/Makefile	/^subdir = include$/;"	m
subdir	misc/Makefile	/^subdir = misc$/;"	m
subdir	src/Makefile	/^subdir = src$/;"	m
sync	src/chan.c	/^	Sem_T send, recv, sync;$/;"	m	struct:T	file:
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	examples/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	include/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	misc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	examples/Makefile	/^target_alias = $/;"	m
target_alias	include/Makefile	/^target_alias = $/;"	m
target_alias	misc/Makefile	/^target_alias = $/;"	m
target_alias	src/Makefile	/^target_alias = $/;"	m
temp	src/mp.c	/^static unsigned char temp[16 + 16 + 16 + 2*16+2];$/;"	v	file:
testalert	src/thread-nt.c	/^static void testalert(T t) {$/;"	f	file:
testalert	src/thread.c	/^static void testalert(void) {$/;"	f	file:
textcmp	examples/cref.c	/^int textcmp(const void *x, const void *y) {$/;"	f
textcmp	examples/iref.c	/^int textcmp(const void *x, const void *y) {$/;"	f
texthash	examples/cref.c	/^unsigned texthash(const void *x) {$/;"	f
texthash	examples/iref.c	/^unsigned texthash(const void *x) {$/;"	f
timestamp	src/set.c	/^	unsigned timestamp;$/;"	m	struct:T	file:
timestamp	src/table.c	/^	unsigned timestamp;$/;"	m	struct:T	file:
tmp	src/mp.c	/^static T tmp[] = {temp, temp+1*16, temp+2*16, temp+3*16};$/;"	v	file:
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	examples/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	include/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	misc/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	examples/Makefile	/^top_builddir = ..$/;"	m
top_builddir	include/Makefile	/^top_builddir = ..$/;"	m
top_builddir	misc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	src/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	examples/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	include/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	misc/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	src/Makefile	/^top_srcdir = ..$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	examples/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	include/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	misc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/Makefile	/^transform = $(program_transform_name)$/;"	m
u	examples/mpcalc.c	/^  u = { "%U\\n",$/;"	v	typeref:struct:__anon2
ub	examples/sort.c	/^	int lb, ub;$/;"	m	struct:args	file:
unix	install.html	/^<h2><a NAME="unix">Installation on UNIX<\/a><\/h2>$/;"	a
unsafe	examples/spin.c	/^int unsafe(void *cl) {$/;"	f
va_list_box	include/fmt.h	/^typedef struct va_list_box {$/;"	s
va_list_box	include/fmt.h	/^} va_list_box;$/;"	t	typeref:struct:va_list_box
value	src/ring.c	/^		void *value;$/;"	m	struct:T::node	file:
value	src/table.c	/^		void *value;$/;"	m	struct:T::binding	file:
vfree	examples/wf.c	/^void vfree(const void *key, void **count, void *cl) {$/;"	f
wf	examples/wf.c	/^void wf(char *name, FILE *fp) {$/;"	f
win32	install.html	/^<h2><a NAME="win32">Installation on Windows 95\/NT<\/a><\/h2>$/;"	a
words	src/bit.c	/^	unsigned long *words;$/;"	m	struct:T	file:
x	src/mp.c	/^static int apply(T op(T, T, T), T z, T x, long v) {$/;"	v	file:
x	src/mp.c	/^static int applyu(T op(T, T, T), T z, T x,$/;"	v	file:
x	src/stack.c	/^		void *x;$/;"	m	struct:T::elem	file:
xref	examples/xref.c	/^void xref(const char *name, FILE *fp,$/;"	f
xx	misc/maxalign.c	48;"	d	file:
xx	misc/maxalign.c	50;"	d	file:
xx	misc/maxalign.c	54;"	d	file:
xx	misc/maxalign.c	56;"	d	file:
yy	misc/maxalign.c	37;"	d	file:
z	src/mp.c	/^static int apply(T op(T, T, T), T z, T x, long v) {$/;"	v	file:
z	src/mp.c	/^static int applyu(T op(T, T, T), T z, T x,$/;"	v	file:

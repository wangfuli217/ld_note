#编译选项
#CFLAGS += -g -DNO_YUYAN
CFLAGS += -g 
CFLAGS += -pipe
#CFLAGS += -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free
#CFLAGS += -DHASH_CONFLICT_COUNT
#CFLAGS += -DNO_TCP_PROCESS
#CFLAGS += -DNO_UDP_PROCESS
#CFLAGS += -DNO_ICMP_PROCESS
#CFLAGS += -DTIMEOUT_LOOP_COUNT

#在$(CC)中使用的连接选项
#    当前的链接过程使用的是$(CC),由$(CC)自行调用链接器进行链接
#    一般情况下，这样已经足够了
#    以后如果有需要，改成直接使用$(LD)进行链接的方式
#LDFLAGS +=
#LDFLAGS += -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free

#根目录,执行make命令,被自动更新
ROOT_PATH=/opt/LinuxC/libs/lja_libc

#编译过程中obj文件的存放位置
OBJ_DIR=${ROOT_PATH}/tmp

#连接库路径
LIB_DIR += ${ROOT_PATH}/out/lib
LIB_DIR += ${ROOT_PATH}/obj/CUnit-2.1-2/lib
LIB_DIR += ${ROOT_PATH}/obj/mxml-2.7/lib
LIB_DIR += ${ROOT_PATH}/obj/libnet-1.1.2.1/lib
LIB_DIR += ${ROOT_PATH}/obj/libpcap-1.3.0/lib
LIB_DIR += ${ROOT_PATH}/obj/PF_RING-5.5.2/lib

#头文件路径，可以指定多个路径，当前路径始终包含在内
HEAD_DIR += ${ROOT_PATH}/out/include
HEAD_DIR += ${ROOT_PATH}/obj/CUnit-2.1-2/include
HEAD_DIR += ${ROOT_PATH}/obj/mxml-2.7/include
HEAD_DIR += ${ROOT_PATH}/obj/libnet-1.1.2.1/include
HEAD_DIR += ${ROOT_PATH}/obj/libpcap-1.3.0/include
HEAD_DIR += ${ROOT_PATH}/obj/PF_RING-5.5.2/include

Verson Format :
MAJOR    . MINOR    . PATCH      . COUNTS     [ -INFO ]
主版本号 . 次版本号 . 修正版本号 . 总更新次数 [ - 版本信息 ]
Examples :
  v0.12.1.13
  v1.0.1.15
  v2.0.0.16-beta

主版本号
  做出了不向下兼容的版本更新，或对基础的构架和设计进行了更改。
  若主版本号为 0，则说明项目处于初始开发阶段，随时可能会出现较大的变化。
次版本号
  做出了向下兼容的版本更新，项目在这时一般新增了一些功能和特性。
修正版本号
  没有新增功能，但对已有功能进行了 DEBUG 或优化。
  
总更新次数
  初始为 0，每发布一个新版本则递增一次。
  通过该项目，用户可以直观地看到当前版本与最新版本之间相差的代数。
  
# 日期版本号：用于记录修改项目的当前日期，每天对项目的修改都需要更改日期版本号。此版本号由开发人员决定是否修改。
  
版本信息
  可选项，用 - 符号与前 4 项连接. 并不参与版本新旧的判断，仅写给人看，没有固定的格式，随意发挥即可。
  例如：-beta、-alpha 说明此次更新是一个测试版本。 -base RC release
  -must 说明此版本推荐用户立即更新。

Base：此版本表示该软件仅仅是一个假页面链接，通常包括所有的功能和页面布局，但是页面中的功能都没有做完整的实现，只是做为整体网站的一个基础架构。
Alpha ：软件的初级版本，表示该软件在此阶段以实现软件功能为主，通常只在软件开发者内部交流，一般而言，该版本软件的Bug较多，需要继续修改，是测试版本。测试人员提交Bug经开发人员修改确认之后，发布到测试网址让测试人员测试，此时可                       将软件版本标注为alpha版。
Beta ：该版本相对于Alpha 版已经有了很大的进步，消除了严重错误，但还需要经过多次测试来进一步消除，此版本主要的修改对象是软件的UI。修改的的Bug 经测试人员测试确认后可发布到外网上，此时可将软件版本标注为 beta版。
RC ：该版本已经相当成熟了，基本上不存在导致错误的Bug，与即将发行的正式版本相差无几。
Release：该版本意味"最终版本"，在前面版本的一系列测试版之后，终归会有一个正式的版本，是最终交付用户使用的一个版本。该版本有时也称标准版。
  
==15973== Memcheck, a memory error detector
==15973== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==15973== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==15973== Command: ./test
==15973== 
# 1. 使用未初始化的内存或变量(Use of uninitialised memory)
     代码中我们没有对y进行初始化便传给了foo();所以给出了使用用了未初始化的值
==15973== Syscall param write(buf) points to uninitialised byte(s)
==15973==    at 0x3CCF6DA3C0: __write_nocancel (in /lib64/libc-2.12.so)
==15973==    by 0x40082A: main (test.cc:15)
==15973==  Address 0x4c2a0e0 is 0 bytes inside a block of size 4 alloc'd
==15973==    at 0x4A0717A: malloc (vg_replace_malloc.c:298)
==15973==    by 0x400810: main (test.cc:14)
==15973== 

3. 使用超过malloc分配的内存空间或下标越界(Reading/writing off the end of malloc’d blocks)
   也就是指q[4]=’x’那句，相当于相标越界了！
==15973== Invalid write of size 1
==15973==    at 0x400833: main (test.cc:16)
==15973==  Address 0x4c2a094 is 0 bytes after a block of size 4 alloc'd
==15973==    at 0x4A078F2: operator new[](unsigned long) (vg_replace_malloc.c:421)
==15973==    by 0x400802: main (test.cc:13)
==15973== 
==15973== Invalid write of size 4
==15973==    at 0x400846: main (test.cc:18)
==15973==  Address 0x4c2a040 is 0 bytes inside a block of size 8 free'd
==15973==    at 0x4A06B54: free (vg_replace_malloc.c:529)
==15973==    by 0x400841: main (test.cc:17)
==15973==  Block was alloc'd at
==15973==    at 0x4A0717A: malloc (vg_replace_malloc.c:298)
==15973==    by 0x4007F4: main (test.cc:12)
==15973== 

4. malloc/free/new/delete申请和释放内存的匹配(Mismatched use of malloc/new/new[]vs free/delete/delete []
   代码的21行p并不是通过new而得来的，但是却被delete！
==15973== Mismatched free() / delete / delete []
==15973==    at 0x4A0673A: operator delete(void*) (vg_replace_malloc.c:574)
==15973==    by 0x400857: main (test.cc:19)
==15973==  Address 0x4c2a0e0 is 0 bytes inside a block of size 4 alloc'd
==15973==    at 0x4A0717A: malloc (vg_replace_malloc.c:298)
==15973==    by 0x400810: main (test.cc:14)
==15973== 
5. src和dst的重叠(Overlapping src and dst pointers in memcpy() and related functions)
   Memcpy()的src和dest发生了重叠！
==15973== Source and destination overlap in memcpy(0x4c2a090, 0x4c2a091, 3)
==15973==    at 0x4A098F8: memcpy (vg_replace_strmem.c:1019)
==15973==    by 0x400873: main (test.cc:20)
==15973== 
==15973== Mismatched free() / delete / delete []
==15973==    at 0x4A0673A: operator delete(void*) (vg_replace_malloc.c:574)
==15973==    by 0x40087F: main (test.cc:21)
==15973==  Address 0x4c2a090 is 0 bytes inside a block of size 4 alloc'd
==15973==    at 0x4A078F2: operator new[](unsigned long) (vg_replace_malloc.c:421)
==15973==    by 0x400802: main (test.cc:13)
==15973== 
2. 使用已经释放了的内存(Reading/writing memory after it has been free’d)
   代码中我们对q进行了两次delete！
==15973== Invalid free() / delete / delete[] / realloc()
==15973==    at 0x4A0673A: operator delete(void*) (vg_replace_malloc.c:574)
==15973==    by 0x40088B: main (test.cc:22)
==15973==  Address 0x4c2a090 is 0 bytes inside a block of size 4 free'd
==15973==    at 0x4A0673A: operator delete(void*) (vg_replace_malloc.c:574)
==15973==    by 0x40087F: main (test.cc:21)
==15973==  Block was alloc'd at
==15973==    at 0x4A078F2: operator new[](unsigned long) (vg_replace_malloc.c:421)
==15973==    by 0x400802: main (test.cc:13)
   
==15973== 
==15973== 
==15973== HEAP SUMMARY:
==15973==     in use at exit: 0 bytes in 0 blocks
==15973==   total heap usage: 3 allocs, 4 frees, 16 bytes allocated
==15973== 
==15973== All heap blocks were freed -- no leaks are possible
==15973== 
==15973== For counts of detected and suppressed errors, rerun with: -v
==15973== Use --track-origins=yes to see where uninitialised values come from
==15973== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 4 from 4)
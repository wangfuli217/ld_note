

http://www.kuqin.com/qtdocument/qtextedit.html

QFile file( fileName ); // 从文件中读取文本
if ( file.open( IO_ReadOnly ) ) {
    QTextStream ts( &file );
    textEdit->setText( ts.read() );
}


QFile file( fileName ); // 把文本写入到文件中
if ( file.open( IO_WriteOnly ) ) {
    QTextStream ts( &file );
    ts << textEdit->text();
    textEdit->setModified( FALSE );
}

(widgets\richtext\textedit\textedit.cpp)

fileNew     textEdit->clear(); textEdit->document()->setModified(false);
fileOpen    fn = QFileDialog::getOpenFileName(...); textEdit->setHtml(str); textEdit->setPlainText(str);

================================================================================
https://zhuanlan.zhihu.com/p/28992423
富文本编辑器
与普通的纯文本相比，富文本其实就是可以显示图片，链接，表格，对文本进行格式化处理等的编辑器。
有人可能还会拿markdown和富文本相比较，其实markdown就是通过一些标识字符将信息转化成富文本。

# 属性
1 autoFormatting
自动格式化，这里的格式化类似于word文档中的自动格式化。
    AutoNone：不进行任何自动格式化。
    AutoBulletList：自动创建列表。(当用户在当前行最左侧输入一个星号*，就会创建一个列表条目。
    如果在一个已有的列表后输入回车，则会创建一个新列表。这个功能类似于markdown的语法)。
    AutoAll：打开所有自动格式化。但目前只支持列表的自动格式化。
    
2 cursorWidth
    光标宽度，默认为1个像素

3 lineWrapColumnOrWidth
    如果属性wordWrapMode是FixedPixelWidth，那么它表示从文本编辑框的文本像素宽。
    如果wordWrapMode是FixedColumnWidth，其值表示列号。

4 lineWrapMode
换行模式
    NoWrap 不换行。
    WidgetWidth 到达窗口边缘处换行。默认模式。
    FixedPixelWidth 到达固定的像素值换行。
    FixedColumnWidth 到达固定的列号换行。
    
5 overwriteMode
    true-相当于文本编辑器中的插入模式。

6 plainText
    纯文本
    如果要获取编辑框的文本，可以调用toPlainText()
    
7 tabChangesFocus
    一般情况下，tab键用来切换控件焦点，但在文本编辑框中经常用tab键作为输入，设置该属性为false，则编辑框接收tab输入。

8 tabStopWidth
    设置tab键缩进距离（像素）

9 wordWrapMode
    单词换行模式
    NoWrap： 不换行。
    WordWrap： 在边界换行，单词本身并不会被拆分，如果当前行无法显示，则会显示在下一行。
    ManualWrap：同NoWrap不换行。
    WrapAnywhere： 一个单词可以分多行显示。WrapAtWordBoundaryOrAnywhere： WordWrap|WrapAnywhere
注意换行模式中，要先以lineWrapMode为标准，再看wordWrapMode。

10 html
    QTextEdit还支持使用html标记语言。
    
    
    
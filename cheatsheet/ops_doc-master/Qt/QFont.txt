QFont 类代表字体，实现在 QtGui 共享库中。


1. 构造
QFont 类有以下几个常用的构造函数：
QFont();    // 由应用程序的默认字体构造新字体对象
QFont(const QString &family, int pointSize = -1, int weight = -1, bool italic = false);  

其中第二个构造函数的各个参数的含义解释如下。
1) family: 字体的名称。
2) pointSize: 字体的点大小，如果这个参数小于等于0，则自动设为 12。
3) weight: 字体的粗细。
4) italic: 字体是否为斜体。
这些参数也可以在字体对象构造以后通过属性来修改。


2. 属性
QFont 类的常用属性如下所示：
字体的属性         获取所用成员函数             设置所有成员函数
名称               QString family() const;      void setFamily(const QString &family);
点大小             int pointSize() const;       void setPointSize(int pointSize);
像素大小           int pixelSize() const;       void setPixelSize(int pixelSize);
粗细               int weight() const;          void setWeight(int weight);
粗体               bool bold() const;           void setBold(bool enable);
斜体               bool italic() const;         void setItalic(bool enable);
下划线             bool underline() const;      void setUnderline(bool enable);

    其中设置粗体属性实际上就是将字体的粗细设为一个确定的值。点大小与像素大小是指定字体大小的两种方式。
如果指定了点大小，则像素大小属性的值就是 -1；反之如果指定了像素大小，则点大小属性的值就是 -1。  
    如果指定的字体在使用时没有对应的字体文件，Qt 将自动选择最接近的字体。
    如果要显示的字符在字体中不存在，则字符会被显示为一个空心方框。
    
    
6、设置组件字体
QFont font = this->font();
font.setFamily("Courier");  //字体名称
font.setPixelSize(16);  //字体点大小
font.setPointSize(18);  //字体像素大小
font.setBold(true);  //是否加粗
font.setItalic(true);  //是否斜体
font.setUnderline(true);  //是否下划线
this->setFont(font);

字体风格，包括类型、大小、是否加粗、是否斜体等！
也可以使用：setStyleSheet("text-align:center; font-size:18px; font-weight:bold; font-style:Courier; color:white; ");
setAlignment(Qt::AlignCenter);  //设置对齐方式


5、设置应用程序的字体
QFont font("Courier", 10, QFont::Normal, false);
QApplication::setFont(font);
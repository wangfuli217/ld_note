// note that 'ctor' and its calling convention is burnt into this file
//
% init			// implement %init request

`{dcl
  `{ifnot `class `
	`{if `newmeta 1

	  `%selectors

	  static  void  *  `meta _ctor  (void  *  _self,  va_list  *  app)  { `n
	`t	struct  `meta  *  self  =  super_ctor( `meta (),  _self,  app); `n
	`t	Method  selector; `n
	`t	va_list  ap  =  *  app; `n `n

		`%meta-ctor-loop
	`t	return  self; `n
	  } `n `n

      static  const  void  *  _ `meta ; `n `n

      const  void  *  `%const `meta  (void)  { `n
	`t	return  _ `meta  ?  _ `meta  : `n
	`t	`t	(_ `meta  =  new( `metaroot (), `n
	`t	`t	`t	" `meta ",  `supermeta (),  sizeof(struct  `meta ), `n
	`t	`t	`t	ctor,  "",  `meta _ctor, `n
				`{links `meta
	`t	`t	`t	`method ,  " `tag ",  `meta _ `method , `n
				`}
	`t	`t	`t	(void  *)  0)); `n
	  } `n `n

	`}fi

	static  const  void  *  _ `class ; `n `n

	const  void  *  `%const `class  (void)  { `n
	`t	return  _ `class  ?  _ `class  : `n
	`t	`t	(_ `class  =  new( `meta (), `n
	`t	`t	`t	" `class ",  `super (),  sizeof(struct  `class ), `n
				`{links `class
	`t	`t	`t	`method ,  " `tag ",  `class _ `method , `n
				`}
	`t	`t	`t	(void  *)  0)); `n
	} `n

  `}fi
`}dcl

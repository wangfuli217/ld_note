getopt (处理命令行选项参数,只能接短选项)

#include <unistd.h>
#include <getopt.h> /*getopt函数所在头文件*/
int getopt(int argc, char * const argv[], const char *optstring);
/*
	para1:main()函数传递过来的参数的个数(e.g.argc).
	para2:main()函数传递过来的参数的字符串指针数组(e.g.argv).
	para3:选项字符串,告知getopt()可以处理哪个命令行选项以及选项是否需要参数.
		char *optstring = "ab:c::";
		1.单个字符a -->表示命令行选项a没有参数.
			格式为: ./a.out -a即可,不带命令行选项的参数
		2.单个字符加冒号b: -->表示命令行选项b必须带参数.
			格式为: ./a.out -b 100或者./a.out -b100.其后面带一个命令行选项参数"100".
			像格式:./a.out -b=100是错的.
		3.单个字符加2个冒号c:: -->表示命令行选项c可以带也可以不带参数.
			格式为: ./a.out -c200. --->必须是这种格式,其他格式是错误的.

	retval:
		1.如果选项成功找到,则返回选项字母(e.g.命令行指定了"-a",该函数会返回字母"a".);
		2.如果所有命令行选项解析完毕,返回"-1";
		3.如果遇到命令行选项字符不在optstring中,返回字符"?";
		4.如果遇到丢失命令行选项的参数,返回值依赖于optstring中的第一个字符,
			如果optstring中的第一个字符为":",则直接返回":";否则返回"?"并提示错误信息.
*/
//一些重要的变量
extern char *optarg; //getopt.h中声明的全局变量,在函数中可以直接使用.
	optarg--->指向当前命令行选项所带的参数的指针(为一个字符串).
extern int optind;	//下一个命令行选项的索引值,即下一个argv指针的索引
extern int optopt;	//最后一个未知选项
extern int opterr;	//如果不希望getopt()打印出错信息,则只要将全局变量opterr设为0即可.

实例

#include <stdio.h>
#include <unistd.h>
#include <getopt.h>
int main(int argc, char *argv[])
{
	int opt;
	char *string = "a::b:c:d";
	while ((opt = getopt(argc, argv, string) != -1)) {
		printf("opt = %c\t\t", opt); //打印getopt返回的命令行选项字母
		printf("optarg = %s\t\t", optarg); //打印出当前命令行选项所带的参数
		printf("optind = %d\t\t", optind); //打印出下一个命令行选项的索引值
		printf("argv[%d] = %s\n", optind, argv[optind]); //打印出下一个命令行选项
	}
}

//测试:
1)./a.out -a100 -b 200 -c 300 -d		//a:可带参数的选项; b,c:必带参数的选项; d:不带参数的选项.
	opt = a		optarg = 100		optind = 2		argv[2] = -b
	opt = b		optarg = 200		optind = 4		argv[4] = -c
	opt = c		optarg = 300		optind = 6		argv[6] = -d
	opt = d		optarg = (null)		optind = 7		argv[7] = (null)
2)./a.out -a100 -b200 -c300 -d
	opt = a		optarg = 100		optind = 2		argv[2] = -b200
	opt = b		optarg = 200		optind = 3		argv[3] = -c300
	opt = c		optarg = 300		optind = 4		argv[4] = -d
	opt = d		optarg = (null)		optind = 5		argv[5] = (null)
3)./a.out -a -b 200 -c 300 -d		//命令行选项所带的可选参数没有的情况
	opt = a		optarg = (null)		optind = 2		argv[2] = -b
	opt = b		optarg = 200		optind = 4		argv[4] = -c
	opt = c		optarg = 300		optind = 6		argv[5] = -d
	opt = d		optarg = (null)		optind = 7		argv[7] = (null)
4)./a.out -a 100 -b 200 -c 300 -d	//命令行选项所带的可选参数错误的情况(-a 100--->格式错误)
	opt = a		optarg = (null)		optind = 2		argv[2] = 100 //optarg为null,错误
	opt = b		optarg = 200		optind = 5		argv[5] = -c
	opt = c		optarg = 300		optind = 7		argv[7] = -d
	opt = d		optarg = (null)		optind = 8		argv[8] = (null)
5)./a.out -a -b 200 -c				//命令行选项必带参数但是不加参数的错误情况(-c--->后面没有参数)
	opt = a		optarg = (null)		optind = 2		argv[optind] = -b
	opt = b		optarg = 200		optind = 4		argv[optind] = -c
	./opt: optionrequires an argument -- 'c'		//出现错误了
	opt = ?		optarg = (null)		optind = 5		argv[optind] = (null)
6)./a.out -a -b 200 -e				//输入未定义的命令行选项出错的情况
	opt = a		optarg = (null)		optind = 2		argv[optind] = -b
	opt = b		optarg = 200		optind = 4		argv[optind] = -e
	./opt: invalidoption -- 'e'		//出现错误了
	opt = ?		optarg = (null)		optind = 5		argv[optind] = (null)
HTTP 请求报文由请求行、请求头部、空行 和 请求包体 4 个部分组成

1. 请求行：请求行由方法字段、URL 字段 和HTTP 协议版本字段 3 个部分组成，他们之间使用空格隔开。
   常用的 HTTP 请求方法有 GET、POST、HEAD、PUT、DELETE、OPTIONS、TRACE、CONNECT;
    ● GET：当客户端要从服务器中读取某个资源时，使用GET 方法。GET 方法要求服务器将URL 定位的资源放在响应报文的数据部分，回送给客户端，即向服务器请求某个资源。使用GET 方法时，请求参数和对应的值附加在 URL 后面，利用一个问号(“?”)代表URL 的结尾与请求参数的开始，传递参数长度受限制。例如，/index.jsp?id=100&op=bind。
　　● POST：当客户端给服务器提供信息较多时可以使用POST 方法，POST 方法向服务器提交数据，比如完成表单数据的提交，将数据提交给服务器处理。GET 一般用于获取/查询资源信息，POST 会附带用户数据，一般用于更新资源信息。POST 方法将请求参数封装在HTTP 请求数据中，以名称/值的形式出现，可以传输大量数据;
2. 请求头部：请求头部由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔。请求头部通知服务器有关于客户端请求的信息，典型的请求头有：
    ● User-Agent：产生请求的浏览器类型;
　　● Accept：客户端可识别的响应内容类型列表;星号 “ * ” 用于按范围将类型分组，用 “ */* ” 指示可接受全部类型，用“ type/* ”指示可接受 type 类型的所有子类型;
　　● Accept-Language：客户端可接受的自然语言;
　　● Accept-Encoding：客户端可接受的编码压缩格式;
　　● Accept-Charset：可接受的应答的字符集;
　　● Host：请求的主机名，允许多个域名同处一个IP 地址，即虚拟主机;
　　● connection：连接方式(close 或 keepalive);
　　● Cookie：存储于客户端扩展字段，向同一域名的服务端发送属于该域的cookie;
3. 空行：最后一个请求头之后是一个空行，发送回车符和换行符，通知服务器以下不再有请求头;
4. 请求包体：请求包体不在 GET 方法中使用，而是在POST 方法中使用。POST 方法适用于需要客户填写表单的场合。
   与请求包体相关的最常使用的是包体类型 Content-Type 和包体长度 Content-Length; 


HTTP 响应报文由状态行、响应头部、空行 和 响应包体 4 个部分组成，
1. 状态行：状态行由 HTTP 协议版本字段、状态码和状态码的描述文本 3 个部分组成，他们之间使用空格隔开;
　　● 状态码由三位数字组成，第一位数字表示响应的类型，常用的状态码有五大类如下所示：
　　1xx：这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以
         空行结束。由于HTTP/1.0协议中没有定义任何1xx状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送1xx响
         应。 这些状态码代表的响应都是信息性的，标示客户应该采取的其他行动。
        100 - 客户端应当继续发送请求
        101 - 切换协议
        102 - 处理将被继续执行
　　2xx：类型的状态码，代表请求已成功被服务器接收、理解、并接受。
        200 - （成功）请求已成功，请求所希望的响应头或数据体将随此响应返回。
        201 - （已创建）请求成功且服务器已创建了新的资源。。
        202 - （已接受）服务器已接受了请求，但尚未对其进行处理。
        203 - （非授权信息）服务器已成功处理了请求，但返回了可能来自另一来源的信息。
        204 - （无内容）服务器成功处理了请求，但未返回任何内容。
        205 - （重置内容）服务器成功处理了请求，但未返回任何内容。
        206 - （部分内容）服务器成功处理了部分 GET 请求。
　　3xx：这类状态码代表需要客户端采取进一步的操作才能完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）
         在本次响应的Location域中指明。按照HTTP/1.0版规范的建议，浏览器不应自动访问超过5次的重定向。对重定向一般是由浏览
         器来控制重定向的次数，重定向会导致客户端不必要的资源消耗
        300 - 多重选择，被请求的资源有一系列可供选择的回馈信息。
        301 - 永久移除，被请求的资源已永久移动到新位置。
        302 - 临时移动，请求的资源现在临时从不同的URI响应请求。
        303 - 查看其他位置，对应当前请求的响应可以在另一个URI上被找到，而且客户端应当采用GET的方式访问那个资源。
        304 - 未修改。自从上次请求后，请求的网页未被修改过。服务器返回此响应时，不会返回网页内容。
        305 - 使用代理，被请求的资源必须通过指定的代理才能被访问。
        306 - 临时重定向，在最新版的规范中，306状态码已经不再被使用。
        307 - 临时重定向。
　　4xx：这类的状态码代表了客户端看起来可能发生了错误，妨碍了服务器的处理。
        400 - 错误的请求。
        401 - 访问被拒绝。
        402 - 付款要求。
        403 - 禁止访问
            403.1 - 执行访问被禁止。
            403.2 - 读访问被禁止。
            403.3 - 写访问被禁止。
            403.4 - 要求 SSL。
            403.5 - 要求 SSL 128。
            403.6 - IP 地址被拒绝。
            403.7 - 要求客户端证书。
            403.8 - 站点访问被拒绝。
            403.9 - 用户数过多。
            403.10 - 配置无效。
            403.11 - 密码更改。
            403.12 - 拒绝访问映射表。
            403.13 - 客户端证书被吊销。
            403.14 - 拒绝目录列表。
            403.15 - 超出客户端访问许可。
            403.16 - 客户端证书不受信任或无效。
            403.17 - 客户端证书已过期或尚未生效。
            403.18 - 在当前的应用程序池中不能执行所请求的 URL。
            403.19 - 不能为这个应用程序池中的客户端执行 CGI。
            403.20 - Passport 登录失败。
        404 - 未找到。
            404.0 -（无） – 没有找到文件或目录。
            404.1 - 无法在所请求的端口上访问 Web 站点。
            404.2 - Web 服务扩展锁定策略阻止本请求。
            404.3 - MIME 映射策略阻止本请求。
        405 - 用来访问本页面的 HTTP 谓词不被允许（方法不被允许）
        406 - 客户端浏览器不接受所请求页面的 MIME 类型。
        407 - 要求进行代理身份验证。
        408 - 请求超时。
        409 - 由于和被请求的资源的当前状态之间存在冲突，请求无法完成。
        410 - 被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。
        411 - 服务器拒绝在没有定义Content-Length头的情况下接受请求。
        412 - 前提条件失败。
        413 – 请求实体太大。
        414 - 请求 URI 太长。
        415 – 不支持的媒体类型。
        416 – 所请求的范围无法满足。
        417 – 执行失败。
        418 – 本操作码是在1998年作为IETF的传统愚人节笑话。
        421 – 从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。
        422 – 请求格式正确，但是由于含有语义错误，无法响应。
        423 – 当前资源被锁定。
        424 – 由于之前的某个请求发生的错误，导致当前请求失败。
        425 – 无序的集合。
        426 – 客户端应当切换到TLS/1.0。
        451 – （由IETF在2015核准后新增加）该访问因法律的要求而被拒绝。
　　5xx：这类状态码代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。
        500 - 内部服务器错误。
        501 - 尚未实施，页眉值指定了未实现的配置。
        502 - 错误网关，Web 服务器用作网关或代理服务器时收到了无效响应。
        503 - 服务不可用，这个错误代码为 IIS 6.0 所专用。
        504 - 网关超时，服务器作为网关或代理，未及时从上游服务器接收请求。
        505 - HTTP 版本不受支持，服务器不支持请求中所使用的 HTTP 协议版本。
        506 - 服务器没有正确配置。
        507 - 存储空间不足。服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。
        509 - 带宽超过限制。这不是一个官方的状态码，但是仍被广泛使用。
        510 - 没有扩展，获取资源所需要的策略并没有被满足。
　　● 状态码描述文本有如下取值：
　　200 OK：表示客户端请求成功;
　　400 Bad Request：表示客户端请求有语法错误，不能被服务器所理解;
　　401 Unauthonzed：表示请求未经授权，该状态代码必须与 WWW-Authenticate 报头域一起使用;
　　403 Forbidden：表示服务器收到请求，但是拒绝提供服务，通常会在响应正文中给出不提供服务的原因;
　　404 Not Found：请求的资源不存在，例如，输入了错误的URL;
　　500 Internal Server Error：表示服务器发生不可预期的错误，导致无法完成客户端的请求;
　　503 Service Unavailable：表示服务器当前不能够处理客户端的请求，在一段时间之后，服务器可能会恢复正常;
2. 响应头部：响应头可能包括：
　　Location：Location响应报头域用于重定向接受者到一个新的位置。例如：客户端所请求的页面已不存在原先的位置，为了让客户端重定向到这个页面新的位置，服务器端可以发回Location响应报头后使用重定向语句，让客户端去访问新的域名所对应的服务器上的资源;
　　Server：Server 响应报头域包含了服务器用来处理请求的软件信息及其版本。它和 User-Agent 请求报头域是相对应的，前者发送服务器端软件的信息，后者发送客户端软件(浏览器)和操作系统的信息。
　　Vary：指示不可缓存的请求头列表;
　　Connection：连接方式;
对于请求来说：close(告诉 WEB 服务器或者代理服务器，在完成本次请求的响应后，断开连接，不等待本次连接的后续请求了)。keepalive(告诉WEB服务器或者代理服务器，在完成本次请求的响应后，保持连接，等待本次连接的后续请求);

　　对于响应来说：close(连接已经关闭); keepalive(连接保持着，在等待本次连接的后续请求); Keep-Alive：如果浏览器请求保持连接，则该头部表明希望WEB 服务器保持连接多长时间(秒);例如：Keep-Alive：300;

　　WWW-Authenticate：WWW-Authenticate响应报头域必须被包含在401 (未授权的)响应消息中，这个报头域和前面讲到的Authorization 请求报头域是相关的，当客户端收到 401 响应消息，就要决定是否请求服务器对其进行验证。如果要求服务器对其进行验证，就可以发送一个包含了Authorization 报头域的请求;

3. 空行：最后一个响应头部之后是一个空行，发送回车符和换行符，通知服务器以下不再有响应头部。
4. 响应包体：服务器返回给客户端的文本信息;
   
   
HTTP 工作原理
1. HTTP 无状态性
　　HTTP 协议是无状态的(stateless)。也就是说，同一个客户端第二次访问同一个服务器上的页面时，服务器无法知道这个客户端曾经访问过，服务器也无法分辨不同的客户端。HTTP 的无状态特性简化了服务器的设计，使服务器更容易支持大量并发的HTTP 请求。
2. HTTP 持久连接
　　HTTP1.0 使用的是非持久连接，主要缺点是客户端必须为每一个待请求的对象建立并维护一个新的连接，即每请求一个文档就要有两倍RTT 的开销。因为同一个页面可能存在多个对象，所以非持久连接可能使一个页面的下载变得十分缓慢，而且这种短连接增加了网络传输的负担。HTTP1.1 使用持久连接keepalive，所谓持久连接，就是服务器在发送响应后仍然在一段时间内保持这条连接，允许在同一个连接中存在多次数据请求和响应，即在持久连接情况下，服务器在发送完响应后并不关闭TCP 连接，而客户端可以通过这个连接继续请求其他对象。
　　HTTP/1.1 协议的持久连接有两种方式：
　　● 非流水线方式：客户在收到前一个响应后才能发出下一个请求;
　　● 流水线方式：客户在收到 HTTP 的响应报文之前就能接着发送新的请求报文;




AUTHORS       - me
Autogen.sh    - build script by Christopher Sean Morrison <morrison@brlcad.org>
                to compile with very old GNU Build System (eg. autoconf < 2.60)
ChangeLog     - what happened last week-end
FEATURES      - list of current 'lb' features compared with the popular Apache 'ab' tool
INSTALL       - compilation instructions
LICENSE       - 3-clause BSD LICENSE
MANIFEST      - list of files distributed as a part of the software
Makefile.am   - compilation rules for source (input to the GNU automake tool)
Makefile.in   - a machine generated file from the GNU automake tool
NEWS          - what happended from lastest release
README        - the most important file in the package
SAMPLE-OUTPUT - simple output generated by both 'lb' and 'ab' against 'wls' over Ethernet loopback/LAN
TODO          - what I planned in my spare time
aclocal.m4    - a machine generated file from the GNU aclocal tool
autogen.sh    - prepare the build system for compilation on the target machine
bench-lb.sh   - a shell script to compare how fast several HTTP clients are
callbacks.c   - all the callback functions to handle asynchronous events
config.guess  - a machine generated file from the GNU automake tool
config.sub    - a machine generated file from the GNU automake tool
configure     - a machine generated file from the GNU autoconf tool
configure.ac  - rules to generate the configuration scripts
depcomp       - a machine generated file from the GNU automake tool
install-sh    - a machine generated file from the GNU automake tool
lb.8          - manual entry (please use with caution)
lb.c          - main program
lb.h          - constants and types
lb.servers    - template for the HTTP servers file
ltmain.sh     - a machine generated file from the GNU libtoolize tool
missing       - a machine generated file from the GNU automake tool
m4            - directory with machine generated files from the GNU aclocal tool
nb.c          - modified version of Nick's simple HTTP client benchmark
requests.c    - how to keep in memory Libevent-based HTTP requests
servers.c     - how to keep in memory Libevent-driven HTTP servers
site-lb.h.in  - a machine generated file from the GNU autoheader tool
slurp.c       - how to read the HTTP servers file in memory
time.c        - panta rhei, "everything is in a state of flux"
uri.c         - parse and split a string into URI components
utils.c       - common functions used by the tool
varrays.c     - how to handle vectors of pointers to void objects
wsl.c         - minimal Libevent-based web-server used for testing

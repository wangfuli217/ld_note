!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/missing --run aclocal-1.11$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/missing --run tar$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/missing --run automake-1.11$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -Wall$/;"	m
CHECK_FMT	bench-log.h	43;"	d
CHECK_FMT	bench-log.h	45;"	d
CIRCLEQ_EMPTY	compat/sys/queue.h	401;"	d
CIRCLEQ_END	compat/sys/queue.h	398;"	d
CIRCLEQ_ENTRY	compat/sys/queue.h	387;"	d
CIRCLEQ_FIRST	compat/sys/queue.h	396;"	d
CIRCLEQ_FOREACH	compat/sys/queue.h	404;"	d
CIRCLEQ_FOREACH_REVERSE	compat/sys/queue.h	409;"	d
CIRCLEQ_HEAD	compat/sys/queue.h	378;"	d
CIRCLEQ_HEAD_INITIALIZER	compat/sys/queue.h	384;"	d
CIRCLEQ_INIT	compat/sys/queue.h	417;"	d
CIRCLEQ_INSERT_AFTER	compat/sys/queue.h	422;"	d
CIRCLEQ_INSERT_BEFORE	compat/sys/queue.h	432;"	d
CIRCLEQ_INSERT_HEAD	compat/sys/queue.h	442;"	d
CIRCLEQ_INSERT_TAIL	compat/sys/queue.h	452;"	d
CIRCLEQ_LAST	compat/sys/queue.h	397;"	d
CIRCLEQ_NEXT	compat/sys/queue.h	399;"	d
CIRCLEQ_PREV	compat/sys/queue.h	400;"	d
CIRCLEQ_REMOVE	compat/sys/queue.h	462;"	d
CIRCLEQ_REPLACE	compat/sys/queue.h	475;"	d
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_PLAIN_ADDR	bench-client.c	48;"	d	file:
DEFAULT_PLAIN_ADDR	bench-server.c	49;"	d	file:
DEFAULT_SSL_ADDR	bench-client.c	49;"	d	file:
DEFAULT_SSL_ADDR	bench-server.c	50;"	d	file:
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(am__configure_deps) $(noinst_HEADERS) \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(client_SOURCES) $(server_SOURCES)$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
GENERAL_SRCS	Makefile	/^GENERAL_SRCS = bench-messages.c bench-log.c ssl-utils.c$/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
HEADERS	Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
KEY	ssl-utils.c	/^static const char KEY[] =$/;"	v	file:
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBEVENT_CFLAGS	Makefile	/^LIBEVENT_CFLAGS = -I\/usr\/local\/include  $/;"	m
LIBEVENT_LIBS	Makefile	/^LIBEVENT_LIBS = -L\/usr\/local\/lib -levent  $/;"	m
LIBEVENT_SSL_CFLAGS	Makefile	/^LIBEVENT_SSL_CFLAGS = -I\/usr\/local\/include  $/;"	m
LIBEVENT_SSL_LIBS	Makefile	/^LIBEVENT_SSL_LIBS = -L\/usr\/local\/lib -levent_openssl -levent  $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LIST_EMPTY	compat/sys/queue.h	159;"	d
LIST_END	compat/sys/queue.h	158;"	d
LIST_ENTRY	compat/sys/queue.h	148;"	d
LIST_FIRST	compat/sys/queue.h	157;"	d
LIST_FOREACH	compat/sys/queue.h	162;"	d
LIST_HEAD	compat/sys/queue.h	140;"	d
LIST_HEAD_INITIALIZER	compat/sys/queue.h	145;"	d
LIST_INIT	compat/sys/queue.h	170;"	d
LIST_INSERT_AFTER	compat/sys/queue.h	174;"	d
LIST_INSERT_BEFORE	compat/sys/queue.h	182;"	d
LIST_INSERT_HEAD	compat/sys/queue.h	189;"	d
LIST_NEXT	compat/sys/queue.h	160;"	d
LIST_REMOVE	compat/sys/queue.h	196;"	d
LIST_REPLACE	compat/sys/queue.h	203;"	d
LOG_DEBUG	bench-log.h	/^	LOG_DEBUG,$/;"	e	enum:log_level
LOG_ERROR	bench-log.h	/^	LOG_ERROR,$/;"	e	enum:log_level
LOG_FATAL	bench-log.h	/^	LOG_FATAL$/;"	e	enum:log_level
LOG_INFO	bench-log.h	/^	LOG_INFO,$/;"	e	enum:log_level
LOG_NOTICE	bench-log.h	/^	LOG_NOTICE,$/;"	e	enum:log_level
LOG_WARN	bench-log.h	/^	LOG_WARN,$/;"	e	enum:log_level
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/missing --run makeinfo$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MSGST_CONT	bench-messages.h	/^	MSGST_CONT = 0,$/;"	e	enum:message_status
MSGST_FAIL	bench-messages.h	/^	MSGST_FAIL = -1,$/;"	e	enum:message_status
MSGST_OK	bench-messages.h	/^	MSGST_OK = 1$/;"	e	enum:message_status
MSG_ECHO_REQ	bench-messages.h	/^	MSG_ECHO_REQ,$/;"	e	enum:message_type
MSG_ECHO_RSP	bench-messages.h	/^	MSG_ECHO_RSP,$/;"	e	enum:message_type
MSG_ERROR	bench-messages.h	/^	MSG_ERROR,$/;"	e	enum:message_type
MSG_FILE_CONTENTS	bench-messages.h	/^	MSG_FILE_CONTENTS,$/;"	e	enum:message_type
MSG_FILE_LIST_REQ	bench-messages.h	/^	MSG_FILE_LIST_REQ,$/;"	e	enum:message_type
MSG_FILE_LIST_RSP	bench-messages.h	/^	MSG_FILE_LIST_RSP,$/;"	e	enum:message_type
MSG_GREETING_REQ	bench-messages.h	/^	MSG_GREETING_REQ,$/;"	e	enum:message_type
MSG_GREETING_RSP	bench-messages.h	/^	MSG_GREETING_RSP,$/;"	e	enum:message_type
MSG_OK	bench-messages.h	/^	MSG_OK,$/;"	e	enum:message_type
MSG_PEER_NOTICE	bench-messages.h	/^	MSG_PEER_NOTICE,$/;"	e	enum:message_type
MSG_SEND_CHAT	bench-messages.h	/^	MSG_SEND_CHAT,$/;"	e	enum:message_type
MSG_SEND_FILE	bench-messages.h	/^	MSG_SEND_FILE,$/;"	e	enum:message_type
MSG_TYPE_MAX	bench-messages.h	/^	MSG_TYPE_MAX,$/;"	e	enum:message_type
MSG_TYPE_MIN	bench-messages.h	/^	MSG_TYPE_MIN,$/;"	e	enum:message_type
MSG_UNKNOWN	bench-messages.h	/^	MSG_UNKNOWN,$/;"	e	enum:message_type
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
PACKAGE	Makefile	/^PACKAGE = libevent-bench$/;"	m
PACKAGE	config.h	5;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	config.h	8;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = libevent-bench$/;"	m
PACKAGE_NAME	config.h	11;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = libevent-bench 0.0.0$/;"	m
PACKAGE_STRING	config.h	14;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = libevent-bench$/;"	m
PACKAGE_TARNAME	config.h	17;"	d
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	20;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 0.0.0$/;"	m
PACKAGE_VERSION	config.h	23;"	d
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
RATE_MAX	bench-server.c	51;"	d	file:
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMPLEQ_EMPTY	compat/sys/queue.h	233;"	d
SIMPLEQ_END	compat/sys/queue.h	232;"	d
SIMPLEQ_ENTRY	compat/sys/queue.h	223;"	d
SIMPLEQ_FIRST	compat/sys/queue.h	231;"	d
SIMPLEQ_FOREACH	compat/sys/queue.h	236;"	d
SIMPLEQ_HEAD	compat/sys/queue.h	214;"	d
SIMPLEQ_HEAD_INITIALIZER	compat/sys/queue.h	220;"	d
SIMPLEQ_INIT	compat/sys/queue.h	244;"	d
SIMPLEQ_INSERT_AFTER	compat/sys/queue.h	261;"	d
SIMPLEQ_INSERT_HEAD	compat/sys/queue.h	249;"	d
SIMPLEQ_INSERT_TAIL	compat/sys/queue.h	255;"	d
SIMPLEQ_NEXT	compat/sys/queue.h	234;"	d
SIMPLEQ_REMOVE_HEAD	compat/sys/queue.h	267;"	d
SLIST_EMPTY	compat/sys/queue.h	108;"	d
SLIST_END	compat/sys/queue.h	107;"	d
SLIST_ENTRY	compat/sys/queue.h	97;"	d
SLIST_FIRST	compat/sys/queue.h	106;"	d
SLIST_FOREACH	compat/sys/queue.h	111;"	d
SLIST_HEAD	compat/sys/queue.h	88;"	d
SLIST_HEAD_INITIALIZER	compat/sys/queue.h	93;"	d
SLIST_INIT	compat/sys/queue.h	119;"	d
SLIST_INSERT_AFTER	compat/sys/queue.h	123;"	d
SLIST_INSERT_HEAD	compat/sys/queue.h	128;"	d
SLIST_NEXT	compat/sys/queue.h	109;"	d
SLIST_REMOVE_HEAD	compat/sys/queue.h	133;"	d
SOURCES	Makefile	/^SOURCES = $(client_SOURCES) $(server_SOURCES)$/;"	m
STDC_HEADERS	config.h	26;"	d
STRIP	Makefile	/^STRIP = $/;"	m
SUBDIRS	Makefile	/^SUBDIRS = .$/;"	m
TAILQ_EMPTY	compat/sys/queue.h	301;"	d
TAILQ_END	compat/sys/queue.h	294;"	d
TAILQ_ENTRY	compat/sys/queue.h	284;"	d
TAILQ_FIRST	compat/sys/queue.h	293;"	d
TAILQ_FOREACH	compat/sys/queue.h	304;"	d
TAILQ_FOREACH_REVERSE	compat/sys/queue.h	309;"	d
TAILQ_HEAD	compat/sys/queue.h	275;"	d
TAILQ_HEAD_INITIALIZER	compat/sys/queue.h	281;"	d
TAILQ_INIT	compat/sys/queue.h	317;"	d
TAILQ_INSERT_AFTER	compat/sys/queue.h	339;"	d
TAILQ_INSERT_BEFORE	compat/sys/queue.h	349;"	d
TAILQ_INSERT_HEAD	compat/sys/queue.h	322;"	d
TAILQ_INSERT_TAIL	compat/sys/queue.h	332;"	d
TAILQ_LAST	compat/sys/queue.h	296;"	d
TAILQ_NEXT	compat/sys/queue.h	295;"	d
TAILQ_PREV	compat/sys/queue.h	299;"	d
TAILQ_REMOVE	compat/sys/queue.h	356;"	d
TAILQ_REPLACE	compat/sys/queue.h	365;"	d
VERSION	Makefile	/^VERSION = 0.0.0$/;"	m
VERSION	config.h	29;"	d
_BENCH_MESSAGES_H_	bench-messages.h	28;"	d
_LOG_H_	bench-log.h	28;"	d
_SSL_UTILS_H_	ssl-utils.h	28;"	d
_SYS_QUEUE_H_	compat/sys/queue.h	36;"	d
abs_builddir	Makefile	/^abs_builddir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
active_conns	bench-server.c	/^static struct conn **active_conns = NULL;$/;"	v	typeref:struct:conn	file:
active_conns_add	bench-server.c	/^active_conns_add(struct conn *conn)$/;"	f	file:
active_conns_allocated	bench-server.c	/^static size_t active_conns_allocated = 0;$/;"	v	file:
active_conns_del	bench-server.c	/^active_conns_del(struct conn *conn)$/;"	f	file:
active_conns_get	bench-server.c	/^active_conns_get(ev_uint32_t id)$/;"	f	file:
all_clients	bench-client.c	/^static struct client_list all_clients;$/;"	v	typeref:struct:client_list	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__objects_1	Makefile	/^am__objects_1 = client-bench-messages.$(OBJEXT) \\$/;"	m
am__objects_2	Makefile	/^am__objects_2 = server-bench-messages.$(OBJEXT) \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am_client_OBJECTS	Makefile	/^am_client_OBJECTS = client-bench-client.$(OBJEXT) $(am__objects_1)$/;"	m
am_server_OBJECTS	Makefile	/^am_server_OBJECTS = server-bench-server.$(OBJEXT) $(am__objects_2)$/;"	m
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
associate_peers_with_clients	bench-client.c	/^associate_peers_with_clients(void)$/;"	f	file:
association_complete	bench-client.c	/^static int association_complete = 0;$/;"	v	file:
bev	bench-client.c	/^	struct bufferevent *bev;$/;"	m	struct:client	typeref:struct:client::bufferevent	file:
bev	bench-server.c	/^	struct bufferevent *bev;$/;"	m	struct:conn	typeref:struct:conn::bufferevent	file:
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = client$(EXEEXT) server$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bucket_tick	bench-server.c	/^static ev_uint32_t bucket_tick = 1000;$/;"	v	file:
build_alias	Makefile	/^build_alias = $/;"	m
builddir	Makefile	/^builddir = .$/;"	m
bytes_read	bench-server.c	/^	ev_uint64_t bytes_read;$/;"	m	struct:data_stats	file:
bytes_written	bench-server.c	/^	ev_uint64_t bytes_written;$/;"	m	struct:data_stats	file:
cert	bench-server.c	/^	X509 *cert;$/;"	m	struct:ssl_listener_info	file:
client	bench-client.c	/^struct client {$/;"	s	file:
client_CFLAGS	Makefile	/^client_CFLAGS = -I.\/compat $(LIBEVENT_CFLAGS) $(LIBEVENT_CFLAGS)$/;"	m
client_DEPENDENCIES	Makefile	/^client_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)$/;"	m
client_LDADD	Makefile	/^client_LDADD = $(LIBEVENT_LIBS) $(LIBEVENT_SSL_LIBS)$/;"	m
client_LINK	Makefile	/^client_LINK = $(CCLD) $(client_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\$/;"	m
client_OBJECTS	Makefile	/^client_OBJECTS = $(am_client_OBJECTS)$/;"	m
client_SOURCES	Makefile	/^client_SOURCES = bench-client.c $(GENERAL_SRCS)$/;"	m
client_add_peer	bench-client.c	/^client_add_peer(struct client *client)$/;"	f	file:
client_destroy	bench-client.c	/^client_destroy(struct client *client)$/;"	f	file:
client_do_chat	bench-client.c	/^client_do_chat(struct client *client)$/;"	f	file:
client_event_cb	bench-client.c	/^client_event_cb(struct bufferevent *bev, short what, void *_client)$/;"	f	file:
client_finish_setup	bench-client.c	/^client_finish_setup(struct client *client)$/;"	f	file:
client_new	bench-client.c	/^client_new(struct event_base *base, SSL_CTX *ctx)$/;"	f	file:
client_read_cb	bench-client.c	/^client_read_cb(struct bufferevent *bev, void *_client)$/;"	f	file:
client_read_message	bench-client.c	/^client_read_message(struct client *client)$/;"	f	file:
client_set_file_list	bench-client.c	/^client_set_file_list(struct client *client)$/;"	f	file:
client_write_cb	bench-client.c	/^client_write_cb(struct bufferevent *bev, void *_client)$/;"	f	file:
conn	bench-server.c	/^struct conn {$/;"	s	file:
conn_create	bench-server.c	/^conn_create(struct event_base *base, struct bufferevent *bev)$/;"	f	file:
conn_destroy	bench-server.c	/^conn_destroy(struct conn *conn)$/;"	f	file:
conn_event_cb	bench-server.c	/^conn_event_cb(struct bufferevent *bev, short what, void *_conn)$/;"	f	file:
conn_finish_setup	bench-server.c	/^conn_finish_setup(struct conn *conn)$/;"	f	file:
conn_has_handshaked	bench-server.c	/^conn_has_handshaked(struct conn *conn)$/;"	f	file:
conn_new	bench-server.c	/^conn_new(struct event_base *base, struct bufferevent *cbev)$/;"	f	file:
conn_read_cb	bench-server.c	/^conn_read_cb(struct bufferevent *bev, void *_conn)$/;"	f	file:
conn_read_message	bench-server.c	/^conn_read_message(struct conn *conn)$/;"	f	file:
conn_relay_chat	bench-server.c	/^conn_relay_chat(struct conn *conn)$/;"	f	file:
conn_send_error	bench-server.c	/^conn_send_error(struct conn *conn, const char *what)$/;"	f	file:
conn_send_file	bench-server.c	/^conn_send_file(struct conn *conn)$/;"	f	file:
conn_send_peer_notice	bench-server.c	/^conn_send_peer_notice(struct conn *conn, struct conn *peer)$/;"	f	file:
conn_update_read_stats	bench-server.c	/^conn_update_read_stats(struct conn *conn)$/;"	f	file:
conn_update_write_stats	bench-server.c	/^conn_update_write_stats(struct conn *conn)$/;"	f	file:
conn_write_cb	bench-server.c	/^conn_write_cb(struct bufferevent *bev, void *_conn)$/;"	f	file:
connect_clients	bench-client.c	/^connect_clients(struct event_base *base, struct sockaddr *plain_addr,$/;"	f	file:
ctx	bench-server.c	/^	SSL_CTX *ctx;$/;"	m	struct:ssl_listener_info	file:
data_pending	bench-server.c	/^	struct data_stats data_pending;$/;"	m	struct:conn	typeref:struct:conn::data_stats	file:
data_stats	bench-server.c	/^struct data_stats {$/;"	s	file:
data_total	bench-server.c	/^	struct data_stats data_total;$/;"	m	struct:conn	typeref:struct:conn::data_stats	file:
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
destination_id	bench-messages.c	/^	ev_uint32_t destination_id;$/;"	m	struct:message	file:
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
error_msg	bench-messages.c	/^		char *error_msg;$/;"	m	union:message::__anon1	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
file_entry	bench-messages.h	/^struct file_entry {$/;"	s
file_list_add	bench-messages.c	/^file_list_add(struct file_list *files, const char *name)$/;"	f
file_list_clear	bench-messages.c	/^file_list_clear(struct file_list *files)$/;"	f
file_list_encode	bench-messages.c	/^file_list_encode(const struct file_list *files, struct evbuffer *buf)$/;"	f	file:
file_list_move	bench-messages.c	/^file_list_move(struct file_list *to, struct file_list *from)$/;"	f
file_list_parse	bench-messages.c	/^file_list_parse(struct file_list *files, struct evbuffer *buf)$/;"	f	file:
file_name	bench-messages.c	/^		char *file_name;$/;"	m	union:message::__anon1	file:
files	bench-messages.c	/^		struct file_list files;$/;"	m	union:message::__anon1	typeref:struct:message::__anon1::file_list	file:
friends	bench-client.c	/^	struct peer **friends;$/;"	m	struct:client	typeref:struct:client::peer	file:
global_data_stats	bench-server.c	/^static struct data_stats global_data_stats = {0,0,0,0};$/;"	v	typeref:struct:data_stats	file:
global_data_stats_last	bench-server.c	/^static struct data_stats global_data_stats_last = {0,0,0,0};$/;"	v	typeref:struct:data_stats	file:
global_rate_limit	bench-server.c	/^static struct bufferevent_rate_limit_group *global_rate_limit = NULL;$/;"	v	typeref:struct:bufferevent_rate_limit_group	file:
global_read_rate	bench-server.c	/^static ev_uint32_t global_read_rate = RATE_MAX;$/;"	v	file:
global_write_rate	bench-server.c	/^static ev_uint32_t global_write_rate = RATE_MAX;$/;"	v	file:
host_alias	Makefile	/^host_alias = $/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
id	bench-client.c	/^	ev_uint32_t id;$/;"	m	struct:client	file:
id	bench-client.c	/^	ev_uint32_t id;$/;"	m	struct:peer	file:
id	bench-server.c	/^	ev_uint32_t id;$/;"	m	struct:conn	file:
id_count	bench-server.c	/^static ev_uint32_t id_count = 1;$/;"	v	file:
inbuf	bench-client.c	/^	struct evbuffer *inbuf;$/;"	m	struct:client	typeref:struct:client::evbuffer	file:
inbuf	bench-server.c	/^	struct evbuffer *inbuf;$/;"	m	struct:conn	typeref:struct:conn::evbuffer	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
initialize_globals	bench-client.c	/^initialize_globals(void)$/;"	f	file:
inmsg	bench-client.c	/^	struct message *inmsg;$/;"	m	struct:client	typeref:struct:client::message	file:
inmsg	bench-server.c	/^	struct message *inmsg;$/;"	m	struct:conn	typeref:struct:conn::message	file:
install_sh	Makefile	/^install_sh = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-bench\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
key	bench-server.c	/^	EVP_PKEY *key;$/;"	m	struct:ssl_listener_info	file:
length	bench-messages.c	/^	ev_uint32_t length;$/;"	m	struct:message	file:
length_remaining	bench-messages.c	/^	ev_uint32_t length_remaining;$/;"	m	struct:message	file:
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
listener_cb	bench-server.c	/^listener_cb(struct evconnlistener *listener, evutil_socket_t s,$/;"	f	file:
listener_plain	bench-server.c	/^static struct evconnlistener *listener_plain = NULL;$/;"	v	typeref:struct:evconnlistener	file:
listener_ssl	bench-server.c	/^static struct evconnlistener *listener_ssl = NULL;$/;"	v	typeref:struct:evconnlistener	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
log_debug	bench-log.c	/^log_debug(const char *msg, ...)$/;"	f
log_error	bench-log.c	/^log_error(const char *msg, ...)$/;"	f
log_fatal	bench-log.c	/^log_fatal(const char *msg, ...)$/;"	f
log_file	bench-log.c	/^static FILE *log_file = NULL;$/;"	v	file:
log_get_min_level	bench-log.c	/^log_get_min_level(void)$/;"	f
log_info	bench-log.c	/^log_info(const char *msg, ...)$/;"	f
log_level	bench-log.h	/^enum log_level {$/;"	g
log_lower_min_level	bench-log.c	/^log_lower_min_level(void)$/;"	f
log_msg_va	bench-log.c	/^log_msg_va(enum log_level lvl, int serr, const char *msg, va_list ap)$/;"	f
log_notice	bench-log.c	/^log_notice(const char *msg, ...)$/;"	f
log_raise_min_level	bench-log.c	/^log_raise_min_level(void)$/;"	f
log_set_file	bench-log.c	/^log_set_file(FILE *fp)$/;"	f
log_set_min_level	bench-log.c	/^log_set_min_level(enum log_level lvl)$/;"	f
log_socket_error	bench-log.c	/^log_socket_error(const char *msg, ...)$/;"	f
log_warn	bench-log.c	/^log_warn(const char *msg, ...)$/;"	f
main	bench-client.c	/^main(int argc, char **argv)$/;"	f
main	bench-server.c	/^main(int argc, char **argv)$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
max_messages_queued	bench-client.c	/^static size_t max_messages_queued = 16;$/;"	v	file:
message	bench-messages.c	/^struct message {$/;"	s	file:
message_data	bench-client.c	/^static char *message_data = NULL;$/;"	v	file:
message_data_len	bench-client.c	/^static size_t message_data_len = 2048;$/;"	v	file:
message_destroy	bench-messages.c	/^message_destroy(struct message *msg)$/;"	f
message_encode	bench-messages.c	/^message_encode(struct message *msg, struct evbuffer *outbuf)$/;"	f
message_encode_buf	bench-messages.c	/^message_encode_buf(struct message *msg, struct evbuffer *payload,$/;"	f
message_encode_echo_req	bench-messages.c	/^message_encode_echo_req(struct message *msg, ev_uint32_t origin,$/;"	f
message_encode_echo_rsp	bench-messages.c	/^message_encode_echo_rsp(struct message *msg, struct message *echo,$/;"	f
message_encode_error	bench-messages.c	/^message_encode_error(struct message *msg, const char *errmsg,$/;"	f
message_encode_file_contents	bench-messages.c	/^message_encode_file_contents(struct message *msg, ev_uint32_t origin,$/;"	f
message_encode_file_list_req	bench-messages.c	/^message_encode_file_list_req(struct message *msg, struct evbuffer *outbuf)$/;"	f
message_encode_file_list_rsp	bench-messages.c	/^message_encode_file_list_rsp(struct message *msg, struct file_list *files,$/;"	f
message_encode_greeting_req	bench-messages.c	/^message_encode_greeting_req(struct message *msg, struct property_list *props,$/;"	f
message_encode_greeting_rsp	bench-messages.c	/^message_encode_greeting_rsp(struct message *msg, ev_uint32_t client_id,$/;"	f
message_encode_ok	bench-messages.c	/^message_encode_ok(struct message *msg, struct evbuffer *outbuf)$/;"	f
message_encode_peer_notice	bench-messages.c	/^message_encode_peer_notice(struct message *msg, ev_uint32_t peer_id,$/;"	f
message_encode_ref	bench-messages.c	/^message_encode_ref(struct message *msg, const void *data, size_t len,$/;"	f
message_encode_relay	bench-messages.c	/^message_encode_relay(struct message *outmsg, struct message *inmsg,$/;"	f
message_encode_send_chat	bench-messages.c	/^message_encode_send_chat(struct message *msg, ev_uint32_t origin,$/;"	f
message_encode_send_file	bench-messages.c	/^message_encode_send_file(struct message *msg, ev_uint32_t origin,$/;"	f
message_get_destination	bench-messages.c	/^message_get_destination(const struct message *msg)$/;"	f
message_get_length	bench-messages.c	/^message_get_length(const struct message *msg)$/;"	f
message_get_origin	bench-messages.c	/^message_get_origin(const struct message *msg)$/;"	f
message_get_payload	bench-messages.c	/^message_get_payload(struct message *msg)$/;"	f
message_get_total_length	bench-messages.c	/^message_get_total_length(const struct message *msg)$/;"	f
message_get_type	bench-messages.c	/^message_get_type(const struct message *msg)$/;"	f
message_new	bench-messages.c	/^message_new(void)$/;"	f
message_parse_header	bench-messages.c	/^message_parse_header(struct message *msg, struct evbuffer *buf)$/;"	f
message_parse_payload	bench-messages.c	/^message_parse_payload(struct message *msg)$/;"	f
message_payload_get_error_msg	bench-messages.c	/^message_payload_get_error_msg(const struct message *msg)$/;"	f
message_payload_get_file_name	bench-messages.c	/^message_payload_get_file_name(const struct message *msg)$/;"	f
message_payload_get_files	bench-messages.c	/^message_payload_get_files(struct message *msg)$/;"	f
message_payload_get_properties	bench-messages.c	/^message_payload_get_properties(struct message *msg)$/;"	f
message_read	bench-messages.c	/^message_read(struct message *msg, struct evbuffer *buf)$/;"	f
message_read_payload	bench-messages.c	/^message_read_payload(struct message *msg, struct evbuffer *buf)$/;"	f
message_reset	bench-messages.c	/^message_reset(struct message *msg)$/;"	f
message_status	bench-messages.h	/^enum message_status {$/;"	g
message_type	bench-messages.h	/^enum message_type {$/;"	g
messages_read	bench-server.c	/^	ev_uint64_t messages_read;$/;"	m	struct:data_stats	file:
messages_written	bench-server.c	/^	ev_uint64_t messages_written;$/;"	m	struct:data_stats	file:
min_log_level	bench-log.c	/^static enum log_level min_log_level = LOG_NOTICE;$/;"	v	typeref:enum:log_level	file:
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
name	bench-messages.h	/^	char *name;$/;"	m	struct:file_entry
name	bench-messages.h	/^	char *name;$/;"	m	struct:property
next	bench-messages.h	/^	TAILQ_ENTRY(file_entry) next;$/;"	m	struct:file_entry
next	bench-messages.h	/^	TAILQ_ENTRY(property) next;$/;"	m	struct:property
noinst_HEADERS	Makefile	/^noinst_HEADERS = bench-messages.h bench-log.h ssl-utils.h$/;"	m
notifications	bench-server.c	/^	long notifications;$/;"	m	struct:conn	file:
num_clients	bench-client.c	/^static size_t num_clients = 64;$/;"	v	file:
num_clients_connected	bench-client.c	/^static size_t num_clients_connected = 0;$/;"	v	file:
num_friends	bench-client.c	/^static size_t num_friends = 4;$/;"	v	file:
num_peers	bench-client.c	/^static size_t num_peers = 0;$/;"	v	file:
num_peers_expected	bench-client.c	/^static size_t num_peers_expected = 64;$/;"	v	file:
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
origin_id	bench-messages.c	/^	ev_uint32_t origin_id;$/;"	m	struct:message	file:
outbuf	bench-client.c	/^	struct evbuffer *outbuf;$/;"	m	struct:client	typeref:struct:client::evbuffer	file:
outbuf	bench-server.c	/^	struct evbuffer *outbuf;$/;"	m	struct:conn	typeref:struct:conn::evbuffer	file:
outmsg	bench-client.c	/^	struct message *outmsg;$/;"	m	struct:client	typeref:struct:client::message	file:
outmsg	bench-server.c	/^	struct message *outmsg;$/;"	m	struct:conn	typeref:struct:conn::message	file:
payload	bench-messages.c	/^	struct evbuffer *payload;$/;"	m	struct:message	typeref:struct:message::evbuffer	file:
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
peer	bench-client.c	/^struct peer {$/;"	s	file:
peers	bench-client.c	/^static struct peer *peers = NULL;$/;"	v	typeref:struct:peer	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/libevent-bench$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/libevent-bench$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/libevent-bench$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/libevent-bench$/;"	m
pl	bench-messages.c	/^	} pl;$/;"	m	struct:message	typeref:union:message::__anon1	file:
pop_string	bench-messages.c	/^pop_string(struct evbuffer *buf, ev_ssize_t n)$/;"	f	file:
pop_uint32	bench-messages.c	/^pop_uint32(struct evbuffer *buf)$/;"	f	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
print_stats_cb	bench-server.c	/^print_stats_cb(evutil_socket_t s, short what, void *arg)$/;"	f	file:
print_stats_interval	bench-server.c	/^static int print_stats_interval = 5;$/;"	v	file:
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
properties	bench-client.c	/^	struct property_list properties;$/;"	m	struct:client	typeref:struct:client::property_list	file:
properties	bench-client.c	/^	struct property_list properties;$/;"	m	struct:peer	typeref:struct:peer::property_list	file:
properties	bench-messages.c	/^		struct property_list properties;$/;"	m	union:message::__anon1	typeref:struct:message::__anon1::property_list	file:
properties	bench-server.c	/^	struct property_list properties;$/;"	m	struct:conn	typeref:struct:conn::property_list	file:
property	bench-messages.h	/^struct property {$/;"	s
property_list_add	bench-messages.c	/^property_list_add(struct property_list *props, const char *k, const char *v)$/;"	f
property_list_add_long	bench-messages.c	/^property_list_add_long(struct property_list *props, const char *k, long v)$/;"	f
property_list_clear	bench-messages.c	/^property_list_clear(struct property_list *props)$/;"	f
property_list_encode	bench-messages.c	/^property_list_encode(const struct property_list *props, struct evbuffer *buf)$/;"	f	file:
property_list_find	bench-messages.c	/^property_list_find(struct property_list *props, const char *name)$/;"	f
property_list_find_long	bench-messages.c	/^property_list_find_long(struct property_list *props,$/;"	f
property_list_move	bench-messages.c	/^property_list_move(struct property_list *to, struct property_list *from)$/;"	f
property_list_parse	bench-messages.c	/^property_list_parse(struct property_list *props, struct evbuffer *buf)$/;"	f	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
push_uint32	bench-messages.c	/^push_uint32(struct evbuffer *buf, ev_uint32_t n)$/;"	f	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
server_CFLAGS	Makefile	/^server_CFLAGS = -I.\/compat $(LIBEVENT_CFLAGS) $(LIBEVENT_CFLAGS)$/;"	m
server_DEPENDENCIES	Makefile	/^server_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)$/;"	m
server_LDADD	Makefile	/^server_LDADD = $(LIBEVENT_LIBS) $(LIBEVENT_SSL_LIBS)$/;"	m
server_LINK	Makefile	/^server_LINK = $(CCLD) $(server_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\$/;"	m
server_OBJECTS	Makefile	/^server_OBJECTS = $(am_server_OBJECTS)$/;"	m
server_SOURCES	Makefile	/^server_SOURCES = bench-server.c $(GENERAL_SRCS)$/;"	m
server_files	bench-client.c	/^static struct file_list server_files;$/;"	v	typeref:struct:file_list	file:
server_files	bench-server.c	/^static struct file_list server_files;$/;"	v	typeref:struct:file_list	file:
set_global_rate_limit	bench-server.c	/^set_global_rate_limit(struct event_base *base)$/;"	f	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
srcdir	Makefile	/^srcdir = .$/;"	m
ssl	bench-client.c	/^	int ssl;$/;"	m	struct:client	file:
ssl_build_cert	ssl-utils.c	/^ssl_build_cert(EVP_PKEY *key)$/;"	f
ssl_build_key	ssl-utils.c	/^ssl_build_key(void)$/;"	f
ssl_divisor	bench-client.c	/^static size_t ssl_divisor = 3;$/;"	v	file:
ssl_init	ssl-utils.c	/^ssl_init(void)$/;"	f
ssl_listener_info	bench-server.c	/^struct ssl_listener_info {$/;"	s	file:
start_listeners	bench-server.c	/^start_listeners(struct event_base *base,$/;"	f	file:
subdir	Makefile	/^subdir = .$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
type	bench-messages.c	/^	ev_uint32_t type;$/;"	m	struct:message	file:
usage	bench-client.c	/^usage(void)$/;"	f	file:
usage	bench-server.c	/^usage(void)$/;"	f	file:
value	bench-messages.h	/^	char *value;$/;"	m	struct:property

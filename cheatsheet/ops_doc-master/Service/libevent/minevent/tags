!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CFLAGS	Makefile	/^CFLAGS = -Wall -g -O0$/;"	m
CIRCLEQ_EMPTY	include/sys/queue.h	401;"	d
CIRCLEQ_END	include/sys/queue.h	398;"	d
CIRCLEQ_ENTRY	include/sys/queue.h	387;"	d
CIRCLEQ_FIRST	include/sys/queue.h	396;"	d
CIRCLEQ_FOREACH	include/sys/queue.h	404;"	d
CIRCLEQ_FOREACH_REVERSE	include/sys/queue.h	409;"	d
CIRCLEQ_HEAD	include/sys/queue.h	378;"	d
CIRCLEQ_HEAD_INITIALIZER	include/sys/queue.h	384;"	d
CIRCLEQ_INIT	include/sys/queue.h	417;"	d
CIRCLEQ_INSERT_AFTER	include/sys/queue.h	422;"	d
CIRCLEQ_INSERT_BEFORE	include/sys/queue.h	432;"	d
CIRCLEQ_INSERT_HEAD	include/sys/queue.h	442;"	d
CIRCLEQ_INSERT_TAIL	include/sys/queue.h	452;"	d
CIRCLEQ_LAST	include/sys/queue.h	397;"	d
CIRCLEQ_NEXT	include/sys/queue.h	399;"	d
CIRCLEQ_PREV	include/sys/queue.h	400;"	d
CIRCLEQ_REMOVE	include/sys/queue.h	462;"	d
CIRCLEQ_REPLACE	include/sys/queue.h	475;"	d
CLOCK_PROF	include/sys/_time.h	156;"	d
CLOCK_REALTIME	include/sys/_time.h	154;"	d
CLOCK_VIRTUAL	include/sys/_time.h	155;"	d
DST_AUST	include/sys/_time.h	72;"	d
DST_CAN	include/sys/_time.h	76;"	d
DST_EET	include/sys/_time.h	75;"	d
DST_MET	include/sys/_time.h	74;"	d
DST_NONE	include/sys/_time.h	70;"	d
DST_USA	include/sys/_time.h	71;"	d
DST_WET	include/sys/_time.h	73;"	d
EVENT_PERSIST	include/event.h	13;"	d
EVENT_READ	include/event.h	9;"	d
EVENT_SIGNAL	include/event.h	12;"	d
EVENT_TIMEOUT	include/event.h	11;"	d
EVENT_WRITE	include/event.h	10;"	d
EVLIST_ACTIVE	include/event.h	20;"	d
EVLIST_ALL	include/event.h	22;"	d
EVLIST_INIT	include/event.h	16;"	d
EVLIST_INSERTED	include/event.h	17;"	d
EVLIST_SIGNAL	include/event.h	19;"	d
EVLIST_TIMEOUT	include/event.h	18;"	d
FD_CLOSEONEXEC	src/epoll.c	51;"	d	file:
FD_CLOSEONEXEC	src/epoll.c	56;"	d	file:
ITIMER_PROF	include/sys/_time.h	136;"	d
ITIMER_REAL	include/sys/_time.h	134;"	d
ITIMER_VIRTUAL	include/sys/_time.h	135;"	d
LIST_EMPTY	include/sys/queue.h	159;"	d
LIST_END	include/sys/queue.h	158;"	d
LIST_ENTRY	include/sys/queue.h	148;"	d
LIST_FIRST	include/sys/queue.h	157;"	d
LIST_FOREACH	include/sys/queue.h	162;"	d
LIST_HEAD	include/sys/queue.h	140;"	d
LIST_HEAD_INITIALIZER	include/sys/queue.h	145;"	d
LIST_INIT	include/sys/queue.h	170;"	d
LIST_INSERT_AFTER	include/sys/queue.h	174;"	d
LIST_INSERT_BEFORE	include/sys/queue.h	182;"	d
LIST_INSERT_HEAD	include/sys/queue.h	189;"	d
LIST_NEXT	include/sys/queue.h	160;"	d
LIST_REMOVE	include/sys/queue.h	196;"	d
LIST_REPLACE	include/sys/queue.h	203;"	d
LOG_DEBUG	include/log.h	26;"	d
LOG_DEBUG	include/log.h	28;"	d
LOG_ERROR	include/log.h	31;"	d
LOG_OUTPUT	include/log.h	15;"	d
NEVENT	src/epoll.c	58;"	d	file:
RB_AUGMENT	include/sys/tree.h	332;"	d
RB_BLACK	include/sys/tree.h	303;"	d
RB_COLOR	include/sys/tree.h	316;"	d
RB_EMPTY	include/sys/tree.h	318;"	d
RB_ENTRY	include/event.h	35;"	d
RB_ENTRY	include/sys/tree.h	305;"	d
RB_FIND	include/sys/tree.h	667;"	d
RB_FOREACH	include/sys/tree.h	672;"	d
RB_GENERATE	include/sys/tree.h	389;"	d
RB_HEAD	include/sys/tree.h	291;"	d
RB_INF	include/sys/tree.h	663;"	d
RB_INIT	include/sys/tree.h	299;"	d
RB_INITIALIZER	include/sys/tree.h	296;"	d
RB_INSERT	include/sys/tree.h	665;"	d
RB_LEFT	include/sys/tree.h	313;"	d
RB_MAX	include/sys/tree.h	670;"	d
RB_MIN	include/sys/tree.h	669;"	d
RB_NEGINF	include/sys/tree.h	662;"	d
RB_NEXT	include/sys/tree.h	668;"	d
RB_PARENT	include/sys/tree.h	315;"	d
RB_PROTOTYPE	include/sys/tree.h	376;"	d
RB_RED	include/sys/tree.h	304;"	d
RB_REMOVE	include/sys/tree.h	666;"	d
RB_RIGHT	include/sys/tree.h	314;"	d
RB_ROOT	include/sys/tree.h	317;"	d
RB_ROTATE_LEFT	include/sys/tree.h	335;"	d
RB_ROTATE_RIGHT	include/sys/tree.h	355;"	d
RB_SET	include/sys/tree.h	320;"	d
RB_SET_BLACKRED	include/sys/tree.h	326;"	d
SIMPLEQ_EMPTY	include/sys/queue.h	233;"	d
SIMPLEQ_END	include/sys/queue.h	232;"	d
SIMPLEQ_ENTRY	include/sys/queue.h	223;"	d
SIMPLEQ_FIRST	include/sys/queue.h	231;"	d
SIMPLEQ_FOREACH	include/sys/queue.h	236;"	d
SIMPLEQ_HEAD	include/sys/queue.h	214;"	d
SIMPLEQ_HEAD_INITIALIZER	include/sys/queue.h	220;"	d
SIMPLEQ_INIT	include/sys/queue.h	244;"	d
SIMPLEQ_INSERT_AFTER	include/sys/queue.h	261;"	d
SIMPLEQ_INSERT_HEAD	include/sys/queue.h	249;"	d
SIMPLEQ_INSERT_TAIL	include/sys/queue.h	255;"	d
SIMPLEQ_NEXT	include/sys/queue.h	234;"	d
SIMPLEQ_REMOVE_HEAD	include/sys/queue.h	267;"	d
SLIST_EMPTY	include/sys/queue.h	108;"	d
SLIST_END	include/sys/queue.h	107;"	d
SLIST_ENTRY	include/sys/queue.h	97;"	d
SLIST_FIRST	include/sys/queue.h	106;"	d
SLIST_FOREACH	include/sys/queue.h	111;"	d
SLIST_HEAD	include/sys/queue.h	88;"	d
SLIST_HEAD_INITIALIZER	include/sys/queue.h	93;"	d
SLIST_INIT	include/sys/queue.h	119;"	d
SLIST_INSERT_AFTER	include/sys/queue.h	123;"	d
SLIST_INSERT_HEAD	include/sys/queue.h	128;"	d
SLIST_NEXT	include/sys/queue.h	109;"	d
SLIST_REMOVE_HEAD	include/sys/queue.h	133;"	d
SPLAY_ASSEMBLE	include/sys/tree.h	105;"	d
SPLAY_EMPTY	include/sys/tree.h	78;"	d
SPLAY_ENTRY	include/sys/tree.h	69;"	d
SPLAY_FIND	include/sys/tree.h	278;"	d
SPLAY_FOREACH	include/sys/tree.h	285;"	d
SPLAY_GENERATE	include/sys/tree.h	156;"	d
SPLAY_HEAD	include/sys/tree.h	57;"	d
SPLAY_INF	include/sys/tree.h	274;"	d
SPLAY_INIT	include/sys/tree.h	65;"	d
SPLAY_INITIALIZER	include/sys/tree.h	62;"	d
SPLAY_INSERT	include/sys/tree.h	276;"	d
SPLAY_LEFT	include/sys/tree.h	75;"	d
SPLAY_LINKLEFT	include/sys/tree.h	93;"	d
SPLAY_LINKRIGHT	include/sys/tree.h	99;"	d
SPLAY_MAX	include/sys/tree.h	282;"	d
SPLAY_MIN	include/sys/tree.h	280;"	d
SPLAY_NEGINF	include/sys/tree.h	273;"	d
SPLAY_NEXT	include/sys/tree.h	279;"	d
SPLAY_PROTOTYPE	include/sys/tree.h	114;"	d
SPLAY_REMOVE	include/sys/tree.h	277;"	d
SPLAY_RIGHT	include/sys/tree.h	76;"	d
SPLAY_ROOT	include/sys/tree.h	77;"	d
SPLAY_ROTATE_LEFT	include/sys/tree.h	87;"	d
SPLAY_ROTATE_RIGHT	include/sys/tree.h	81;"	d
TAILQ_EMPTY	include/sys/queue.h	301;"	d
TAILQ_END	include/sys/queue.h	294;"	d
TAILQ_ENTRY	include/event.h	27;"	d
TAILQ_ENTRY	include/sys/queue.h	284;"	d
TAILQ_FIRST	include/sys/queue.h	293;"	d
TAILQ_FOREACH	include/sys/queue.h	304;"	d
TAILQ_FOREACH_REVERSE	include/sys/queue.h	309;"	d
TAILQ_HEAD	include/sys/queue.h	275;"	d
TAILQ_HEAD_INITIALIZER	include/sys/queue.h	281;"	d
TAILQ_INIT	include/sys/queue.h	317;"	d
TAILQ_INSERT_AFTER	include/sys/queue.h	339;"	d
TAILQ_INSERT_BEFORE	include/sys/queue.h	349;"	d
TAILQ_INSERT_HEAD	include/sys/queue.h	322;"	d
TAILQ_INSERT_TAIL	include/sys/queue.h	332;"	d
TAILQ_LAST	include/sys/queue.h	296;"	d
TAILQ_NEXT	include/sys/queue.h	295;"	d
TAILQ_PREV	include/sys/queue.h	299;"	d
TAILQ_REMOVE	include/sys/queue.h	356;"	d
TAILQ_REPLACE	include/sys/queue.h	365;"	d
TIMER_ABSTIME	include/sys/_time.h	159;"	d
TIMER_RELTIME	include/sys/_time.h	158;"	d
TIMESPEC_TO_TIMEVAL	include/sys/_time.h	61;"	d
TIMEVAL_TO_TIMESPEC	include/sys/_time.h	57;"	d
_DEBUG	include/log.h	11;"	d
_EVENT_DEFINED_RBENTRY	include/event.h	34;"	d
_EVENT_DEFINED_TQENTRY	include/event.h	26;"	d
_MIN_EVENT_H_	include/event.h	2;"	d
_MIN_EVENT_INTERNAL_H_	include/event_internal.h	2;"	d
_MIN_LOG_H_	include/log.h	2;"	d
_QUOTE	include/log.h	13;"	d
_SYS_QUEUE_H_	include/sys/queue.h	36;"	d
_SYS_TIME_H_	include/sys/_time.h	36;"	d
_SYS_TREE_H_	include/sys/tree.h	28;"	d
__QUOTE	include/log.h	12;"	d
activequeues	include/event_internal.h	/^        struct event_list **activequeues;   \/\/ 就绪队列(下标为优先级)$/;"	m	struct:event_base	typeref:struct:event_base::event_list
add	include/event.h	/^        int (*add) (void *, struct event *);$/;"	m	struct:eventop
clockinfo	include/sys/_time.h	/^struct clockinfo {$/;"	s
compare	src/event.c	/^static int compare (struct event *a, struct event *b) {$/;"	f	file:
current_base	src/event.c	/^struct event_base *current_base = NULL;$/;"	v	typeref:struct:event_base
del	include/event.h	/^        int (*del) (void *, struct event *);$/;"	m	struct:eventop
dispatch	include/event.h	/^        int (*dispatch) (struct event_base *, void *, struct timeval *);$/;"	m	struct:eventop
epfd	src/epoll.c	/^    int epfd;                   \/\/epoll例程$/;"	m	struct:epollop	file:
epoll_add	src/epoll.c	/^int epoll_add (void *arg, struct event *ev) {$/;"	f
epoll_del	src/epoll.c	/^int epoll_del (void *arg, struct event *ev) {$/;"	f
epoll_dispatch	src/epoll.c	/^int epoll_dispatch (struct event_base *base, void *arg, struct timeval *tv) {$/;"	f
epoll_init	src/epoll.c	/^void *epoll_init (void) {$/;"	f
epoll_recalc	src/epoll.c	/^int epoll_recalc (struct event_base *base, void *arg, int max) {$/;"	f
epollop	src/epoll.c	/^struct epollop {$/;"	s	file:
epollop	src/epoll.c	/^} epollop;$/;"	v	typeref:struct:epollop
epollops	src/epoll.c	/^struct eventop epollops = {$/;"	v	typeref:struct:eventop
ev_active_next	include/event.h	/^        TAILQ_ENTRY (event) ev_active_next;$/;"	m	struct:event
ev_arg	include/event.h	/^        void *ev_arg;           \/\/任意类型的数据$/;"	m	struct:event
ev_base	include/event.h	/^        struct event_base *ev_base;$/;"	m	struct:event	typeref:struct:event::event_base
ev_callback	include/event.h	/^        void (*ev_callback) (int, short, void *arg);    \/\/事件处理回调函数$/;"	m	struct:event
ev_events	include/event.h	/^        short ev_events;        \/\/Event类型$/;"	m	struct:event
ev_fd	include/event.h	/^        int ev_fd;              \/\/对于io事件,是绑定的文件描述符;对于signal事件, 是绑定的信号$/;"	m	struct:event
ev_flags	include/event.h	/^        int ev_flags;           \/\/Event当前的状态$/;"	m	struct:event
ev_next	include/event.h	/^        TAILQ_ENTRY (event) ev_next;$/;"	m	struct:event
ev_pri	include/event.h	/^        int ev_pri;             \/\/优先级$/;"	m	struct:event
ev_res	include/event.h	/^        int ev_res;             \/\/记录当前激活事件的类型$/;"	m	struct:event
ev_timeout	include/event.h	/^        struct timeval ev_timeout;$/;"	m	struct:event	typeref:struct:event::timeval
ev_timeout_node	include/event.h	/^        RB_ENTRY (event) ev_timeout_node;$/;"	m	struct:event
evbase	include/event_internal.h	/^        void *evbase;$/;"	m	struct:event_base
event	include/event.h	/^    struct event {$/;"	s
event	test/queue_test.c	/^struct event {$/;"	s	file:
event_active	src/event.c	/^void event_active (struct event *ev, int res) {$/;"	f
event_add	src/event.c	/^int event_add (struct event *ev, struct timeval *tv) {$/;"	f
event_base	include/event_internal.h	/^    struct event_base {$/;"	s
event_base_priority_init	src/event.c	/^int event_base_priority_init (struct event_base *base, int npriorities) {$/;"	f
event_base_set	src/event.c	/^int event_base_set (struct event_base *base, struct event *ev) {$/;"	f
event_count	include/event_internal.h	/^        int event_count;        \/\/所有事件数$/;"	m	struct:event_base
event_count_active	include/event_internal.h	/^        int event_count_active; \/\/就绪事件数$/;"	m	struct:event_base
event_del	src/event.c	/^int event_del (struct event *ev) {$/;"	f
event_dispatch	src/event.c	/^int event_dispatch (void) {$/;"	f
event_fds	src/select.c	/^    int event_fds;$/;"	m	struct:selectop	file:
event_fdsz	src/select.c	/^    int event_fdsz;$/;"	m	struct:selectop	file:
event_haveevents	src/event.c	/^int event_haveevents (struct event_base *base) {$/;"	f
event_init	src/event.c	/^void *event_init (void) {$/;"	f
event_process_active	src/event.c	/^void event_process_active (struct event_base *base) {$/;"	f
event_queue_insert	src/event.c	/^static void event_queue_insert (struct event_base *base, struct event *ev, int queue) {$/;"	f	file:
event_queue_remove	src/event.c	/^static void event_queue_remove (struct event_base *base, struct event *ev, int queue) {$/;"	f	file:
event_readset	src/select.c	/^    fd_set *event_readset;$/;"	m	struct:selectop	file:
event_set	src/event.c	/^void event_set (struct event *ev, int fd, short events, void (*callback) (int, short, void *), void *arg) {$/;"	f
event_tv	include/event_internal.h	/^        struct timeval event_tv;$/;"	m	struct:event_base	typeref:struct:event_base::timeval
event_writeset	src/select.c	/^    fd_set *event_writeset;$/;"	m	struct:selectop	file:
eventop	include/event.h	/^    struct eventop {$/;"	s
eventops	src/event.c	/^const struct eventop *eventops[] = {$/;"	v	typeref:struct:eventop
eventqueue	include/event_internal.h	/^        struct event_list eventqueue;   \/\/ 事件队列(保存所有的注事件)$/;"	m	struct:event_base	typeref:struct:event_base::event_list
eventqueue	test/queue_test.c	/^struct event_list eventqueue;$/;"	v	typeref:struct:event_list
events	src/epoll.c	/^    struct epoll_event *events; \/\/指向保存返回事件的文件描述符集合的数组(epoll_event类型数组)$/;"	m	struct:epollop	typeref:struct:epollop::epoll_event	file:
evepoll	src/epoll.c	/^struct evepoll {$/;"	s	file:
evread	src/epoll.c	/^    struct event *evread;$/;"	m	struct:evepoll	typeref:struct:evepoll::event	file:
evsel	include/event_internal.h	/^        const struct eventop *evsel;$/;"	m	struct:event_base	typeref:struct:event_base::eventop
evwrite	src/epoll.c	/^    struct event *evwrite;$/;"	m	struct:evepoll	typeref:struct:evepoll::event	file:
fds	src/epoll.c	/^    struct evepoll *fds;$/;"	m	struct:epollop	typeref:struct:epollop::evepoll	file:
fifo_read	test/event_test.c	/^void fifo_read (int fd, short events, void *arg) {$/;"	f
howmany	src/select.c	16;"	d	file:
hz	include/sys/_time.h	/^	int	hz;		\/* clock frequency *\/$/;"	m	struct:clockinfo
init	include/event.h	/^        void *(*init) (void);$/;"	m	struct:eventop
it_interval	include/sys/_time.h	/^	struct	timeval it_interval;	\/* timer interval *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval
it_value	include/sys/_time.h	/^	struct	timeval it_value;	\/* current value *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval
itimerval	include/sys/_time.h	/^struct	itimerval {$/;"	s
main	test/event_test.c	/^int main (void) {$/;"	f
main	test/queue_test.c	/^int main (void) {$/;"	f
nactivequeues	include/event_internal.h	/^        int nactivequeues;$/;"	m	struct:event_base
name	include/event.h	/^        const char *name;$/;"	m	struct:eventop
nevents	src/epoll.c	/^    int nevents;$/;"	m	struct:epollop	file:
nfds	src/epoll.c	/^    int nfds;$/;"	m	struct:epollop	file:
profhz	include/sys/_time.h	/^	int	profhz;		\/* profiling clock frequency *\/$/;"	m	struct:clockinfo
recalc	include/event.h	/^        int (*recalc) (struct event_base *, void *, int);$/;"	m	struct:eventop
select_add	src/select.c	/^int select_add (void *arg, struct event *ev) {$/;"	f
select_del	src/select.c	/^int select_del (void *arg, struct event *ev) {$/;"	f
select_dispatch	src/select.c	/^int select_dispatch (struct event_base *base, void *arg, struct timeval *tv) {$/;"	f
select_init	src/select.c	/^void *select_init (void) {$/;"	f
select_recalc	src/select.c	/^int select_recalc (struct event_base *base, void *arg, int max) {$/;"	f
selectop	src/select.c	/^struct selectop {$/;"	s	file:
selectops	src/select.c	/^const struct eventop selectops = {$/;"	v	typeref:struct:eventop
sop	src/select.c	/^} sop;$/;"	v	typeref:struct:selectop
stathz	include/sys/_time.h	/^	int	stathz;		\/* statistics clock frequency *\/$/;"	m	struct:clockinfo
tick	include/sys/_time.h	/^	int	tick;		\/* micro-seconds per hz tick *\/$/;"	m	struct:clockinfo
tickadj	include/sys/_time.h	/^	int	tickadj;	\/* clock skew rate for adjtime() *\/$/;"	m	struct:clockinfo
timeout_next	src/event.c	/^int timeout_next (struct event_base *base, struct timeval *tv) {$/;"	f
timeout_process	src/event.c	/^void timeout_process (struct event_base *base) {$/;"	f
timeradd	include/sys/_time.h	85;"	d
timerclear	include/sys/_time.h	79;"	d
timercmp	include/sys/_time.h	81;"	d
timerisset	include/sys/_time.h	80;"	d
timersub	include/sys/_time.h	94;"	d
timespec	include/sys/_time.h	/^struct timespec {$/;"	s
timespecadd	include/sys/_time.h	111;"	d
timespecclear	include/sys/_time.h	105;"	d
timespeccmp	include/sys/_time.h	107;"	d
timespecisset	include/sys/_time.h	106;"	d
timespecsub	include/sys/_time.h	120;"	d
timetree	include/event_internal.h	/^         RB_HEAD (event_tree, event) timetree;$/;"	m	struct:event_base
timeval	include/sys/_time.h	/^struct timeval {$/;"	s
timezone	include/sys/_time.h	/^struct timezone {$/;"	s
tv_nsec	include/sys/_time.h	/^	long	tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec
tv_sec	include/sys/_time.h	/^	long	tv_sec;		\/* seconds *\/$/;"	m	struct:timeval
tv_sec	include/sys/_time.h	/^	time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec
tv_usec	include/sys/_time.h	/^	long	tv_usec;	\/* and microseconds *\/$/;"	m	struct:timeval
tz_dsttime	include/sys/_time.h	/^	int	tz_dsttime;	\/* type of dst correction *\/$/;"	m	struct:timezone
tz_minuteswest	include/sys/_time.h	/^	int	tz_minuteswest;	\/* minutes west of Greenwich *\/$/;"	m	struct:timezone
value	test/queue_test.c	/^    int value;$/;"	m	struct:event	file:

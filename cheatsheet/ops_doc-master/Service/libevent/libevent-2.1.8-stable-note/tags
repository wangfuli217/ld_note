!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note\/missing aclocal-1.15$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADDFILE_TEST	test/regress_buffer.c	2541;"	d	file:
ADDFILE_TEST_GROUP	test/regress_buffer.c	2545;"	d	file:
ADD_ENTROPY	arc4random.c	72;"	d	file:
ADD_UDATA	kqueue.c	172;"	d	file:
AF_INET6	ipv6-internal.h	73;"	d
ALLOC	test/regress_bufferevent.c	/^		ALLOC, FREE,$/;"	e	enum:__anon2::__anon3	file:
ALL_DATA_READ	http-internal.h	/^	ALL_DATA_READ = 1,$/;"	e	enum:message_read_status
ALL_NATIVE_AI_FLAGS	evutil.c	/^static const unsigned int ALL_NATIVE_AI_FLAGS =$/;"	v	file:
ALL_NONNATIVE_AI_FLAGS	evutil.c	/^static const unsigned int ALL_NONNATIVE_AI_FLAGS =$/;"	v	file:
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -I$(srcdir)\/compat -I$(srcdir)\/include -I.\/include $(SYS_INCLUDES)$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = cscope check recheck$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
APPEND16	evdns.c	1607;"	d	file:
APPEND16	evdns.c	2155;"	d	file:
APPEND32	evdns.c	1614;"	d	file:
APPEND32	evdns.c	2156;"	d	file:
APPEND_CHAIN	buffer.c	/^APPEND_CHAIN(struct evbuffer *dst, struct evbuffer *src)$/;"	f	file:
APPEND_CHAIN_MULTICAST	buffer.c	/^APPEND_CHAIN_MULTICAST(struct evbuffer *dst, struct evbuffer *src)$/;"	f	file:
AR	Makefile	/^AR = ar$/;"	m
ARC4RANDOM_EXPORT	arc4random.c	45;"	d	file:
ARC4RANDOM_EXPORT	evutil_rand.c	122;"	d	file:
ARC4RANDOM_NORANDOM	evutil_rand.c	131;"	d	file:
ARC4RANDOM_NOSTIR	evutil_rand.c	130;"	d	file:
ARC4RANDOM_NOUNIFORM	evutil_rand.c	132;"	d	file:
ARC4RANDOM_UINT32	arc4random.c	49;"	d	file:
ARC4RANDOM_UINT32	evutil_rand.c	129;"	d	file:
ARC4_LOCK_	evutil_rand.c	123;"	d	file:
ARC4_UNLOCK_	evutil_rand.c	124;"	d	file:
ARRAY_SIZE	test/regress_dns.c	75;"	d	file:
ASN1_STRING_get0_data	sample/openssl_hostname_validation.c	52;"	d	file:
ASSERT_EVBUFFER_LOCKED	evbuffer-internal.h	313;"	d
ASSERT_LOCKED	evdns.c	422;"	d	file:
ASSERT_LOCKED	evdns.c	428;"	d	file:
ASSERT_VALID_REQUEST	evdns.c	131;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note\/missing automake-1.15$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = foreign 1.9 subdir-objects$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AcceptEx	iocp-internal.h	/^	AcceptExPtr AcceptEx;$/;"	m	struct:win32_extension_fns
AcceptExPtr	iocp-internal.h	/^typedef BOOL (WINAPI *AcceptExPtr)(SOCKET, SOCKET, PVOID, DWORD, DWORD, DWORD, LPDWORD, LPOVERLAPPED);$/;"	t
AddDeclaration	event_rpcgen.py	/^    def AddDeclaration(self, funcname):$/;"	m	class:EntryArray
AddEntry	event_rpcgen.py	/^    def AddEntry(self, entry):$/;"	m	class:Struct
AddFuncName	event_rpcgen.py	/^    def AddFuncName(self):$/;"	m	class:Entry
Array	event_rpcgen.py	/^    def Array(self):$/;"	m	class:Entry
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:Entry
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:EntryArray
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:EntryBytes
AssignDeclaration	event_rpcgen.py	/^    def AssignDeclaration(self, funcname):$/;"	m	class:EntryVarBytes
AssignFuncName	event_rpcgen.py	/^    def AssignFuncName(self):$/;"	m	class:Entry
B	test/test-ratelim.c	213;"	d	file:
B	test/test-ratelim.c	220;"	d	file:
BACKLOG_SIZE	test/regress_http.c	1362;"	d	file:
BAD	test/regress_http.c	2481;"	d	file:
BAD	test/regress_http.c	2837;"	d	file:
BAD	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	e	enum:entry_status	file:
BASIC	test/regress.h	102;"	d
BASIC	test/regress_http.c	/^	BASIC = 1,$/;"	e	enum:http_cancel_test_type	file:
BASIC_REQUEST_BODY	test/regress_http.c	/^static char const BASIC_REQUEST_BODY[] = "This is funny";$/;"	v	file:
BEV_CTRL_CANCEL_ALL	bufferevent-internal.h	/^	BEV_CTRL_CANCEL_ALL$/;"	e	enum:bufferevent_ctrl_op
BEV_CTRL_GET_FD	bufferevent-internal.h	/^	BEV_CTRL_GET_FD,$/;"	e	enum:bufferevent_ctrl_op
BEV_CTRL_GET_UNDERLYING	bufferevent-internal.h	/^	BEV_CTRL_GET_UNDERLYING,$/;"	e	enum:bufferevent_ctrl_op
BEV_CTRL_SET_FD	bufferevent-internal.h	/^	BEV_CTRL_SET_FD,$/;"	e	enum:bufferevent_ctrl_op
BEV_DEL_GENERIC_READ_TIMEOUT	bufferevent-internal.h	460;"	d
BEV_DEL_GENERIC_WRITE_TIMEOUT	bufferevent-internal.h	462;"	d
BEV_ERROR	include/event2/bufferevent.h	/^	BEV_ERROR = 2$/;"	e	enum:bufferevent_filter_result
BEV_EVENT_CONNECTED	include/event2/bufferevent.h	133;"	d
BEV_EVENT_EOF	include/event2/bufferevent.h	127;"	d
BEV_EVENT_ERROR	include/event2/bufferevent.h	129;"	d
BEV_EVENT_READING	include/event2/bufferevent.h	123;"	d
BEV_EVENT_TIMEOUT	include/event2/bufferevent.h	131;"	d
BEV_EVENT_WRITING	include/event2/bufferevent.h	125;"	d
BEV_FINISHED	include/event2/bufferevent.h	/^	BEV_FINISHED = 2$/;"	e	enum:bufferevent_flush_mode
BEV_FLUSH	include/event2/bufferevent.h	/^	BEV_FLUSH = 1,$/;"	e	enum:bufferevent_flush_mode
BEV_IS_ASYNC	bufferevent-internal.h	331;"	d
BEV_IS_ASYNC	bufferevent-internal.h	333;"	d
BEV_IS_FILTER	bufferevent-internal.h	326;"	d
BEV_IS_PAIR	bufferevent-internal.h	327;"	d
BEV_IS_SOCKET	bufferevent-internal.h	325;"	d
BEV_LOCK	bufferevent-internal.h	471;"	d
BEV_LOCK	bufferevent-internal.h	475;"	d
BEV_NEED_MORE	include/event2/bufferevent.h	/^	BEV_NEED_MORE = 1,$/;"	e	enum:bufferevent_filter_result
BEV_NORMAL	include/event2/bufferevent.h	/^	BEV_NORMAL = 0,$/;"	e	enum:bufferevent_flush_mode
BEV_OK	include/event2/bufferevent.h	/^	BEV_OK = 0,$/;"	e	enum:bufferevent_filter_result
BEV_OPT_CLOSE_ON_FREE	include/event2/bufferevent.h	/^	BEV_OPT_CLOSE_ON_FREE = (1<<0),$/;"	e	enum:bufferevent_options
BEV_OPT_DEFER_CALLBACKS	include/event2/bufferevent.h	/^	BEV_OPT_DEFER_CALLBACKS = (1<<2),$/;"	e	enum:bufferevent_options
BEV_OPT_THREADSAFE	include/event2/bufferevent.h	/^	BEV_OPT_THREADSAFE = (1<<1),$/;"	e	enum:bufferevent_options
BEV_OPT_UNLOCK_CALLBACKS	include/event2/bufferevent.h	/^	BEV_OPT_UNLOCK_CALLBACKS = (1<<3)$/;"	e	enum:bufferevent_options
BEV_RESET_GENERIC_READ_TIMEOUT	bufferevent-internal.h	448;"	d
BEV_RESET_GENERIC_WRITE_TIMEOUT	bufferevent-internal.h	455;"	d
BEV_SUSPEND_BW	bufferevent-internal.h	67;"	d
BEV_SUSPEND_BW_GROUP	bufferevent-internal.h	69;"	d
BEV_SUSPEND_FILT_READ	bufferevent-internal.h	75;"	d
BEV_SUSPEND_LOOKUP	bufferevent-internal.h	72;"	d
BEV_SUSPEND_WM	bufferevent-internal.h	65;"	d
BEV_TRIG_ALL_OPTS	bufferevent.c	258;"	d	file:
BEV_TRIG_DEFER_CALLBACKS	include/event2/bufferevent.h	/^	BEV_TRIG_DEFER_CALLBACKS = BEV_OPT_DEFER_CALLBACKS$/;"	e	enum:bufferevent_trigger_options
BEV_TRIG_IGNORE_WATERMARKS	include/event2/bufferevent.h	/^	BEV_TRIG_IGNORE_WATERMARKS = (1<<16),$/;"	e	enum:bufferevent_trigger_options
BEV_UNLOCK	bufferevent-internal.h	472;"	d
BEV_UNLOCK	bufferevent-internal.h	481;"	d
BEV_UPCAST	bufferevent-internal.h	468;"	d
BIO_TYPE_LIBEVENT	bufferevent_openssl.c	86;"	d	file:
BIO_TYPE_LIBEVENT_RWCOUNT	test/regress_ssl.c	631;"	d	file:
BIO_get_data	openssl-compat.h	28;"	d
BIO_get_init	openssl-compat.h	27;"	d
BIO_get_shutdown	openssl-compat.h	29;"	d
BIO_meth_new	openssl-compat.h	/^static inline BIO_METHOD *BIO_meth_new(int type, const char *name)$/;"	f
BIO_meth_set_create	openssl-compat.h	21;"	d
BIO_meth_set_ctrl	openssl-compat.h	20;"	d
BIO_meth_set_destroy	openssl-compat.h	22;"	d
BIO_meth_set_puts	openssl-compat.h	19;"	d
BIO_meth_set_read	openssl-compat.h	18;"	d
BIO_meth_set_write	openssl-compat.h	17;"	d
BIO_new_bufferevent	bufferevent_openssl.c	/^BIO_new_bufferevent(struct bufferevent *bufferevent, int close_flag)$/;"	f	file:
BIO_new_rwcount	test/regress_ssl.c	/^BIO_new_rwcount(int close_flag)$/;"	f	file:
BIO_s_bufferevent	bufferevent_openssl.c	/^BIO_s_bufferevent(void)$/;"	f	file:
BIO_s_rwcount	test/regress_ssl.c	/^BIO_s_rwcount(void)$/;"	f	file:
BIO_set_data	openssl-compat.h	25;"	d
BIO_set_init	openssl-compat.h	24;"	d
BIO_set_shutdown	openssl-compat.h	26;"	d
BUFFEREVENT_INTERNAL_H_INCLUDED_	bufferevent-internal.h	27;"	d
BUFFEREVENT_SSL_ACCEPTING	include/event2/bufferevent_ssl.h	/^	BUFFEREVENT_SSL_ACCEPTING = 2$/;"	e	enum:bufferevent_ssl_state
BUFFEREVENT_SSL_CONNECTING	include/event2/bufferevent_ssl.h	/^	BUFFEREVENT_SSL_CONNECTING = 1,$/;"	e	enum:bufferevent_ssl_state
BUFFEREVENT_SSL_OPEN	include/event2/bufferevent_ssl.h	/^	BUFFEREVENT_SSL_OPEN = 0,$/;"	e	enum:bufferevent_ssl_state
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = $(am__append_11) include\/event2\/event-config.h$/;"	m
BYTES_BEFORE_RESEED	arc4random.c	75;"	d	file:
BY_HOST	test/regress_http.c	/^	BY_HOST = 2,$/;"	e	enum:http_cancel_test_type	file:
BodyPreamble	event_rpcgen.py	/^    def BodyPreamble(self, name, header_file):$/;"	m	class:CCodeGenerator
CANONICAL	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	e	enum:entry_status	file:
CAN_CHECK_ERR	test/regress_util.c	507;"	d	file:
CB_COUNT	test/regress_thread.c	389;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CCodeGenerator	event_rpcgen.py	/^class CCodeGenerator:$/;"	c
CFLAGS	Makefile	/^CFLAGS = -g -O2 -Wall -fno-strict-aliasing -pthread -W -Wfloat-equal -Wundef -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wwrite-strings -Wredundant-decls -Wchar-subscripts -Wcomment -Wformat -Wwrite-strings -Wmissing-declarations -Wredundant-decls -Wnested-externs -Wbad-function-cast -Wswitch -Wno-unused-parameter -Wstrict-aliasing -Winit-self -Wmissing-field-initializers -Wdeclaration-after-statement -Waddress -Wnormalized=id -Woverride-init$/;"	m
CHAIN_PINNED	buffer.c	134;"	d	file:
CHAIN_PINNED_R	buffer.c	135;"	d	file:
CHAIN_SPACE_LEN	buffer.c	130;"	d	file:
CHAIN_SPACE_PTR	buffer.c	128;"	d	file:
CHANGELIST_INTERNAL_H_INCLUDED_	changelist-internal.h	27;"	d
CHAR_IS_UNRESERVED	http.c	3050;"	d	file:
CHUNKS	test/regress_http.c	/^static char const* const CHUNKS[] = {$/;"	v	file:
CHUNK_SZ	buffer.c	1587;"	d	file:
CHUNK_SZ	buffer.c	1608;"	d	file:
CIRCLEQ_EMPTY	compat/sys/queue.h	476;"	d
CIRCLEQ_END	compat/sys/queue.h	473;"	d
CIRCLEQ_ENTRY	compat/sys/queue.h	462;"	d
CIRCLEQ_FIRST	compat/sys/queue.h	471;"	d
CIRCLEQ_FOREACH	compat/sys/queue.h	479;"	d
CIRCLEQ_FOREACH_REVERSE	compat/sys/queue.h	484;"	d
CIRCLEQ_HEAD	compat/sys/queue.h	452;"	d
CIRCLEQ_HEAD_INITIALIZER	compat/sys/queue.h	458;"	d
CIRCLEQ_INIT	compat/sys/queue.h	492;"	d
CIRCLEQ_INSERT_AFTER	compat/sys/queue.h	497;"	d
CIRCLEQ_INSERT_BEFORE	compat/sys/queue.h	507;"	d
CIRCLEQ_INSERT_HEAD	compat/sys/queue.h	517;"	d
CIRCLEQ_INSERT_TAIL	compat/sys/queue.h	527;"	d
CIRCLEQ_LAST	compat/sys/queue.h	472;"	d
CIRCLEQ_NEXT	compat/sys/queue.h	474;"	d
CIRCLEQ_PREV	compat/sys/queue.h	475;"	d
CIRCLEQ_REMOVE	compat/sys/queue.h	537;"	d
CIRCLEQ_REPLACE	compat/sys/queue.h	550;"	d
CLAMPTO	bufferevent_ratelim.c	213;"	d	file:
CLASS_INET	evdns.c	151;"	d	file:
CLEANFILES	Makefile	/^CLEANFILES = test\/rpcgen-attempted$/;"	m
CLOCK_SYNC_INTERVAL	event.c	367;"	d	file:
COMMON_TIMEOUT_IDX	event.c	1483;"	d	file:
COMMON_TIMEOUT_IDX_MASK	event.c	1478;"	d	file:
COMMON_TIMEOUT_IDX_SHIFT	event.c	1479;"	d	file:
COMMON_TIMEOUT_MAGIC	event.c	1481;"	d	file:
COMMON_TIMEOUT_MASK	event.c	1480;"	d	file:
COMMON_TIMEOUT_MICROSECONDS_MASK	event-internal.h	217;"	d
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES = libevent.pc libevent_openssl.pc \\$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h evconfig-private.h$/;"	m
CONTINUE	http.c	/^enum expect { NO, CONTINUE, OTHER };$/;"	e	enum:expect	file:
COPY_CHAIN	buffer.c	/^COPY_CHAIN(struct evbuffer *dst, struct evbuffer *src)$/;"	f	file:
CORE_SRC	Makefile	/^CORE_SRC = \\$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CURL_HOST_MATCH	sample/hostcheck.h	26;"	d
CURL_HOST_NOMATCH	sample/hostcheck.h	25;"	d
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CodeAdd	event_rpcgen.py	/^    def CodeAdd(self):$/;"	f
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryBytes
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryInt
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryString
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryStruct
CodeArrayAdd	event_rpcgen.py	/^    def CodeArrayAdd(self, varname, value):$/;"	m	class:EntryVarBytes
CodeArrayAssign	event_rpcgen.py	/^    def CodeArrayAssign(self, var, srcvar):$/;"	m	class:EntryStruct
CodeArrayAssign	event_rpcgen.py	/^    def CodeArrayAssign(self, varname, srcvar):$/;"	m	class:EntryInt
CodeArrayAssign	event_rpcgen.py	/^    def CodeArrayAssign(self, varname, srcvar):$/;"	m	class:EntryString
CodeArrayFree	event_rpcgen.py	/^    def CodeArrayFree(self, var):$/;"	m	class:EntryInt
CodeArrayFree	event_rpcgen.py	/^    def CodeArrayFree(self, var):$/;"	m	class:EntryStruct
CodeArrayFree	event_rpcgen.py	/^    def CodeArrayFree(self, varname):$/;"	m	class:EntryString
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	f
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:Entry
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryBytes
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryString
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryStruct
CodeAssign	event_rpcgen.py	/^    def CodeAssign(self):$/;"	m	class:EntryVarBytes
CodeBase	event_rpcgen.py	/^    def CodeBase(self):$/;"	m	class:Entry
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	f
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:Entry
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryBytes
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryString
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryStruct
CodeClear	event_rpcgen.py	/^    def CodeClear(self, structname):$/;"	m	class:EntryVarBytes
CodeComplete	event_rpcgen.py	/^    def CodeComplete(self, structname, var_name):$/;"	f
CodeComplete	event_rpcgen.py	/^    def CodeComplete(self, structname, var_name):$/;"	m	class:Entry
CodeComplete	event_rpcgen.py	/^    def CodeComplete(self, structname, var_name):$/;"	m	class:EntryStruct
CodeFilename	event_rpcgen.py	/^    def CodeFilename(self, filename):$/;"	m	class:CCodeGenerator
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:Entry
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:EntryString
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:EntryStruct
CodeFree	event_rpcgen.py	/^    def CodeFree(self, name):$/;"	m	class:EntryVarBytes
CodeFree	event_rpcgen.py	/^    def CodeFree(self, structname):$/;"	f
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:Entry
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryArray
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryBytes
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryStruct
CodeGet	event_rpcgen.py	/^    def CodeGet(self):$/;"	m	class:EntryVarBytes
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	f
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryBytes
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryInt
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryString
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryStruct
CodeInitialize	event_rpcgen.py	/^    def CodeInitialize(self, name):$/;"	m	class:EntryVarBytes
CodeMakeInitalize	event_rpcgen.py	/^    def CodeMakeInitalize(self, varname):$/;"	m	class:EntryString
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	f
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryBytes
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryInt
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryString
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryStruct
CodeMarshal	event_rpcgen.py	/^    def CodeMarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryVarBytes
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	f
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryBytes
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryInt
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryString
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryStruct
CodeUnmarshal	event_rpcgen.py	/^    def CodeUnmarshal(self, buf, tag_name, var_name, var_len):$/;"	m	class:EntryVarBytes
CommandLine	event_rpcgen.py	/^class CommandLine:$/;"	c
ConnectEx	iocp-internal.h	/^	ConnectExPtr ConnectEx;$/;"	m	struct:win32_extension_fns
ConnectExPtr	iocp-internal.h	/^typedef BOOL (WINAPI *ConnectExPtr)(SOCKET, const struct sockaddr *, int, PVOID, DWORD, LPDWORD, LPOVERLAPPED);$/;"	t
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
Curl_cert_hostcheck	sample/hostcheck.c	/^int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)$/;"	f
Curl_raw_equal	sample/hostcheck.c	/^static int Curl_raw_equal(const char *first, const char *second)$/;"	f	file:
Curl_raw_nequal	sample/hostcheck.c	/^static int Curl_raw_nequal(const char *first, const char *second, size_t max)$/;"	f	file:
Curl_raw_toupper	sample/hostcheck.c	/^static char Curl_raw_toupper(char in)$/;"	f	file:
DATA	Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DATA_CORRUPTED	http-internal.h	/^	DATA_CORRUPTED = -1,$/;"	e	enum:message_read_status
DATA_TOO_LONG	http-internal.h	/^	DATA_TOO_LONG = -3$/;"	e	enum:message_read_status
DEBUG_LOCK_SIG	evthread.c	186;"	d	file:
DEC	test/regress_http.c	2861;"	d	file:
DEC	test/regress_http.c	2946;"	d	file:
DECODE_INT_INTERNAL	event_tagging.c	315;"	d	file:
DECR_EVENT_COUNT	event.c	3572;"	d	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_MASK	log.c	73;"	d	file:
DEFAULT_MASK	log.c	75;"	d	file:
DEFAULT_WRITE_IOVEC	buffer.c	2373;"	d	file:
DEFER_INTERNAL_H_INCLUDED_	defer-internal.h	27;"	d
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = test\/regress.gen.c test\/regress.gen.h *~ libevent.pc \\$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libevent_la_SOURCES_DIST) \\$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DIV_ROUNDUP	select.c	72;"	d	file:
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DNS_ERR_CANCEL	include/event2/dns.h	170;"	d
DNS_ERR_FORMAT	include/event2/dns.h	150;"	d
DNS_ERR_NODATA	include/event2/dns.h	174;"	d
DNS_ERR_NONE	include/event2/dns.h	148;"	d
DNS_ERR_NOTEXIST	include/event2/dns.h	155;"	d
DNS_ERR_NOTIMPL	include/event2/dns.h	157;"	d
DNS_ERR_REFUSED	include/event2/dns.h	160;"	d
DNS_ERR_SERVERFAILED	include/event2/dns.h	153;"	d
DNS_ERR_SHUTDOWN	include/event2/dns.h	168;"	d
DNS_ERR_TIMEOUT	include/event2/dns.h	166;"	d
DNS_ERR_TRUNCATED	include/event2/dns.h	162;"	d
DNS_ERR_UNKNOWN	include/event2/dns.h	164;"	d
DNS_IPv4_A	include/event2/dns.h	176;"	d
DNS_IPv6_AAAA	include/event2/dns.h	178;"	d
DNS_LEGACY	test/regress_dns.c	2117;"	d	file:
DNS_NO_SEARCH	include/event2/dns.h	189;"	d
DNS_OPTIONS_ALL	include/event2/dns.h	186;"	d
DNS_OPTION_HOSTSFILE	include/event2/dns.h	185;"	d
DNS_OPTION_MISC	include/event2/dns.h	184;"	d
DNS_OPTION_NAMESERVERS	include/event2/dns.h	183;"	d
DNS_OPTION_SEARCH	include/event2/dns.h	182;"	d
DNS_PTR	include/event2/dns.h	177;"	d
DNS_QUERY_NO_SEARCH	include/event2/dns.h	180;"	d
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
Data	compat/sys/sample_list.c	/^typedef struct Data$/;"	s	file:
Data	compat/sys/sample_list.c	/^}Data;$/;"	t	typeref:struct:Data	file:
Data	compat/sys/sample_simple_queue.c	/^struct Data$/;"	s	file:
Data	compat/sys/sample_slist.c	/^typedef struct Data$/;"	s	file:
Data	compat/sys/sample_slist.c	/^}Data;$/;"	t	typeref:struct:Data	file:
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	f
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryBytes
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryInt
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryString
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryStruct
Declaration	event_rpcgen.py	/^    def Declaration(self):$/;"	m	class:EntryVarBytes
EARLY_CLOSE_IF_HAVE_RDHUP	epoll.c	68;"	d	file:
EARLY_CLOSE_IF_HAVE_RDHUP	epoll.c	70;"	d	file:
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENC	test/regress_http.c	2847;"	d	file:
ENC	test/regress_http.c	2945;"	d	file:
ENCODE_INT_INTERNAL	event_tagging.c	117;"	d	file:
END_OF_ALIASES	test/tinytest.h	73;"	d
END_OF_GROUPS	test/tinytest.h	67;"	d
END_OF_TESTCASES	test/tinytest.h	60;"	d
EPOCH_BIAS	evutil_time.c	81;"	d	file:
EPOLLRDHUP	epoll.c	67;"	d	file:
EPOLLTABLE_INTERNAL_H_INCLUDED_	epolltable-internal.h	28;"	d
EPOLL_OP_TABLE_INDEX	epolltable-internal.h	125;"	d
ERR	evutil.c	218;"	d	file:
ERR	evutil.c	309;"	d	file:
ERR_FORMAT	http.c	2756;"	d	file:
ERR_FORMAT	http.c	2779;"	d	file:
ERR_FORMAT	http.c	3448;"	d	file:
ERR_FORMAT	http.c	3478;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EVBASE_ACQUIRE_LOCK	evthread-internal.h	115;"	d
EVBASE_ACQUIRE_LOCK	evthread-internal.h	229;"	d
EVBASE_ACQUIRE_LOCK	evthread-internal.h	307;"	d
EVBASE_IN_THREAD	evthread-internal.h	197;"	d
EVBASE_IN_THREAD	evthread-internal.h	305;"	d
EVBASE_IN_THREAD	evthread-internal.h	63;"	d
EVBASE_NEED_NOTIFY	evthread-internal.h	199;"	d
EVBASE_NEED_NOTIFY	evthread-internal.h	306;"	d
EVBASE_NEED_NOTIFY	evthread-internal.h	70;"	d
EVBASE_RELEASE_LOCK	evthread-internal.h	120;"	d
EVBASE_RELEASE_LOCK	evthread-internal.h	234;"	d
EVBASE_RELEASE_LOCK	evthread-internal.h	308;"	d
EVBUFFER_CB_ENABLED	include/event2/buffer.h	957;"	d
EVBUFFER_CB_INTERNAL_FLAGS	buffer.c	122;"	d	file:
EVBUFFER_CB_NODEFER	evbuffer-internal.h	44;"	d
EVBUFFER_CB_OBSOLETE	buffer.c	125;"	d	file:
EVBUFFER_CB_USER_FLAGS	buffer.c	120;"	d	file:
EVBUFFER_CHAIN_EXTRA	evbuffer-internal.h	310;"	d
EVBUFFER_CHAIN_MAX	evbuffer-internal.h	183;"	d
EVBUFFER_CHAIN_MAX	evbuffer-internal.h	187;"	d
EVBUFFER_CHAIN_MAX	evbuffer-internal.h	189;"	d
EVBUFFER_CHAIN_MAX_AUTO_SIZE	buffer.c	1831;"	d	file:
EVBUFFER_CHAIN_SIZE	evbuffer-internal.h	307;"	d
EVBUFFER_DANGLING	evbuffer-internal.h	229;"	d
EVBUFFER_DATA	include/event2/buffer_compat.h	112;"	d
EVBUFFER_EOF	include/event2/bufferevent_compat.h	91;"	d
EVBUFFER_EOL_ANY	include/event2/buffer.h	/^    EVBUFFER_EOL_ANY,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_CRLF	include/event2/buffer.h	/^    EVBUFFER_EOL_CRLF,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_CRLF_STRICT	include/event2/buffer.h	/^    EVBUFFER_EOL_CRLF_STRICT,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_LF	include/event2/buffer.h	/^    EVBUFFER_EOL_LF,$/;"	e	enum:evbuffer_eol_style
EVBUFFER_EOL_NUL	include/event2/buffer.h	/^    EVBUFFER_EOL_NUL$/;"	e	enum:evbuffer_eol_style
EVBUFFER_ERROR	include/event2/bufferevent_compat.h	92;"	d
EVBUFFER_FILESEGMENT	evbuffer-internal.h	218;"	d
EVBUFFER_FLAG_DRAINS_TO_FD	include/event2/buffer.h	215;"	d
EVBUFFER_IMMUTABLE	evbuffer-internal.h	221;"	d
EVBUFFER_INITIAL_LENGTH	test/regress_buffer.c	1548;"	d	file:
EVBUFFER_INPUT	include/event2/bufferevent_compat.h	96;"	d
EVBUFFER_INTERNAL_H_INCLUDED_	evbuffer-internal.h	28;"	d
EVBUFFER_IOVEC_IS_NATIVE_	include/event2/buffer.h	144;"	d
EVBUFFER_LENGTH	include/event2/buffer_compat.h	110;"	d
EVBUFFER_LOCK	evbuffer-internal.h	316;"	d
EVBUFFER_LOCK2	evbuffer-internal.h	324;"	d
EVBUFFER_MAX_READ	buffer.c	2397;"	d	file:
EVBUFFER_MEM_PINNED_ANY	evbuffer-internal.h	226;"	d
EVBUFFER_MEM_PINNED_R	evbuffer-internal.h	224;"	d
EVBUFFER_MEM_PINNED_W	evbuffer-internal.h	225;"	d
EVBUFFER_MULTICAST	evbuffer-internal.h	231;"	d
EVBUFFER_OUTPUT	include/event2/bufferevent_compat.h	98;"	d
EVBUFFER_PTR_ADD	include/event2/buffer.h	/^    EVBUFFER_PTR_ADD$/;"	e	enum:evbuffer_ptr_how
EVBUFFER_PTR_SET	include/event2/buffer.h	/^    EVBUFFER_PTR_SET,$/;"	e	enum:evbuffer_ptr_how
EVBUFFER_READ	include/event2/bufferevent_compat.h	89;"	d
EVBUFFER_REFERENCE	evbuffer-internal.h	220;"	d
EVBUFFER_SENDFILE	evbuffer-internal.h	219;"	d
EVBUFFER_TIMEOUT	include/event2/bufferevent_compat.h	93;"	d
EVBUFFER_UNLOCK	evbuffer-internal.h	320;"	d
EVBUFFER_UNLOCK2	evbuffer-internal.h	328;"	d
EVBUFFER_WRITE	include/event2/bufferevent_compat.h	90;"	d
EVBUF_FS_CLOSE_ON_FREE	include/event2/buffer.h	559;"	d
EVBUF_FS_DISABLE_LOCKING	include/event2/buffer.h	581;"	d
EVBUF_FS_DISABLE_MMAP	include/event2/buffer.h	564;"	d
EVBUF_FS_DISABLE_SENDFILE	include/event2/buffer.h	574;"	d
EVCONFIG_PRIVATE_H_INCLUDED_	evconfig-private.h	5;"	d
EVCON_CONNECTING	http-internal.h	/^	EVCON_CONNECTING,	\/**< tries to currently connect *\/$/;"	e	enum:evhttp_connection_state
EVCON_DISCONNECTED	http-internal.h	/^	EVCON_DISCONNECTED,	\/**< not currently connected not trying either*\/$/;"	e	enum:evhttp_connection_state
EVCON_IDLE	http-internal.h	/^	EVCON_IDLE,		\/**< connection is established *\/$/;"	e	enum:evhttp_connection_state
EVCON_READING_BODY	http-internal.h	/^	EVCON_READING_BODY,	\/**< reading request\/response body *\/$/;"	e	enum:evhttp_connection_state
EVCON_READING_FIRSTLINE	http-internal.h	/^	EVCON_READING_FIRSTLINE,\/**< reading Request-Line (incoming conn) or$/;"	e	enum:evhttp_connection_state
EVCON_READING_HEADERS	http-internal.h	/^	EVCON_READING_HEADERS,	\/**< reading request\/response headers *\/$/;"	e	enum:evhttp_connection_state
EVCON_READING_TRAILER	http-internal.h	/^	EVCON_READING_TRAILER,	\/**< reading request\/response chunked trailer *\/$/;"	e	enum:evhttp_connection_state
EVCON_WRITING	http-internal.h	/^	EVCON_WRITING		\/**< writing request\/response headers\/body *\/$/;"	e	enum:evhttp_connection_state
EVDNS_ADDITIONAL_SECTION	include/event2/dns.h	590;"	d
EVDNS_ANSWER_SECTION	include/event2/dns.h	588;"	d
EVDNS_AUTHORITY_SECTION	include/event2/dns.h	589;"	d
EVDNS_BASE_ALL_FLAGS	evdns.c	3949;"	d	file:
EVDNS_BASE_ALL_FLAGS	evdns.c	3956;"	d	file:
EVDNS_BASE_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED	include/event2/dns.h	494;"	d
EVDNS_BASE_DISABLE_WHEN_INACTIVE	include/event2/dns.h	210;"	d
EVDNS_BASE_INITIALIZE_NAMESERVERS	include/event2/dns.h	207;"	d
EVDNS_CLASS_INET	include/event2/dns.h	604;"	d
EVDNS_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED	include/event2/dns_compat.h	329;"	d
EVDNS_FLAGS_AA	include/event2/dns.h	607;"	d
EVDNS_FLAGS_RD	include/event2/dns.h	608;"	d
EVDNS_LOCK	evdns.c	420;"	d	file:
EVDNS_LOCK	evdns.c	424;"	d	file:
EVDNS_LOG_CHECK	evdns.c	441;"	d	file:
EVDNS_LOG_CHECK	evdns.c	443;"	d	file:
EVDNS_LOG_DEBUG	evdns.c	118;"	d	file:
EVDNS_LOG_MSG	evdns.c	120;"	d	file:
EVDNS_LOG_WARN	evdns.c	119;"	d	file:
EVDNS_QTYPE_ALL	include/event2/dns.h	602;"	d
EVDNS_QTYPE_AXFR	include/event2/dns.h	601;"	d
EVDNS_TYPE_A	include/event2/dns.h	592;"	d
EVDNS_TYPE_AAAA	include/event2/dns.h	599;"	d
EVDNS_TYPE_CNAME	include/event2/dns.h	594;"	d
EVDNS_TYPE_MX	include/event2/dns.h	597;"	d
EVDNS_TYPE_NS	include/event2/dns.h	593;"	d
EVDNS_TYPE_PTR	include/event2/dns.h	596;"	d
EVDNS_TYPE_SOA	include/event2/dns.h	595;"	d
EVDNS_TYPE_TXT	include/event2/dns.h	598;"	d
EVDNS_UNLOCK	evdns.c	421;"	d	file:
EVDNS_UNLOCK	evdns.c	426;"	d	file:
EVENT1_EVDNS_H_INCLUDED_	include/evdns.h	28;"	d
EVENT1_EVENT_H_INCLUDED_	include/event.h	28;"	d
EVENT1_EVHTTP_H_INCLUDED_	include/evhttp.h	28;"	d
EVENT1_EVRPC_H_INCLUDED_	include/evrpc.h	28;"	d
EVENT1_EVUTIL_H_INCLUDED_	include/evutil.h	27;"	d
EVENT1_HDRS	Makefile	/^EVENT1_HDRS = \\$/;"	m
EVENT2_BUFFEREVENT_COMPAT_H_INCLUDED_	include/event2/bufferevent_compat.h	29;"	d
EVENT2_BUFFEREVENT_H_INCLUDED_	include/event2/bufferevent.h	28;"	d
EVENT2_BUFFEREVENT_SSL_H_INCLUDED_	include/event2/bufferevent_ssl.h	27;"	d
EVENT2_BUFFEREVENT_STRUCT_H_INCLUDED_	include/event2/bufferevent_struct.h	28;"	d
EVENT2_BUFFER_COMPAT_H_INCLUDED_	include/event2/buffer_compat.h	28;"	d
EVENT2_BUFFER_H_INCLUDED_	include/event2/buffer.h	27;"	d
EVENT2_DNS_COMPAT_H_INCLUDED_	include/event2/dns_compat.h	28;"	d
EVENT2_DNS_H_INCLUDED_	include/event2/dns.h	136;"	d
EVENT2_DNS_STRUCT_H_INCLUDED_	include/event2/dns_struct.h	28;"	d
EVENT2_EVENT_COMPAT_H_INCLUDED_	include/event2/event_compat.h	28;"	d
EVENT2_EVENT_CONFIG_H_INCLUDED_	include/event2/event-config.h	12;"	d
EVENT2_EVENT_H_INCLUDED_	include/event2/event.h	28;"	d
EVENT2_EVENT_STRUCT_H_INCLUDED_	include/event2/event_struct.h	28;"	d
EVENT2_EXPORT	Makefile	/^EVENT2_EXPORT = \\$/;"	m
EVENT2_EXPORT_SYMBOL	include/event2/visibility.h	34;"	d
EVENT2_EXPORT_SYMBOL	include/event2/visibility.h	36;"	d
EVENT2_EXPORT_SYMBOL	include/event2/visibility.h	38;"	d
EVENT2_EXPORT_SYMBOL	include/event2/visibility.h	40;"	d
EVENT2_EXPORT_SYMBOL	include/event2/visibility.h	44;"	d
EVENT2_EXPORT_SYMBOL	include/event2/visibility.h	46;"	d
EVENT2_HTTP_COMPAT_H_INCLUDED_	include/event2/http_compat.h	28;"	d
EVENT2_HTTP_H_INCLUDED_	include/event2/http.h	28;"	d
EVENT2_HTTP_STRUCT_H_INCLUDED_	include/event2/http_struct.h	28;"	d
EVENT2_KEYVALQ_STRUCT_H_INCLUDED_	include/event2/keyvalq_struct.h	28;"	d
EVENT2_LISTENER_H_INCLUDED_	include/event2/listener.h	28;"	d
EVENT2_RPC_COMPAT_H_INCLUDED_	include/event2/rpc_compat.h	28;"	d
EVENT2_RPC_H_INCLUDED_	include/event2/rpc.h	28;"	d
EVENT2_RPC_STRUCT_H_INCLUDED_	include/event2/rpc_struct.h	28;"	d
EVENT2_TAG_COMPAT_H_INCLUDED_	include/event2/tag_compat.h	28;"	d
EVENT2_TAG_H_INCLUDED_	include/event2/tag.h	28;"	d
EVENT2_THREAD_H_INCLUDED_	include/event2/thread.h	27;"	d
EVENT2_UTIL_H_INCLUDED_	include/event2/util.h	27;"	d
EVENT2_VISIBILITY_H_INCLUDED_	include/event2/visibility.h	28;"	d
EVENT_BASE_ASSERT_LOCKED	event.c	362;"	d	file:
EVENT_BASE_COUNT_ACTIVE	include/event2/event.h	413;"	d
EVENT_BASE_COUNT_ADDED	include/event2/event.h	419;"	d
EVENT_BASE_COUNT_VIRTUAL	include/event2/event.h	416;"	d
EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST	include/event2/event.h	/^	EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST = 0x10,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_IGNORE_ENV	include/event2/event.h	/^	EVENT_BASE_FLAG_IGNORE_ENV = 0x02,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_NOLOCK	include/event2/event.h	/^	EVENT_BASE_FLAG_NOLOCK = 0x01,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_NO_CACHE_TIME	include/event2/event.h	/^	EVENT_BASE_FLAG_NO_CACHE_TIME = 0x08,$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_PRECISE_TIMER	include/event2/event.h	/^	EVENT_BASE_FLAG_PRECISE_TIMER = 0x20$/;"	e	enum:event_base_config_flag
EVENT_BASE_FLAG_STARTUP_IOCP	include/event2/event.h	/^	EVENT_BASE_FLAG_STARTUP_IOCP = 0x04,$/;"	e	enum:event_base_config_flag
EVENT_CHANGELIST_FDINFO_SIZE	changelist-internal.h	97;"	d
EVENT_CONFIG_H__	WIN32-Code/nmake/event2/event-config.h	11;"	d
EVENT_DBG_ALL	include/event2/event.h	788;"	d
EVENT_DBG_NONE	include/event2/event.h	789;"	d
EVENT_DEBUG_LOGGING_ENABLED	log-internal.h	45;"	d
EVENT_DEBUG_MODE_IS_ON	event-internal.h	235;"	d
EVENT_DEBUG_MODE_IS_ON	event-internal.h	237;"	d
EVENT_DEFINED_LISTENTRY_	include/event2/event_struct.h	99;"	d
EVENT_DEFINED_LISTHEAD_	include/event2/event_struct.h	108;"	d
EVENT_DEFINED_TQENTRY_	include/event2/event_struct.h	79;"	d
EVENT_DEFINED_TQENTRY_	include/event2/keyvalq_struct.h	37;"	d
EVENT_DEFINED_TQHEAD_	include/event2/event_struct.h	89;"	d
EVENT_DEFINED_TQHEAD_	include/event2/keyvalq_struct.h	46;"	d
EVENT_DEL_AUTOBLOCK	event-internal.h	533;"	d
EVENT_DEL_BLOCK	event-internal.h	529;"	d
EVENT_DEL_EVEN_IF_FINALIZING	event-internal.h	536;"	d
EVENT_DEL_NOBLOCK	event-internal.h	525;"	d
EVENT_DNS_USE_FTIME_FOR_ID_	WIN32-Code/nmake/event2/event-config.h	26;"	d
EVENT_ERR_ABORT_	log-internal.h	40;"	d
EVENT_EVCONFIG__PRIVATE_H_	WIN32-Code/nmake/evconfig-private.h	2;"	d
EVENT_FD	include/event2/event_compat.h	222;"	d
EVENT_FINALIZE_FREE_	event.c	2468;"	d	file:
EVENT_INTERNAL_H_INCLUDED_	event-internal.h	28;"	d
EVENT_LOG_DEBUG	include/event2/event.h	730;"	d
EVENT_LOG_ERR	include/event2/event.h	733;"	d
EVENT_LOG_MSG	include/event2/event.h	731;"	d
EVENT_LOG_WARN	include/event2/event.h	732;"	d
EVENT_MAX_PRIORITIES	include/event2/event.h	1485;"	d
EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED	include/event2/event.h	1590;"	d
EVENT_SIGNAL	include/event2/event_compat.h	223;"	d
EVENT__HAVE_ACCEPT4	include/event2/event-config.h	27;"	d
EVENT__HAVE_ARPA_INET_H	include/event2/event-config.h	36;"	d
EVENT__HAVE_CLOCK_GETTIME	include/event2/event-config.h	39;"	d
EVENT__HAVE_DECL_CTL_KERN	include/event2/event-config.h	43;"	d
EVENT__HAVE_DECL_KERN_ARND	include/event2/event-config.h	47;"	d
EVENT__HAVE_DECL_KERN_RANDOM	include/event2/event-config.h	51;"	d
EVENT__HAVE_DECL_RANDOM_UUID	include/event2/event-config.h	55;"	d
EVENT__HAVE_DLFCN_H	include/event2/event-config.h	61;"	d
EVENT__HAVE_EPOLL	include/event2/event-config.h	64;"	d
EVENT__HAVE_EPOLL_CREATE1	include/event2/event-config.h	67;"	d
EVENT__HAVE_EPOLL_CTL	include/event2/event-config.h	70;"	d
EVENT__HAVE_ERRNO_H	include/event2/event-config.h	73;"	d
EVENT__HAVE_ERR_REMOVE_THREAD_STATE	include/event2/event-config.h	76;"	d
EVENT__HAVE_EVENTFD	include/event2/event-config.h	79;"	d
EVENT__HAVE_FCNTL	include/event2/event-config.h	85;"	d
EVENT__HAVE_FCNTL_H	WIN32-Code/nmake/event2/event-config.h	56;"	d
EVENT__HAVE_FCNTL_H	include/event2/event-config.h	88;"	d
EVENT__HAVE_FD_MASK	include/event2/event-config.h	91;"	d
EVENT__HAVE_GETADDRINFO	WIN32-Code/nmake/event2/event-config.h	59;"	d
EVENT__HAVE_GETADDRINFO	include/event2/event-config.h	94;"	d
EVENT__HAVE_GETEGID	include/event2/event-config.h	97;"	d
EVENT__HAVE_GETEUID	include/event2/event-config.h	100;"	d
EVENT__HAVE_GETIFADDRS	include/event2/event-config.h	115;"	d
EVENT__HAVE_GETNAMEINFO	WIN32-Code/nmake/event2/event-config.h	62;"	d
EVENT__HAVE_GETNAMEINFO	include/event2/event-config.h	118;"	d
EVENT__HAVE_GETPROTOBYNUMBER	WIN32-Code/nmake/event2/event-config.h	65;"	d
EVENT__HAVE_GETPROTOBYNUMBER	include/event2/event-config.h	121;"	d
EVENT__HAVE_GETSERVBYNAME	WIN32-Code/nmake/event2/event-config.h	68;"	d
EVENT__HAVE_GETSERVBYNAME	include/event2/event-config.h	124;"	d
EVENT__HAVE_GETTIMEOFDAY	include/event2/event-config.h	127;"	d
EVENT__HAVE_IFADDRS_H	include/event2/event-config.h	130;"	d
EVENT__HAVE_INET_NTOP	include/event2/event-config.h	133;"	d
EVENT__HAVE_INET_PTON	include/event2/event-config.h	136;"	d
EVENT__HAVE_INTTYPES_H	include/event2/event-config.h	139;"	d
EVENT__HAVE_LIBZ	include/event2/event-config.h	148;"	d
EVENT__HAVE_MEMORY_H	WIN32-Code/nmake/event2/event-config.h	89;"	d
EVENT__HAVE_MEMORY_H	include/event2/event-config.h	157;"	d
EVENT__HAVE_MMAP	include/event2/event-config.h	160;"	d
EVENT__HAVE_NANOSLEEP	include/event2/event-config.h	163;"	d
EVENT__HAVE_NETDB_H	include/event2/event-config.h	166;"	d
EVENT__HAVE_NETINET_IN_H	include/event2/event-config.h	172;"	d
EVENT__HAVE_NETINET_TCP_H	include/event2/event-config.h	175;"	d
EVENT__HAVE_OPENSSL	include/event2/event-config.h	178;"	d
EVENT__HAVE_PIPE	include/event2/event-config.h	181;"	d
EVENT__HAVE_PIPE2	include/event2/event-config.h	184;"	d
EVENT__HAVE_POLL	include/event2/event-config.h	187;"	d
EVENT__HAVE_POLL_H	include/event2/event-config.h	190;"	d
EVENT__HAVE_PTHREADS	include/event2/event-config.h	202;"	d
EVENT__HAVE_PUTENV	include/event2/event-config.h	205;"	d
EVENT__HAVE_SA_FAMILY_T	include/event2/event-config.h	208;"	d
EVENT__HAVE_SELECT	include/event2/event-config.h	211;"	d
EVENT__HAVE_SENDFILE	include/event2/event-config.h	214;"	d
EVENT__HAVE_SETENV	include/event2/event-config.h	217;"	d
EVENT__HAVE_SETFD	include/event2/event-config.h	220;"	d
EVENT__HAVE_SETRLIMIT	include/event2/event-config.h	223;"	d
EVENT__HAVE_SIGACTION	include/event2/event-config.h	226;"	d
EVENT__HAVE_SIGNAL	WIN32-Code/nmake/event2/event-config.h	137;"	d
EVENT__HAVE_SIGNAL	include/event2/event-config.h	229;"	d
EVENT__HAVE_SPLICE	include/event2/event-config.h	232;"	d
EVENT__HAVE_STDARG_H	WIN32-Code/nmake/event2/event-config.h	143;"	d
EVENT__HAVE_STDARG_H	include/event2/event-config.h	235;"	d
EVENT__HAVE_STDDEF_H	WIN32-Code/nmake/event2/event-config.h	146;"	d
EVENT__HAVE_STDDEF_H	include/event2/event-config.h	238;"	d
EVENT__HAVE_STDINT_H	include/event2/event-config.h	241;"	d
EVENT__HAVE_STDLIB_H	WIN32-Code/nmake/event2/event-config.h	152;"	d
EVENT__HAVE_STDLIB_H	include/event2/event-config.h	244;"	d
EVENT__HAVE_STRINGS_H	WIN32-Code/nmake/event2/event-config.h	155;"	d
EVENT__HAVE_STRINGS_H	include/event2/event-config.h	247;"	d
EVENT__HAVE_STRING_H	WIN32-Code/nmake/event2/event-config.h	158;"	d
EVENT__HAVE_STRING_H	include/event2/event-config.h	250;"	d
EVENT__HAVE_STRSEP	include/event2/event-config.h	256;"	d
EVENT__HAVE_STRTOK_R	include/event2/event-config.h	259;"	d
EVENT__HAVE_STRTOLL	include/event2/event-config.h	262;"	d
EVENT__HAVE_STRUCT_ADDRINFO	WIN32-Code/nmake/event2/event-config.h	172;"	d
EVENT__HAVE_STRUCT_ADDRINFO	include/event2/event-config.h	265;"	d
EVENT__HAVE_STRUCT_IN6_ADDR	WIN32-Code/nmake/event2/event-config.h	175;"	d
EVENT__HAVE_STRUCT_IN6_ADDR	include/event2/event-config.h	268;"	d
EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR16	WIN32-Code/nmake/event2/event-config.h	178;"	d
EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR16	include/event2/event-config.h	271;"	d
EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR32	WIN32-Code/nmake/event2/event-config.h	181;"	d
EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR32	include/event2/event-config.h	274;"	d
EVENT__HAVE_STRUCT_SOCKADDR_IN6	WIN32-Code/nmake/event2/event-config.h	184;"	d
EVENT__HAVE_STRUCT_SOCKADDR_IN6	include/event2/event-config.h	277;"	d
EVENT__HAVE_STRUCT_SOCKADDR_STORAGE	WIN32-Code/nmake/event2/event-config.h	193;"	d
EVENT__HAVE_STRUCT_SOCKADDR_STORAGE	include/event2/event-config.h	286;"	d
EVENT__HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY	include/event2/event-config.h	289;"	d
EVENT__HAVE_SYSCTL	include/event2/event-config.h	298;"	d
EVENT__HAVE_SYS_EPOLL_H	include/event2/event-config.h	304;"	d
EVENT__HAVE_SYS_EVENTFD_H	include/event2/event-config.h	307;"	d
EVENT__HAVE_SYS_IOCTL_H	include/event2/event-config.h	313;"	d
EVENT__HAVE_SYS_MMAN_H	include/event2/event-config.h	316;"	d
EVENT__HAVE_SYS_PARAM_H	include/event2/event-config.h	319;"	d
EVENT__HAVE_SYS_RESOURCE_H	include/event2/event-config.h	325;"	d
EVENT__HAVE_SYS_SELECT_H	include/event2/event-config.h	328;"	d
EVENT__HAVE_SYS_SENDFILE_H	include/event2/event-config.h	331;"	d
EVENT__HAVE_SYS_SOCKET_H	include/event2/event-config.h	334;"	d
EVENT__HAVE_SYS_STAT_H	WIN32-Code/nmake/event2/event-config.h	229;"	d
EVENT__HAVE_SYS_STAT_H	include/event2/event-config.h	337;"	d
EVENT__HAVE_SYS_SYSCTL_H	include/event2/event-config.h	340;"	d
EVENT__HAVE_SYS_TIMERFD_H	include/event2/event-config.h	343;"	d
EVENT__HAVE_SYS_TIME_H	include/event2/event-config.h	346;"	d
EVENT__HAVE_SYS_TYPES_H	WIN32-Code/nmake/event2/event-config.h	235;"	d
EVENT__HAVE_SYS_TYPES_H	include/event2/event-config.h	349;"	d
EVENT__HAVE_SYS_UIO_H	include/event2/event-config.h	352;"	d
EVENT__HAVE_SYS_WAIT_H	include/event2/event-config.h	355;"	d
EVENT__HAVE_TIMERADD	include/event2/event-config.h	361;"	d
EVENT__HAVE_TIMERCLEAR	WIN32-Code/nmake/event2/event-config.h	247;"	d
EVENT__HAVE_TIMERCLEAR	include/event2/event-config.h	364;"	d
EVENT__HAVE_TIMERCMP	WIN32-Code/nmake/event2/event-config.h	250;"	d
EVENT__HAVE_TIMERCMP	include/event2/event-config.h	367;"	d
EVENT__HAVE_TIMERFD_CREATE	include/event2/event-config.h	370;"	d
EVENT__HAVE_TIMERISSET	WIN32-Code/nmake/event2/event-config.h	253;"	d
EVENT__HAVE_TIMERISSET	include/event2/event-config.h	373;"	d
EVENT__HAVE_UINT16_T	include/event2/event-config.h	376;"	d
EVENT__HAVE_UINT32_T	include/event2/event-config.h	379;"	d
EVENT__HAVE_UINT64_T	include/event2/event-config.h	382;"	d
EVENT__HAVE_UINT8_T	include/event2/event-config.h	385;"	d
EVENT__HAVE_UINTPTR_T	include/event2/event-config.h	388;"	d
EVENT__HAVE_UMASK	include/event2/event-config.h	391;"	d
EVENT__HAVE_UNISTD_H	include/event2/event-config.h	394;"	d
EVENT__HAVE_UNSETENV	include/event2/event-config.h	397;"	d
EVENT__HAVE_USLEEP	include/event2/event-config.h	400;"	d
EVENT__HAVE_VASPRINTF	include/event2/event-config.h	403;"	d
EVENT__HAVE_ZLIB_H	include/event2/event-config.h	412;"	d
EVENT__LT_OBJDIR	include/event2/event-config.h	415;"	d
EVENT__NUMERIC_VERSION	WIN32-Code/nmake/event2/event-config.h	277;"	d
EVENT__NUMERIC_VERSION	include/event2/event-config.h	418;"	d
EVENT__PACKAGE	WIN32-Code/nmake/event2/event-config.h	280;"	d
EVENT__PACKAGE	include/event2/event-config.h	421;"	d
EVENT__PACKAGE_BUGREPORT	WIN32-Code/nmake/event2/event-config.h	283;"	d
EVENT__PACKAGE_BUGREPORT	include/event2/event-config.h	424;"	d
EVENT__PACKAGE_NAME	WIN32-Code/nmake/event2/event-config.h	286;"	d
EVENT__PACKAGE_NAME	include/event2/event-config.h	427;"	d
EVENT__PACKAGE_STRING	WIN32-Code/nmake/event2/event-config.h	289;"	d
EVENT__PACKAGE_STRING	include/event2/event-config.h	430;"	d
EVENT__PACKAGE_TARNAME	WIN32-Code/nmake/event2/event-config.h	292;"	d
EVENT__PACKAGE_TARNAME	include/event2/event-config.h	433;"	d
EVENT__PACKAGE_URL	include/event2/event-config.h	436;"	d
EVENT__PACKAGE_VERSION	WIN32-Code/nmake/event2/event-config.h	295;"	d
EVENT__PACKAGE_VERSION	include/event2/event-config.h	439;"	d
EVENT__SIZEOF_INT	WIN32-Code/nmake/event2/event-config.h	302;"	d
EVENT__SIZEOF_INT	include/event2/event-config.h	446;"	d
EVENT__SIZEOF_LONG	WIN32-Code/nmake/event2/event-config.h	305;"	d
EVENT__SIZEOF_LONG	include/event2/event-config.h	449;"	d
EVENT__SIZEOF_LONG_LONG	WIN32-Code/nmake/event2/event-config.h	308;"	d
EVENT__SIZEOF_LONG_LONG	include/event2/event-config.h	452;"	d
EVENT__SIZEOF_OFF_T	include/event2/event-config.h	455;"	d
EVENT__SIZEOF_PTHREAD_T	include/event2/event-config.h	458;"	d
EVENT__SIZEOF_SHORT	WIN32-Code/nmake/event2/event-config.h	311;"	d
EVENT__SIZEOF_SHORT	include/event2/event-config.h	461;"	d
EVENT__SIZEOF_SIZE_T	WIN32-Code/nmake/event2/event-config.h	315;"	d
EVENT__SIZEOF_SIZE_T	WIN32-Code/nmake/event2/event-config.h	317;"	d
EVENT__SIZEOF_SIZE_T	include/event2/event-config.h	464;"	d
EVENT__SIZEOF_VOID_P	WIN32-Code/nmake/event2/event-config.h	322;"	d
EVENT__SIZEOF_VOID_P	WIN32-Code/nmake/event2/event-config.h	324;"	d
EVENT__SIZEOF_VOID_P	include/event2/event-config.h	467;"	d
EVENT__SIZEOF_VOID_P	include/event2/util.h	84;"	d
EVENT__STDC_HEADERS	WIN32-Code/nmake/event2/event-config.h	328;"	d
EVENT__STDC_HEADERS	include/event2/event-config.h	470;"	d
EVENT__TIME_WITH_SYS_TIME	WIN32-Code/nmake/event2/event-config.h	331;"	d
EVENT__TIME_WITH_SYS_TIME	include/event2/event-config.h	473;"	d
EVENT__VERSION	WIN32-Code/nmake/event2/event-config.h	334;"	d
EVENT__VERSION	include/event2/event-config.h	498;"	d
EVENT___ALL_SOURCE	include/event2/event-config.h	477;"	d
EVENT___DARWIN_USE_64_BIT_INODE	include/event2/event-config.h	502;"	d
EVENT___GNU_SOURCE	include/event2/event-config.h	481;"	d
EVENT___POSIX_PTHREAD_SEMANTICS	include/event2/event-config.h	485;"	d
EVENT___TANDEM_SOURCE	include/event2/event-config.h	489;"	d
EVENT____EXTENSIONS__	include/event2/event-config.h	493;"	d
EVENT____func__	WIN32-Code/nmake/event2/event-config.h	337;"	d
EVENT__inline	WIN32-Code/nmake/event2/event-config.h	345;"	d
EVENT__socklen_t	WIN32-Code/nmake/event2/event-config.h	355;"	d
EVENT__ssize_t	WIN32-Code/nmake/event2/event-config.h	358;"	d
EVHTTP_CON_AUTOFREE	http-internal.h	78;"	d
EVHTTP_CON_CLOSEDETECT	http-internal.h	76;"	d
EVHTTP_CON_INCOMING	http-internal.h	74;"	d
EVHTTP_CON_LINGERING_CLOSE	include/event2/http.h	660;"	d
EVHTTP_CON_OUTGOING	http-internal.h	75;"	d
EVHTTP_CON_PUBLIC_FLAGS_END	include/event2/http.h	662;"	d
EVHTTP_CON_READING_ERROR	http-internal.h	81;"	d
EVHTTP_CON_READ_ON_WRITE_ERROR	include/event2/http.h	658;"	d
EVHTTP_CON_REUSE_CONNECTED_ADDR	include/event2/http.h	654;"	d
EVHTTP_PROXY_REQUEST	include/event2/http_struct.h	73;"	d
EVHTTP_REQUEST	include/event2/http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	e	enum:evhttp_request_kind
EVHTTP_REQ_CONNECT	include/event2/http.h	/^	EVHTTP_REQ_CONNECT = 1 << 7,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_DEFER_FREE	include/event2/http_struct.h	77;"	d
EVHTTP_REQ_DELETE	include/event2/http.h	/^	EVHTTP_REQ_DELETE  = 1 << 4,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_GET	include/event2/http.h	/^	EVHTTP_REQ_GET     = 1 << 0,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_HEAD	include/event2/http.h	/^	EVHTTP_REQ_HEAD    = 1 << 2,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_NEEDS_FREE	include/event2/http_struct.h	79;"	d
EVHTTP_REQ_OPTIONS	include/event2/http.h	/^	EVHTTP_REQ_OPTIONS = 1 << 5,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_OWN_CONNECTION	include/event2/http_struct.h	71;"	d
EVHTTP_REQ_PATCH	include/event2/http.h	/^	EVHTTP_REQ_PATCH   = 1 << 8$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_POST	include/event2/http.h	/^	EVHTTP_REQ_POST    = 1 << 1,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_PUT	include/event2/http.h	/^	EVHTTP_REQ_PUT     = 1 << 3,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_TRACE	include/event2/http.h	/^	EVHTTP_REQ_TRACE   = 1 << 6,$/;"	e	enum:evhttp_cmd_type
EVHTTP_REQ_UNKNOWN_	http-internal.h	37;"	d
EVHTTP_RESPONSE	include/event2/http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	e	enum:evhttp_request_kind
EVHTTP_SERVER_LINGERING_CLOSE	include/event2/http.h	378;"	d
EVHTTP_URI_NONCONFORMANT	include/event2/http.h	1153;"	d
EVHTTP_USER_OWNED	include/event2/http_struct.h	75;"	d
EVLIST_ACTIVE	include/event2/event_struct.h	65;"	d
EVLIST_ACTIVE_LATER	include/event2/event_struct.h	69;"	d
EVLIST_ALL	include/event2/event_struct.h	75;"	d
EVLIST_FINALIZING	include/event2/event_struct.h	71;"	d
EVLIST_INIT	include/event2/event_struct.h	73;"	d
EVLIST_INSERTED	include/event2/event_struct.h	60;"	d
EVLIST_INTERNAL	include/event2/event_struct.h	67;"	d
EVLIST_SIGNAL	include/event2/event_struct.h	62;"	d
EVLIST_TIMEOUT	include/event2/event_struct.h	58;"	d
EVLOCK_ASSERT_LOCKED	evthread-internal.h	126;"	d
EVLOCK_ASSERT_LOCKED	evthread-internal.h	240;"	d
EVLOCK_ASSERT_LOCKED	evthread-internal.h	309;"	d
EVLOCK_LOCK	evthread-internal.h	214;"	d
EVLOCK_LOCK	evthread-internal.h	300;"	d
EVLOCK_LOCK	evthread-internal.h	90;"	d
EVLOCK_LOCK2	evthread-internal.h	302;"	d
EVLOCK_LOCK2	evthread-internal.h	338;"	d
EVLOCK_SORTLOCKS_	evthread-internal.h	104;"	d
EVLOCK_SORTLOCKS_	evthread-internal.h	327;"	d
EVLOCK_TRY_LOCK_	evthread-internal.h	/^EVLOCK_TRY_LOCK_(void *lock)$/;"	f
EVLOCK_TRY_LOCK_	evthread-internal.h	311;"	d
EVLOCK_UNLOCK	evthread-internal.h	221;"	d
EVLOCK_UNLOCK	evthread-internal.h	301;"	d
EVLOCK_UNLOCK	evthread-internal.h	97;"	d
EVLOCK_UNLOCK2	evthread-internal.h	303;"	d
EVLOCK_UNLOCK2	evthread-internal.h	348;"	d
EVLOOP_NONBLOCK	include/event2/event.h	832;"	d
EVLOOP_NO_EXIT_ON_EMPTY	include/event2/event.h	838;"	d
EVLOOP_ONCE	include/event2/event.h	828;"	d
EVMAP_INTERNAL_H_INCLUDED_	evmap-internal.h	27;"	d
EVMAP_USE_HT	event-internal.h	164;"	d
EVREQ_HTTP_BUFFER_ERROR	include/event2/http.h	/^  EVREQ_HTTP_BUFFER_ERROR,$/;"	e	enum:evhttp_request_error
EVREQ_HTTP_DATA_TOO_LONG	include/event2/http.h	/^  EVREQ_HTTP_DATA_TOO_LONG$/;"	e	enum:evhttp_request_error
EVREQ_HTTP_EOF	include/event2/http.h	/^  EVREQ_HTTP_EOF,$/;"	e	enum:evhttp_request_error
EVREQ_HTTP_INVALID_HEADER	include/event2/http.h	/^  EVREQ_HTTP_INVALID_HEADER,$/;"	e	enum:evhttp_request_error
EVREQ_HTTP_REQUEST_CANCEL	include/event2/http.h	/^  EVREQ_HTTP_REQUEST_CANCEL,$/;"	e	enum:evhttp_request_error
EVREQ_HTTP_TIMEOUT	include/event2/http.h	/^  EVREQ_HTTP_TIMEOUT,$/;"	e	enum:evhttp_request_error
EVRPC_CONTINUE	include/event2/rpc.h	/^	EVRPC_CONTINUE = 0,	\/**< continue processing the rpc *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_GENERATE	include/event2/rpc.h	233;"	d
EVRPC_HEADER	include/event2/rpc.h	172;"	d
EVRPC_HOOK_RESULT	include/event2/rpc.h	/^enum EVRPC_HOOK_RESULT {$/;"	g
EVRPC_HOOK_TYPE	include/event2/rpc.h	/^enum EVRPC_HOOK_TYPE {$/;"	g
EVRPC_INPUT	include/event2/rpc.h	/^	EVRPC_INPUT,		\/**< apply the function to an input hook *\/$/;"	e	enum:EVRPC_HOOK_TYPE
EVRPC_INTERNAL_H_INCLUDED_	evrpc-internal.h	28;"	d
EVRPC_MAKE_CTX	include/event2/rpc.h	213;"	d
EVRPC_MAKE_REQUEST	include/event2/rpc.h	374;"	d
EVRPC_OUTPUT	include/event2/rpc.h	/^	EVRPC_OUTPUT		\/**< apply the function to an output hook *\/$/;"	e	enum:EVRPC_HOOK_TYPE
EVRPC_PAUSE	include/event2/rpc.h	/^	EVRPC_PAUSE = 1		\/**< pause processing request until resumed *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_REGISTER	include/event2/rpc.h	319;"	d
EVRPC_REQUEST_DONE	include/event2/rpc.h	274;"	d
EVRPC_REQUEST_HTTP	include/event2/rpc.h	257;"	d
EVRPC_STATUS_ERR_BADPAYLOAD	include/event2/rpc_struct.h	47;"	d
EVRPC_STATUS_ERR_HOOKABORTED	include/event2/rpc_struct.h	49;"	d
EVRPC_STATUS_ERR_NONE	include/event2/rpc_struct.h	45;"	d
EVRPC_STATUS_ERR_TIMEOUT	include/event2/rpc_struct.h	46;"	d
EVRPC_STATUS_ERR_UNSTARTED	include/event2/rpc_struct.h	48;"	d
EVRPC_STRUCT	include/event2/rpc.h	155;"	d
EVRPC_STRUCT	test/regress_rpc.c	/^MessageCb(EVRPC_STRUCT(Message)* rpc, void *arg)$/;"	f	file:
EVRPC_STRUCT	test/regress_rpc.c	/^NeverReplyCb(EVRPC_STRUCT(NeverReply)* rpc, void *arg)$/;"	f	file:
EVRPC_TERMINATE	include/event2/rpc.h	/^	EVRPC_TERMINATE = -1,	\/**< indicates the rpc should be terminated *\/$/;"	e	enum:EVRPC_HOOK_RESULT
EVRPC_UNREGISTER	include/event2/rpc.h	348;"	d
EVRPC_URI_PREFIX	evrpc-internal.h	36;"	d
EVSIGBASE_LOCK	signal.c	119;"	d	file:
EVSIGBASE_UNLOCK	signal.c	120;"	d	file:
EVSIGNAL_INTERNAL_H_INCLUDED_	evsignal-internal.h	28;"	d
EVTAG_ADD	include/event2/rpc_compat.h	46;"	d
EVTAG_ADD	include/event2/rpc_compat.h	52;"	d
EVTAG_ARRAY_ADD	include/event2/rpc.h	132;"	d
EVTAG_ARRAY_ADD_VALUE	include/event2/rpc.h	127;"	d
EVTAG_ARRAY_GET	include/event2/rpc.h	137;"	d
EVTAG_ARRAY_LEN	include/event2/rpc.h	142;"	d
EVTAG_ASSIGN	include/event2/rpc.h	88;"	d
EVTAG_ASSIGN	include/event2/rpc_compat.h	44;"	d
EVTAG_ASSIGN	include/event2/rpc_compat.h	48;"	d
EVTAG_ASSIGN_WITH_LEN	include/event2/rpc.h	98;"	d
EVTAG_GET	include/event2/rpc.h	108;"	d
EVTAG_GET	include/event2/rpc_compat.h	45;"	d
EVTAG_GET	include/event2/rpc_compat.h	50;"	d
EVTAG_GET_WITH_LEN	include/event2/rpc.h	119;"	d
EVTAG_HAS	include/event2/rpc.h	76;"	d
EVTAG_LEN	include/event2/rpc_compat.h	55;"	d
EVTHREAD_ALLOC_COND	evthread-internal.h	150;"	d
EVTHREAD_ALLOC_COND	evthread-internal.h	264;"	d
EVTHREAD_ALLOC_COND	evthread-internal.h	313;"	d
EVTHREAD_ALLOC_LOCK	evthread-internal.h	203;"	d
EVTHREAD_ALLOC_LOCK	evthread-internal.h	297;"	d
EVTHREAD_ALLOC_LOCK	evthread-internal.h	77;"	d
EVTHREAD_CONDITION_API_VERSION	include/event2/thread.h	159;"	d
EVTHREAD_COND_BROADCAST	evthread-internal.h	165;"	d
EVTHREAD_COND_BROADCAST	evthread-internal.h	278;"	d
EVTHREAD_COND_BROADCAST	evthread-internal.h	316;"	d
EVTHREAD_COND_SIGNAL	evthread-internal.h	162;"	d
EVTHREAD_COND_SIGNAL	evthread-internal.h	275;"	d
EVTHREAD_COND_SIGNAL	evthread-internal.h	315;"	d
EVTHREAD_COND_WAIT	evthread-internal.h	171;"	d
EVTHREAD_COND_WAIT	evthread-internal.h	284;"	d
EVTHREAD_COND_WAIT	evthread-internal.h	317;"	d
EVTHREAD_COND_WAIT_TIMED	evthread-internal.h	175;"	d
EVTHREAD_COND_WAIT_TIMED	evthread-internal.h	288;"	d
EVTHREAD_COND_WAIT_TIMED	evthread-internal.h	318;"	d
EVTHREAD_EXPOSE_STRUCTS	evthread-internal.h	46;"	d
EVTHREAD_FREE_COND	evthread-internal.h	156;"	d
EVTHREAD_FREE_COND	evthread-internal.h	269;"	d
EVTHREAD_FREE_COND	evthread-internal.h	314;"	d
EVTHREAD_FREE_LOCK	evthread-internal.h	206;"	d
EVTHREAD_FREE_LOCK	evthread-internal.h	298;"	d
EVTHREAD_FREE_LOCK	evthread-internal.h	82;"	d
EVTHREAD_GET_ID	evthread-internal.h	196;"	d
EVTHREAD_GET_ID	evthread-internal.h	296;"	d
EVTHREAD_GET_ID	evthread-internal.h	58;"	d
EVTHREAD_INTERNAL_H_INCLUDED_	evthread-internal.h	27;"	d
EVTHREAD_LOCKING_ENABLED	evthread-internal.h	179;"	d
EVTHREAD_LOCKING_ENABLED	evthread-internal.h	291;"	d
EVTHREAD_LOCKING_ENABLED	evthread-internal.h	320;"	d
EVTHREAD_LOCKTYPE_READWRITE	include/event2/thread.h	98;"	d
EVTHREAD_LOCKTYPE_RECURSIVE	include/event2/thread.h	94;"	d
EVTHREAD_LOCK_API_VERSION	include/event2/thread.h	84;"	d
EVTHREAD_READ	include/event2/thread.h	74;"	d
EVTHREAD_SETUP_GLOBAL_LOCK	evthread-internal.h	364;"	d
EVTHREAD_TRY	include/event2/thread.h	79;"	d
EVTHREAD_USE_PTHREADS_IMPLEMENTED	include/event2/thread.h	249;"	d
EVTHREAD_USE_WINDOWS_THREADS_IMPLEMENTED	include/event2/thread.h	237;"	d
EVTHREAD_WRITE	include/event2/thread.h	70;"	d
EVUTIL_AI_ADDRCONFIG	include/event2/util.h	797;"	d
EVUTIL_AI_ADDRCONFIG	include/event2/util.h	799;"	d
EVUTIL_AI_ALL	include/event2/util.h	792;"	d
EVUTIL_AI_ALL	include/event2/util.h	794;"	d
EVUTIL_AI_CANONNAME	include/event2/util.h	768;"	d
EVUTIL_AI_CANONNAME	include/event2/util.h	770;"	d
EVUTIL_AI_LIBEVENT_ALLOCATED	evutil.c	802;"	d	file:
EVUTIL_AI_NUMERICHOST	include/event2/util.h	774;"	d
EVUTIL_AI_NUMERICHOST	include/event2/util.h	776;"	d
EVUTIL_AI_NUMERICSERV	include/event2/util.h	780;"	d
EVUTIL_AI_NUMERICSERV	include/event2/util.h	782;"	d
EVUTIL_AI_PASSIVE	include/event2/util.h	762;"	d
EVUTIL_AI_PASSIVE	include/event2/util.h	764;"	d
EVUTIL_AI_V4MAPPED	include/event2/util.h	786;"	d
EVUTIL_AI_V4MAPPED	include/event2/util.h	788;"	d
EVUTIL_ASSERT	util-internal.h	316;"	d
EVUTIL_ASSERT	util-internal.h	319;"	d
EVUTIL_ASSERT_LIST_OK	util-internal.h	151;"	d
EVUTIL_ASSERT_TAILQ_OK	util-internal.h	187;"	d
EVUTIL_CLOSESOCKET	include/event2/util.h	449;"	d
EVUTIL_EAI_ADDRFAMILY	include/event2/util.h	690;"	d
EVUTIL_EAI_ADDRFAMILY	include/event2/util.h	692;"	d
EVUTIL_EAI_AGAIN	include/event2/util.h	696;"	d
EVUTIL_EAI_AGAIN	include/event2/util.h	698;"	d
EVUTIL_EAI_BADFLAGS	include/event2/util.h	702;"	d
EVUTIL_EAI_BADFLAGS	include/event2/util.h	704;"	d
EVUTIL_EAI_CANCEL	include/event2/util.h	758;"	d
EVUTIL_EAI_FAIL	include/event2/util.h	708;"	d
EVUTIL_EAI_FAIL	include/event2/util.h	710;"	d
EVUTIL_EAI_FAMILY	include/event2/util.h	714;"	d
EVUTIL_EAI_FAMILY	include/event2/util.h	716;"	d
EVUTIL_EAI_MEMORY	include/event2/util.h	720;"	d
EVUTIL_EAI_MEMORY	include/event2/util.h	722;"	d
EVUTIL_EAI_NEED_RESOLVE	util-internal.h	354;"	d
EVUTIL_EAI_NODATA	include/event2/util.h	729;"	d
EVUTIL_EAI_NODATA	include/event2/util.h	731;"	d
EVUTIL_EAI_NONAME	include/event2/util.h	734;"	d
EVUTIL_EAI_NONAME	include/event2/util.h	736;"	d
EVUTIL_EAI_SERVICE	include/event2/util.h	740;"	d
EVUTIL_EAI_SERVICE	include/event2/util.h	742;"	d
EVUTIL_EAI_SOCKTYPE	include/event2/util.h	746;"	d
EVUTIL_EAI_SOCKTYPE	include/event2/util.h	748;"	d
EVUTIL_EAI_SYSTEM	include/event2/util.h	752;"	d
EVUTIL_EAI_SYSTEM	include/event2/util.h	754;"	d
EVUTIL_EFD_CLOEXEC	util-internal.h	475;"	d
EVUTIL_EFD_CLOEXEC	util-internal.h	477;"	d
EVUTIL_EFD_NONBLOCK	util-internal.h	470;"	d
EVUTIL_EFD_NONBLOCK	util-internal.h	472;"	d
EVUTIL_ERR_ACCEPT_RETRIABLE	util-internal.h	120;"	d
EVUTIL_ERR_ACCEPT_RETRIABLE	util-internal.h	97;"	d
EVUTIL_ERR_CONNECT_REFUSED	util-internal.h	101;"	d
EVUTIL_ERR_CONNECT_REFUSED	util-internal.h	123;"	d
EVUTIL_ERR_CONNECT_RETRIABLE	util-internal.h	114;"	d
EVUTIL_ERR_CONNECT_RETRIABLE	util-internal.h	94;"	d
EVUTIL_ERR_IS_EAGAIN	util-internal.h	107;"	d
EVUTIL_ERR_IS_EAGAIN	util-internal.h	83;"	d
EVUTIL_ERR_IS_EAGAIN	util-internal.h	86;"	d
EVUTIL_ERR_RW_RETRIABLE	util-internal.h	110;"	d
EVUTIL_ERR_RW_RETRIABLE	util-internal.h	91;"	d
EVUTIL_FAILURE_CHECK	util-internal.h	317;"	d
EVUTIL_FAILURE_CHECK	util-internal.h	333;"	d
EVUTIL_ISALNUM_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISALNUM_TABLE[8] =$/;"	v	file:
EVUTIL_ISALPHA_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISALPHA_TABLE[8] =$/;"	v	file:
EVUTIL_ISDIGIT_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISDIGIT_TABLE[8] = { 0, 0x3ff0000, 0, 0, 0, 0, 0, 0 };$/;"	v	file:
EVUTIL_ISLOWER_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISLOWER_TABLE[8] = { 0, 0, 0, 0x7fffffe, 0, 0, 0, 0 };$/;"	v	file:
EVUTIL_ISPRINT_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISPRINT_TABLE[8] =$/;"	v	file:
EVUTIL_ISSPACE_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISSPACE_TABLE[8] = { 0x3e00, 0x1, 0, 0, 0, 0, 0, 0 };$/;"	v	file:
EVUTIL_ISUPPER_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISUPPER_TABLE[8] = { 0, 0, 0x7fffffe, 0, 0, 0, 0, 0 };$/;"	v	file:
EVUTIL_ISXDIGIT_TABLE	evutil.c	/^static const ev_uint32_t EVUTIL_ISXDIGIT_TABLE[8] =$/;"	v	file:
EVUTIL_NIL_CONDITION_	util-internal.h	68;"	d
EVUTIL_NIL_STMT_	util-internal.h	62;"	d
EVUTIL_SET_SOCKET_ERROR	include/event2/util.h	469;"	d
EVUTIL_SET_SOCKET_ERROR	include/event2/util.h	495;"	d
EVUTIL_SET_SOCKET_ERROR	include/event2/util.h	503;"	d
EVUTIL_SHUT_BOTH	util-internal.h	140;"	d
EVUTIL_SHUT_BOTH	util-internal.h	142;"	d
EVUTIL_SHUT_RD	util-internal.h	130;"	d
EVUTIL_SHUT_RD	util-internal.h	132;"	d
EVUTIL_SHUT_WR	util-internal.h	135;"	d
EVUTIL_SHUT_WR	util-internal.h	137;"	d
EVUTIL_SOCKET_ERROR	include/event2/util.h	467;"	d
EVUTIL_SOCKET_ERROR	include/event2/util.h	493;"	d
EVUTIL_SOCKET_ERROR	include/event2/util.h	502;"	d
EVUTIL_SOCK_CLOEXEC	util-internal.h	465;"	d
EVUTIL_SOCK_CLOEXEC	util-internal.h	467;"	d
EVUTIL_SOCK_NONBLOCK	util-internal.h	460;"	d
EVUTIL_SOCK_NONBLOCK	util-internal.h	462;"	d
EVUTIL_TOLOWER_TABLE	evutil.c	/^static const unsigned char EVUTIL_TOLOWER_TABLE[256] = {$/;"	v	file:
EVUTIL_TOUPPER_	evutil.c	/^char EVUTIL_TOUPPER_(char c)$/;"	f
EVUTIL_TOUPPER_TABLE	evutil.c	/^static const unsigned char EVUTIL_TOUPPER_TABLE[256] = {$/;"	v	file:
EVUTIL_UNLIKELY	util-internal.h	309;"	d
EVUTIL_UNLIKELY	util-internal.h	311;"	d
EVUTIL_UPCAST	util-internal.h	256;"	d
EVUTIL_V4ADDR_IS_CLASSD	evutil.c	614;"	d	file:
EVUTIL_V4ADDR_IS_LOCALHOST	evutil.c	609;"	d	file:
EVUTIL_WEAKRAND_MAX	util-internal.h	284;"	d
EV_CHANGE_ADD	changelist-internal.h	85;"	d
EV_CHANGE_DEL	changelist-internal.h	87;"	d
EV_CHANGE_ET	changelist-internal.h	93;"	d
EV_CHANGE_PERSIST	changelist-internal.h	91;"	d
EV_CHANGE_SIGNAL	changelist-internal.h	89;"	d
EV_CHECK_FMT	log-internal.h	33;"	d
EV_CHECK_FMT	log-internal.h	36;"	d
EV_CHECK_FMT	log-internal.h	82;"	d
EV_CLOSED	include/event2/event.h	1000;"	d
EV_CLOSURE_CB_FINALIZE	event-internal.h	87;"	d
EV_CLOSURE_CB_SELF	event-internal.h	84;"	d
EV_CLOSURE_EVENT	event-internal.h	75;"	d
EV_CLOSURE_EVENT_FINALIZE	event-internal.h	90;"	d
EV_CLOSURE_EVENT_FINALIZE_FREE	event-internal.h	94;"	d
EV_CLOSURE_EVENT_PERSIST	event-internal.h	81;"	d
EV_CLOSURE_EVENT_SIGNAL	event-internal.h	78;"	d
EV_ET	include/event2/event.h	976;"	d
EV_FEATURE_EARLY_CLOSE	include/event2/event.h	/^    EV_FEATURE_EARLY_CLOSE = 0x08$/;"	e	enum:event_method_feature
EV_FEATURE_ET	include/event2/event.h	/^    EV_FEATURE_ET = 0x01,$/;"	e	enum:event_method_feature
EV_FEATURE_FDS	include/event2/event.h	/^    EV_FEATURE_FDS = 0x04,$/;"	e	enum:event_method_feature
EV_FEATURE_O1	include/event2/event.h	/^    EV_FEATURE_O1 = 0x02,$/;"	e	enum:event_method_feature
EV_FINALIZE	include/event2/event.h	990;"	d
EV_I64_ARG	util-internal.h	409;"	d
EV_I64_ARG	util-internal.h	414;"	d
EV_I64_FMT	util-internal.h	408;"	d
EV_I64_FMT	util-internal.h	413;"	d
EV_INT16_MAX	include/event2/util.h	253;"	d
EV_INT16_MAX	include/event2/util.h	266;"	d
EV_INT16_MIN	include/event2/util.h	254;"	d
EV_INT32_MAX	include/event2/util.h	250;"	d
EV_INT32_MAX	include/event2/util.h	263;"	d
EV_INT32_MIN	include/event2/util.h	251;"	d
EV_INT32_MIN	include/event2/util.h	264;"	d
EV_INT64_MAX	include/event2/util.h	247;"	d
EV_INT64_MAX	include/event2/util.h	260;"	d
EV_INT64_MIN	include/event2/util.h	248;"	d
EV_INT64_MIN	include/event2/util.h	261;"	d
EV_INT8_MAX	include/event2/util.h	256;"	d
EV_INT8_MAX	include/event2/util.h	268;"	d
EV_INT8_MIN	include/event2/util.h	257;"	d
EV_INT8_MIN	include/event2/util.h	269;"	d
EV_LIB_GDI	Makefile	/^EV_LIB_GDI = $/;"	m
EV_LIB_WS32	Makefile	/^EV_LIB_WS32 = $/;"	m
EV_MONOT_FALLBACK	include/event2/util.h	338;"	d
EV_MONOT_PRECISE	include/event2/util.h	337;"	d
EV_NORETURN	log-internal.h	34;"	d
EV_NORETURN	log-internal.h	37;"	d
EV_PERSIST	include/event2/event.h	973;"	d
EV_RATE_LIMIT_MAX	include/event2/bufferevent.h	799;"	d
EV_READ	include/event2/event.h	959;"	d
EV_SIGNAL	include/event2/event.h	965;"	d
EV_SIZE_ARG	util-internal.h	431;"	d
EV_SIZE_ARG	util-internal.h	440;"	d
EV_SIZE_ARG	util-internal.h	445;"	d
EV_SIZE_FMT	util-internal.h	429;"	d
EV_SIZE_FMT	util-internal.h	438;"	d
EV_SIZE_FMT	util-internal.h	443;"	d
EV_SIZE_MAX	include/event2/util.h	280;"	d
EV_SIZE_MAX	include/event2/util.h	283;"	d
EV_SIZE_MAX	include/event2/util.h	286;"	d
EV_SOCK_ARG	util-internal.h	421;"	d
EV_SOCK_ARG	util-internal.h	424;"	d
EV_SOCK_FMT	util-internal.h	420;"	d
EV_SOCK_FMT	util-internal.h	423;"	d
EV_SSIZE_ARG	util-internal.h	432;"	d
EV_SSIZE_ARG	util-internal.h	441;"	d
EV_SSIZE_ARG	util-internal.h	446;"	d
EV_SSIZE_FMT	util-internal.h	430;"	d
EV_SSIZE_FMT	util-internal.h	439;"	d
EV_SSIZE_FMT	util-internal.h	444;"	d
EV_SSIZE_MAX	include/event2/util.h	281;"	d
EV_SSIZE_MAX	include/event2/util.h	284;"	d
EV_SSIZE_MAX	include/event2/util.h	287;"	d
EV_SSIZE_MIN	include/event2/util.h	292;"	d
EV_TIMEOUT	include/event2/event.h	956;"	d
EV_U64_ARG	util-internal.h	410;"	d
EV_U64_ARG	util-internal.h	415;"	d
EV_U64_FMT	util-internal.h	407;"	d
EV_U64_FMT	util-internal.h	412;"	d
EV_UINT16_MAX	include/event2/util.h	252;"	d
EV_UINT16_MAX	include/event2/util.h	265;"	d
EV_UINT32_MAX	include/event2/util.h	249;"	d
EV_UINT32_MAX	include/event2/util.h	262;"	d
EV_UINT64_MAX	include/event2/util.h	246;"	d
EV_UINT64_MAX	include/event2/util.h	259;"	d
EV_UINT8_MAX	include/event2/util.h	255;"	d
EV_UINT8_MAX	include/event2/util.h	267;"	d
EV_WRITE	include/event2/event.h	962;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXTRAS_SRC	Makefile	/^EXTRAS_SRC = \\$/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = ChangeLog-1.4 ChangeLog-2.0 Doxyfile LICENSE \\$/;"	m
EXTRA_PROGRAMS	Makefile	/^EXTRA_PROGRAMS = $(am__EXEEXT_1)$/;"	m
EXTRA_SOURCE	Makefile	/^EXTRA_SOURCE = $/;"	m
Entry	event_rpcgen.py	/^class Entry:$/;"	c
EntryArray	event_rpcgen.py	/^    def EntryArray(self, entry):$/;"	m	class:CCodeGenerator
EntryArray	event_rpcgen.py	/^class EntryArray(Entry):$/;"	c
EntryBytes	event_rpcgen.py	/^    def EntryBytes(self, entry_type, name, tag, fixed_length):$/;"	m	class:CCodeGenerator
EntryBytes	event_rpcgen.py	/^class EntryBytes(Entry):$/;"	c
EntryInt	event_rpcgen.py	/^    def EntryInt(self, entry_type, name, tag, bits=32):$/;"	m	class:CCodeGenerator
EntryInt	event_rpcgen.py	/^class EntryInt(Entry):$/;"	c
EntryString	event_rpcgen.py	/^    def EntryString(self, entry_type, name, tag):$/;"	m	class:CCodeGenerator
EntryString	event_rpcgen.py	/^class EntryString(Entry):$/;"	c
EntryStruct	event_rpcgen.py	/^    def EntryStruct(self, entry_type, name, tag, struct_name):$/;"	m	class:CCodeGenerator
EntryStruct	event_rpcgen.py	/^class EntryStruct(Entry):$/;"	c
EntryTagName	event_rpcgen.py	/^    def EntryTagName(self, entry):$/;"	m	class:Struct
EntryVarBytes	event_rpcgen.py	/^    def EntryVarBytes(self, entry_type, name, tag):$/;"	m	class:CCodeGenerator
EntryVarBytes	event_rpcgen.py	/^class EntryVarBytes(Entry):$/;"	c
Error	sample/openssl_hostname_validation.h	/^        Error$/;"	e	enum:__anon19
FAIL	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	e	enum:outcome	file:
FDINFO_OFFSET	evmap.c	187;"	d	file:
FDI_HAS_EVENTS	evport.c	100;"	d	file:
FDI_HAS_READ	evport.c	98;"	d	file:
FDI_HAS_WRITE	evport.c	99;"	d	file:
FDI_TO_SYSEVENTS	evport.c	101;"	d	file:
FD_SET_ALLOC_SIZE	win32select.c	101;"	d	file:
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FOREACH_RANDOM_ORDER	bufferevent_ratelim.c	477;"	d	file:
FORK_BREAKS_GCOV	test/regress_main.c	39;"	d	file:
FORK_BREAKS_GCOV	test/tinytest.c	48;"	d	file:
FREE	test/regress_bufferevent.c	/^		ALLOC, FREE,$/;"	e	enum:__anon2::__anon3	file:
FREEZE_EQ	test/regress_buffer.c	2303;"	d	file:
GAIC_MAGIC	test/regress_dns.c	1732;"	d	file:
GENERIC_LDFLAGS	Makefile	/^GENERIC_LDFLAGS = -version-info $(VERSION_INFO) $(RELEASE) $(NO_UNDEFINED)$/;"	m
GET16	evdns.c	1301;"	d	file:
GET16	evdns.c	965;"	d	file:
GET32	evdns.c	1300;"	d	file:
GET32	evdns.c	964;"	d	file:
GET8	evdns.c	1302;"	d	file:
GET8	evdns.c	966;"	d	file:
GET_IO_SLOT	evmap.c	113;"	d	file:
GET_IO_SLOT	evmap.c	184;"	d	file:
GET_IO_SLOT_AND_CTOR	evmap.c	121;"	d	file:
GET_IO_SLOT_AND_CTOR	evmap.c	185;"	d	file:
GET_SIGNAL_SLOT	evmap.c	161;"	d	file:
GET_SIGNAL_SLOT_AND_CTOR	evmap.c	168;"	d	file:
GLOBAL	evthread.c	43;"	d	file:
GLOBAL	evthread.c	45;"	d	file:
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GROUP_SUSPENDED	bufferevent_ratelim.c	209;"	d	file:
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GetAcceptExSockaddrs	iocp-internal.h	/^	GetAcceptExSockaddrsPtr GetAcceptExSockaddrs;$/;"	m	struct:win32_extension_fns
GetAcceptExSockaddrsPtr	iocp-internal.h	/^typedef void (WINAPI *GetAcceptExSockaddrsPtr)(PVOID, DWORD, DWORD, DWORD, LPSOCKADDR *, LPINT, LPSOCKADDR *, LPINT);$/;"	t
GetAdaptersAddresses_fn_t	evutil.c	/^typedef ULONG (WINAPI *GetAdaptersAddresses_fn_t)($/;"	t	file:
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:Entry
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:EntryArray
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:EntryBytes
GetDeclaration	event_rpcgen.py	/^    def GetDeclaration(self, funcname):$/;"	m	class:EntryVarBytes
GetFuncName	event_rpcgen.py	/^    def GetFuncName(self):$/;"	m	class:Entry
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:Entry
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryArray
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryBytes
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryInt
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryString
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryStruct
GetInitializer	event_rpcgen.py	/^    def GetInitializer(self):$/;"	m	class:EntryVarBytes
GetNetworkParams_fn_t	evdns.c	/^typedef DWORD(WINAPI *GetNetworkParams_fn_t)(FIXED_INFO *, DWORD*);$/;"	t	file:
GetNextStruct	event_rpcgen.py	/^def GetNextStruct(file):$/;"	f
GetTickCount64_fn	time-internal.h	/^	ev_GetTickCount_func GetTickCount64_fn;$/;"	m	struct:evutil_monotonic_timer
GetTickCount_fn	time-internal.h	/^	ev_GetTickCount_func GetTickCount_fn;$/;"	m	struct:evutil_monotonic_timer
GetTranslation	event_rpcgen.py	/^    def GetTranslation(self, extradict = {}):$/;"	m	class:Entry
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:Entry
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryBytes
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryString
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryStruct
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var):$/;"	m	class:EntryVarBytes
GetVarLen	event_rpcgen.py	/^    def GetVarLen(self, var_name):$/;"	m	class:EntryArray
GetVarName	event_rpcgen.py	/^        def GetVarName(var_name):$/;"	f	function:EntryArray.__init__
GetVarName	event_rpcgen.py	/^    def GetVarName(self, var):$/;"	m	class:Entry
GetVarName	event_rpcgen.py	/^    def GetVarName(self, var_name):$/;"	m	class:EntryArray
GotErrorCb	test/regress_rpc.c	/^GotErrorCb(struct evrpc_status *status,$/;"	f	file:
GotKillCb	test/regress_rpc.c	/^GotKillCb(struct evrpc_status *status,$/;"	f	file:
GotKillCbTwo	test/regress_rpc.c	/^GotKillCbTwo(struct evrpc_status *status,$/;"	f	file:
GuardName	event_rpcgen.py	/^    def GuardName(self, name):$/;"	m	class:CCodeGenerator
HAS_PINNED_R	buffer.c	/^HAS_PINNED_R(struct evbuffer *buf)$/;"	f	file:
HAVE_ACCEPT4	config.h	14;"	d
HAVE_ARPA_INET_H	config.h	23;"	d
HAVE_CLOCK_GETTIME	config.h	26;"	d
HAVE_DECL_CTL_KERN	config.h	30;"	d
HAVE_DECL_KERN_ARND	config.h	34;"	d
HAVE_DECL_KERN_RANDOM	config.h	38;"	d
HAVE_DECL_RANDOM_UUID	config.h	42;"	d
HAVE_DLFCN_H	config.h	48;"	d
HAVE_EPOLL	config.h	51;"	d
HAVE_EPOLL_CREATE1	config.h	54;"	d
HAVE_EPOLL_CTL	config.h	57;"	d
HAVE_ERRNO_H	config.h	60;"	d
HAVE_ERR_REMOVE_THREAD_STATE	config.h	63;"	d
HAVE_EVENTFD	config.h	66;"	d
HAVE_FALLBACK_MONOTONIC	time-internal.h	53;"	d
HAVE_FCNTL	config.h	72;"	d
HAVE_FCNTL_H	config.h	75;"	d
HAVE_FD_MASK	config.h	78;"	d
HAVE_GETADDRINFO	config.h	81;"	d
HAVE_GETEGID	config.h	84;"	d
HAVE_GETEUID	config.h	87;"	d
HAVE_GETIFADDRS	config.h	102;"	d
HAVE_GETNAMEINFO	config.h	105;"	d
HAVE_GETPROTOBYNUMBER	config.h	108;"	d
HAVE_GETSERVBYNAME	config.h	111;"	d
HAVE_GETTIMEOFDAY	config.h	114;"	d
HAVE_IFADDRS_H	config.h	117;"	d
HAVE_INET_NTOP	config.h	120;"	d
HAVE_INET_PTON	config.h	123;"	d
HAVE_INTTYPES_H	config.h	126;"	d
HAVE_LIBZ	config.h	135;"	d
HAVE_MACH_MONOTONIC	time-internal.h	49;"	d
HAVE_MEMORY_H	config.h	144;"	d
HAVE_MMAP	config.h	147;"	d
HAVE_NANOSLEEP	config.h	150;"	d
HAVE_NETDB_H	config.h	153;"	d
HAVE_NETINET_IN_H	config.h	159;"	d
HAVE_NETINET_TCP_H	config.h	162;"	d
HAVE_OPENSSL	config.h	165;"	d
HAVE_PIPE	config.h	168;"	d
HAVE_PIPE2	config.h	171;"	d
HAVE_POLL	config.h	174;"	d
HAVE_POLL_H	config.h	177;"	d
HAVE_POSIX_MONOTONIC	time-internal.h	47;"	d
HAVE_PTHREADS	config.h	189;"	d
HAVE_PUTENV	config.h	192;"	d
HAVE_SA_FAMILY_T	config.h	195;"	d
HAVE_SELECT	config.h	198;"	d
HAVE_SENDFILE	config.h	201;"	d
HAVE_SETENV	config.h	204;"	d
HAVE_SETFD	config.h	207;"	d
HAVE_SETRLIMIT	config.h	210;"	d
HAVE_SIGACTION	config.h	213;"	d
HAVE_SIGNAL	config.h	216;"	d
HAVE_SPLICE	config.h	219;"	d
HAVE_STDARG_H	config.h	222;"	d
HAVE_STDDEF_H	config.h	225;"	d
HAVE_STDINT_H	config.h	228;"	d
HAVE_STDLIB_H	config.h	231;"	d
HAVE_STRINGS_H	config.h	234;"	d
HAVE_STRING_H	config.h	237;"	d
HAVE_STRSEP	config.h	243;"	d
HAVE_STRTOK_R	config.h	246;"	d
HAVE_STRTOLL	config.h	249;"	d
HAVE_STRUCT_ADDRINFO	config.h	252;"	d
HAVE_STRUCT_IN6_ADDR	config.h	255;"	d
HAVE_STRUCT_IN6_ADDR_S6_ADDR16	config.h	258;"	d
HAVE_STRUCT_IN6_ADDR_S6_ADDR32	config.h	261;"	d
HAVE_STRUCT_SOCKADDR_IN6	config.h	264;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	config.h	273;"	d
HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY	config.h	276;"	d
HAVE_SYSCTL	config.h	285;"	d
HAVE_SYS_EPOLL_H	config.h	291;"	d
HAVE_SYS_EVENTFD_H	config.h	294;"	d
HAVE_SYS_IOCTL_H	config.h	300;"	d
HAVE_SYS_MMAN_H	config.h	303;"	d
HAVE_SYS_PARAM_H	config.h	306;"	d
HAVE_SYS_RESOURCE_H	config.h	312;"	d
HAVE_SYS_SELECT_H	config.h	315;"	d
HAVE_SYS_SENDFILE_H	config.h	318;"	d
HAVE_SYS_SOCKET_H	config.h	321;"	d
HAVE_SYS_STAT_H	config.h	324;"	d
HAVE_SYS_SYSCTL_H	config.h	327;"	d
HAVE_SYS_TIMERFD_H	config.h	330;"	d
HAVE_SYS_TIME_H	config.h	333;"	d
HAVE_SYS_TYPES_H	config.h	336;"	d
HAVE_SYS_UIO_H	config.h	339;"	d
HAVE_SYS_WAIT_H	config.h	342;"	d
HAVE_TIMERADD	config.h	348;"	d
HAVE_TIMERCLEAR	config.h	351;"	d
HAVE_TIMERCMP	config.h	354;"	d
HAVE_TIMERFD_CREATE	config.h	357;"	d
HAVE_TIMERISSET	config.h	360;"	d
HAVE_UINT16_T	config.h	363;"	d
HAVE_UINT32_T	config.h	366;"	d
HAVE_UINT64_T	config.h	369;"	d
HAVE_UINT8_T	config.h	372;"	d
HAVE_UINTPTR_T	config.h	375;"	d
HAVE_UMASK	config.h	378;"	d
HAVE_UNISTD_H	config.h	381;"	d
HAVE_UNSETENV	config.h	384;"	d
HAVE_USLEEP	config.h	387;"	d
HAVE_VASPRINTF	config.h	390;"	d
HAVE_WIN32_MONOTONIC	time-internal.h	51;"	d
HAVE_ZLIB_H	config.h	399;"	d
HEADERS	Makefile	/^HEADERS = $(include_HEADERS) $(include_event2_HEADERS) \\$/;"	m
HEADER_CURL_HOSTCHECK_H	sample/hostcheck.h	2;"	d
HOSTNAME_MAX_SIZE	sample/openssl_hostname_validation.c	49;"	d	file:
HOST_NAME_MAX	evdns.c	123;"	d	file:
HTTP	test/regress_http.c	4523;"	d	file:
HTTPS	test/regress_http.c	4524;"	d	file:
HTTP_BADMETHOD	include/event2/http.h	63;"	d
HTTP_BADREQUEST	include/event2/http.h	61;"	d
HTTP_BIND_IPV6	test/regress_http.c	86;"	d	file:
HTTP_BIND_SSL	test/regress_http.c	87;"	d	file:
HTTP_CAST_ARG	test/regress_http.c	4518;"	d	file:
HTTP_CONNECT_TIMEOUT	http-internal.h	17;"	d
HTTP_DEFAULTPORT	http-internal.h	22;"	d
HTTP_ENTITYTOOLARGE	include/event2/http.h	64;"	d
HTTP_EXPECTATIONFAILED	include/event2/http.h	65;"	d
HTTP_INTERNAL	include/event2/http.h	66;"	d
HTTP_INTERNAL_H_INCLUDED_	http-internal.h	11;"	d
HTTP_LEGACY	test/regress_http.c	4514;"	d	file:
HTTP_MOVEPERM	include/event2/http.h	58;"	d
HTTP_MOVETEMP	include/event2/http.h	59;"	d
HTTP_N	test/regress_http.c	4521;"	d	file:
HTTP_NOCONTENT	include/event2/http.h	57;"	d
HTTP_NOTFOUND	include/event2/http.h	62;"	d
HTTP_NOTIMPLEMENTED	include/event2/http.h	67;"	d
HTTP_NOTMODIFIED	include/event2/http.h	60;"	d
HTTP_OFF_N	test/regress_http.c	4519;"	d	file:
HTTP_OK	include/event2/http.h	56;"	d
HTTP_PREFIX	http-internal.h	21;"	d
HTTP_READ_TIMEOUT	http-internal.h	19;"	d
HTTP_SERVUNAVAIL	include/event2/http.h	68;"	d
HTTP_SSL_FILTER	test/regress_http.c	88;"	d	file:
HTTP_WRITE_TIMEOUT	http-internal.h	18;"	d
HT_BUCKET_	ht-internal.h	121;"	d
HT_CLEAR	ht-internal.h	59;"	d
HT_ELT_HASH_	ht-internal.h	109;"	d
HT_ELT_HASH_	ht-internal.h	114;"	d
HT_EMPTY	ht-internal.h	41;"	d
HT_ENTRY	ht-internal.h	29;"	d
HT_ENTRY	ht-internal.h	34;"	d
HT_FIND	ht-internal.h	52;"	d
HT_FIND_OR_INSERT_	ht-internal.h	425;"	d
HT_FOI_INSERT_	ht-internal.h	440;"	d
HT_FOREACH	ht-internal.h	124;"	d
HT_GENERATE	ht-internal.h	300;"	d
HT_HEAD	ht-internal.h	11;"	d
HT_INIT	ht-internal.h	60;"	d
HT_INITIALIZER	ht-internal.h	25;"	d
HT_INSERT	ht-internal.h	53;"	d
HT_INTERNAL_H_INCLUDED_	ht-internal.h	9;"	d
HT_MEM_USAGE	ht-internal.h	49;"	d
HT_NEXT	ht-internal.h	57;"	d
HT_NEXT_RMV	ht-internal.h	58;"	d
HT_NO_CACHE_HASH_VALUES	event-internal.h	170;"	d
HT_NO_CACHE_HASH_VALUES	event.c	68;"	d	file:
HT_NO_CACHE_HASH_VALUES	evutil.c	90;"	d	file:
HT_PROTOTYPE	evmap.c	/^HT_PROTOTYPE(event_io_map, event_map_entry, map_node, hashsocket, eqsocket)$/;"	f
HT_PROTOTYPE	ht-internal.h	129;"	d
HT_REMOVE	ht-internal.h	55;"	d
HT_REPLACE	ht-internal.h	54;"	d
HT_SET_HASHVAL_	ht-internal.h	107;"	d
HT_SET_HASHVAL_	ht-internal.h	116;"	d
HT_SET_HASH_	ht-internal.h	105;"	d
HT_SET_HASH_	ht-internal.h	112;"	d
HT_SIZE	ht-internal.h	45;"	d
HT_START	ht-internal.h	56;"	d
HeaderFilename	event_rpcgen.py	/^    def HeaderFilename(self, filename):$/;"	m	class:CCodeGenerator
HeaderPostamble	event_rpcgen.py	/^    def HeaderPostamble(self, name):$/;"	m	class:CCodeGenerator
HeaderPreamble	event_rpcgen.py	/^    def HeaderPreamble(self, name):$/;"	m	class:CCodeGenerator
HostnameValidationResult	sample/openssl_hostname_validation.h	/^} HostnameValidationResult;$/;"	t	typeref:enum:__anon19
I64_FMT	test/bench_httpclient.c	219;"	d	file:
I64_TYP	test/bench_httpclient.c	220;"	d	file:
IMPL_CTYPE_FN	evutil.c	/^IMPL_CTYPE_FN(ISALPHA)$/;"	f
IMPL_CTYPE_FN	evutil.c	2323;"	d	file:
IMPL_DBG_LEAK_RESUME	test/regress_dns.c	1945;"	d	file:
INACTIVE_SERVER	test/regress_http.c	/^	INACTIVE_SERVER = 8,$/;"	e	enum:http_cancel_test_type	file:
INCR_EVENT_COUNT	event.c	3574;"	d	file:
INITIAL_EVENTS_PER_GETN	evport.c	81;"	d	file:
INITIAL_NEVENT	epoll.c	134;"	d	file:
INPUT	include/event2/rpc.h	460;"	d
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT_TO_UDATA	kqueue.c	55;"	d	file:
INT_TO_UDATA	kqueue.c	58;"	d	file:
IOCP_INTERNAL_H_INCLUDED_	iocp-internal.h	28;"	d
IOV_LEN_FIELD	buffer.c	2385;"	d	file:
IOV_LEN_FIELD	buffer.c	2391;"	d	file:
IOV_LEN_TYPE	buffer.c	2386;"	d	file:
IOV_LEN_TYPE	buffer.c	2392;"	d	file:
IOV_PTR_FIELD	buffer.c	2384;"	d	file:
IOV_PTR_FIELD	buffer.c	2390;"	d	file:
IOV_TYPE	buffer.c	2383;"	d	file:
IOV_TYPE	buffer.c	2389;"	d	file:
IPV6_INTERNAL_H_INCLUDED_	ipv6-internal.h	31;"	d
InitializeConditionVariable_fn	evthread_win32.c	/^static void WINAPI (*InitializeConditionVariable_fn)(PCONDITION_VARIABLE)$/;"	v	file:
KEY	test/regress_ssl.c	/^static const char KEY[] =$/;"	v	file:
KQUEUE_INTERNAL_H_INCLUDED_	kqueue-internal.h	27;"	d
LD	Makefile	/^LD = \/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LEGACY	test/regress.h	105;"	d
LEV_OPT_CLOSE_ON_EXEC	include/event2/listener.h	71;"	d
LEV_OPT_CLOSE_ON_FREE	include/event2/listener.h	68;"	d
LEV_OPT_DEFERRED_ACCEPT	include/event2/listener.h	96;"	d
LEV_OPT_DISABLED	include/event2/listener.h	82;"	d
LEV_OPT_LEAVE_SOCKETS_BLOCKING	include/event2/listener.h	64;"	d
LEV_OPT_REUSEABLE	include/event2/listener.h	75;"	d
LEV_OPT_REUSEABLE_PORT	include/event2/listener.h	105;"	d
LEV_OPT_THREADSAFE	include/event2/listener.h	79;"	d
LIBEVENT_GC_SECTIONS	Makefile	/^LIBEVENT_GC_SECTIONS = $/;"	m
LIBEVENT_LIBS_LA	Makefile	/^LIBEVENT_LIBS_LA = libevent.la libevent_core.la libevent_extra.la \\$/;"	m
LIBEVENT_PKGCONFIG	Makefile	/^LIBEVENT_PKGCONFIG = libevent.pc libevent_core.pc libevent_extra.pc \\$/;"	m
LIBEVENT_VERSION	include/event2/event.h	1479;"	d
LIBEVENT_VERSION_NUMBER	include/event2/event.h	1482;"	d
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = -lcrypto -lrt $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIM	bufferevent_ratelim.c	206;"	d	file:
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIST_EMPTY	compat/sys/queue.h	186;"	d
LIST_END	compat/sys/queue.h	184;"	d
LIST_ENTRY	compat/sys/queue.h	170;"	d
LIST_ENTRY	include/event2/event_struct.h	100;"	d
LIST_ENTRY	include/event2/event_struct.h	234;"	d
LIST_FIRST	compat/sys/queue.h	182;"	d
LIST_FOREACH	compat/sys/queue.h	190;"	d
LIST_HEAD	compat/sys/queue.h	159;"	d
LIST_HEAD	include/event2/event_struct.h	109;"	d
LIST_HEAD	include/event2/event_struct.h	238;"	d
LIST_HEAD_INITIALIZER	compat/sys/queue.h	164;"	d
LIST_INIT	compat/sys/queue.h	201;"	d
LIST_INSERT_AFTER	compat/sys/queue.h	206;"	d
LIST_INSERT_BEFORE	compat/sys/queue.h	215;"	d
LIST_INSERT_HEAD	compat/sys/queue.h	223;"	d
LIST_NEXT	compat/sys/queue.h	188;"	d
LIST_REMOVE	compat/sys/queue.h	231;"	d
LIST_REPLACE	compat/sys/queue.h	239;"	d
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LOAD	evthread_win32.c	114;"	d	file:
LOCAL_SOCKETPAIR_AF	evutil.c	2665;"	d	file:
LOCAL_SOCKETPAIR_AF	test/regress.c	404;"	d	file:
LOCAL_SOCKETPAIR_AF	test/regress_et.c	71;"	d	file:
LOCAL_SOCKETPAIR_AF	test/regress_et.c	73;"	d	file:
LOCAL_SOCKETPAIR_AF	test/test-dumpevents.c	91;"	d	file:
LOCK	listener.c	117;"	d	file:
LOCK_GROUP	bufferevent_ratelim.c	188;"	d	file:
LOGEQ	test/regress_util.c	568;"	d	file:
LOGEQ	test/regress_util.c	638;"	d	file:
LOG_COMPILE	Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILER	Makefile	/^LOG_COMPILER = true$/;"	m
LOG_DRIVER	Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/test-driver$/;"	m
LOG_INTERNAL_H_INCLUDED_	log-internal.h	28;"	d
LONGEST_TEST_NAME	test/tinytest.c	62;"	d	file:
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	402;"	d
LT_SYS_LIBRARY_PATH	Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LineCount	event_rpcgen.py	/^    def LineCount(self):$/;"	m	class:Entry
MAGIC_EXITCODE	test/tinytest.c	116;"	d	file:
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note\/missing makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MANY	test/regress.c	3025;"	d	file:
MANY	test/regress.c	3074;"	d	file:
MAP_FAILED	buffer.c	101;"	d	file:
MAX	event.c	3563;"	d	file:
MAX_CALLS	test/regress_iocp.c	56;"	d	file:
MAX_CBS	bufferevent.c	737;"	d	file:
MAX_CBS	bufferevent.c	767;"	d	file:
MAX_COMMON_TIMEOUTS	event.c	1577;"	d	file:
MAX_DEFERREDS_QUEUED	event.c	3459;"	d	file:
MAX_EPOLL_TIMEOUT_MSEC	epoll.c	143;"	d	file:
MAX_EVENTS_PER_GETN	evport.c	82;"	d	file:
MAX_EVENT_COUNT	event.c	3566;"	d	file:
MAX_LABELS	evdns.c	1531;"	d	file:
MAX_NEVENT	epoll.c	135;"	d	file:
MAX_OUTPUT	sample/le-proxy.c	46;"	d	file:
MAX_PROBE_TIMEOUT	evdns.c	514;"	d	file:
MAX_REQUESTS	test/test-fdleak.c	54;"	d	file:
MAX_REQUESTS	test/test-fdleak.c	56;"	d	file:
MAX_SECONDS_IN_MSEC_LONG	evutil_time.c	106;"	d	file:
MAX_SINGLE_READ_DEFAULT	bufferevent_ratelim.c	185;"	d	file:
MAX_SINGLE_WRITE_DEFAULT	bufferevent_ratelim.c	186;"	d	file:
MAX_TO_COPY_IN_EXPAND	buffer.c	2064;"	d	file:
MAX_TO_REALIGN_IN_EXPAND	buffer.c	2065;"	d	file:
MAX_V4_ADDRS	evdns.c	141;"	d	file:
MAX_V6_ADDRS	evdns.c	142;"	d	file:
MAX_WSABUFS	buffer_iocp.c	50;"	d	file:
MAYBE_CORE	Makefile	/^MAYBE_CORE = $/;"	m
MEMBERSOF	http.c	2965;"	d	file:
MESSAGE	sample/hello-world.c	/^static const char MESSAGE[] = "Hello, World!\\n";$/;"	v	file:
MICROSECONDS_MASK	event.c	1477;"	d	file:
MIN	evdns.c	128;"	d	file:
MIN	evdns.c	129;"	d	file:
MIN	http.c	168;"	d	file:
MINHEAP_INTERNAL_H_INCLUDED_	minheap-internal.h	29;"	d
MIN_BUFFER_SIZE	evbuffer-internal.h	55;"	d
MIN_BUFFER_SIZE	evbuffer-internal.h	57;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MM_INTERNAL_H_INCLUDED_	mm-internal.h	28;"	d
MORE_DATA_EXPECTED	http-internal.h	/^	MORE_DATA_EXPECTED = 0,$/;"	e	enum:message_read_status
MakeArray	event_rpcgen.py	/^    def MakeArray(self, yes=1):$/;"	m	class:Entry
MakeOptional	event_rpcgen.py	/^    def MakeOptional(self):$/;"	m	class:Entry
MalformedCertificate	sample/openssl_hostname_validation.h	/^        MalformedCertificate,$/;"	e	enum:__anon19
MatchFound	sample/openssl_hostname_validation.h	/^        MatchFound,$/;"	e	enum:__anon19
MatchNotFound	sample/openssl_hostname_validation.h	/^        MatchNotFound,$/;"	e	enum:__anon19
MyStruct	compat/sys/sample_tail_queue.c	/^struct MyStruct$/;"	s	file:
NCF	test/regress_http.c	2486;"	d	file:
NDEBUG	test/regress_bufferevent.c	30;"	d	file:
NDEBUG	test/regress_rpc.c	29;"	d	file:
NDEBUG	test/regress_thread.c	29;"	d	file:
NDEBUG	test/regress_zlib.c	28;"	d	file:
NEVENT	devpoll.c	82;"	d	file:
NEVENT	kqueue.c	70;"	d	file:
NEVENT	test/test-time.c	48;"	d	file:
NEVENT	win32select.c	179;"	d	file:
NEXT_TOKEN	evdns.c	3531;"	d	file:
NEXT_TOKEN	evdns.c	3564;"	d	file:
NEXT_TOKEN	evdns.c	4130;"	d	file:
NEXT_TOKEN	evdns.c	4170;"	d	file:
NFDBITS	select.c	68;"	d	file:
NI_MAXHOST	http.c	110;"	d	file:
NI_MAXSERV	http.c	109;"	d	file:
NI_MAXSERV	test/regress_http.c	164;"	d	file:
NI_NUMERICHOST	http.c	113;"	d	file:
NI_NUMERICSERV	http.c	117;"	d	file:
NM	Makefile	/^NM = \/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NO	http.c	/^enum expect { NO, CONTINUE, OTHER };$/;"	e	enum:expect	file:
NORMAL	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	e	enum:entry_status	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTIFICATION_KEY	event_iocp.c	46;"	d	file:
NOTIFY_IDENT	kqueue.c	506;"	d	file:
NO_NS	test/regress_http.c	/^	NO_NS = 4,$/;"	e	enum:http_cancel_test_type	file:
NO_PYTHON_EXISTS	test/regress.gen.h	1;"	d
NO_UNDEFINED	Makefile	/^NO_UNDEFINED = $/;"	m
NS_TIMEOUT	test/regress_http.c	/^	NS_TIMEOUT = 32,$/;"	e	enum:http_cancel_test_type	file:
NUMERIC_VERSION	config.h	405;"	d
NUM_ERRORS	bufferevent_openssl.c	310;"	d	file:
NUM_ITERATIONS	test/regress_thread.c	94;"	d	file:
NUM_READ_IOVEC	buffer.c	2395;"	d	file:
NUM_THREADS	test/regress_thread.c	257;"	d	file:
NUM_THREADS	test/regress_thread.c	258;"	d	file:
NUM_THREADS	test/regress_thread.c	93;"	d	file:
NUM_WRITE_IOVEC	buffer.c	2376;"	d	file:
NUM_WRITE_IOVEC	buffer.c	2378;"	d	file:
NUM_WRITE_IOVEC	buffer.c	2380;"	d	file:
NUM_WRITE_IOVEC	buffer.c	2388;"	d	file:
N_ACTIVE_CALLBACKS	event-internal.h	514;"	d
N_CPUS_DEFAULT	event_iocp.c	173;"	d	file:
N_EVENTS	test/test-dumpevents.c	69;"	d	file:
N_REQUESTS	test/bench_httpclient.c	/^const int N_REQUESTS = 20000;$/;"	v
N_SOCKETS_PER_LISTENER	listener.c	859;"	d	file:
N_TO_READ	evutil.c	174;"	d	file:
Name	event_rpcgen.py	/^    def Name(self):$/;"	m	class:Entry
Name	event_rpcgen.py	/^    def Name(self):$/;"	m	class:Struct
NoSANPresent	sample/openssl_hostname_validation.h	/^        NoSANPresent,$/;"	e	enum:__anon19
NormalizeLine	event_rpcgen.py	/^def NormalizeLine(line):$/;"	f
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OK	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	e	enum:outcome	file:
OLD_DEC	test/regress_http.c	2870;"	d	file:
OLD_DEC	test/regress_http.c	2947;"	d	file:
OPENSSL_COMPAT_H	openssl-compat.h	2;"	d
OPENSSL_INCS	Makefile	/^OPENSSL_INCS =  $/;"	m
OPENSSL_LIBADD	Makefile	/^OPENSSL_LIBADD = $/;"	m
OPENSSL_LIBS	Makefile	/^OPENSSL_LIBS = -Wl,-z,relro -L\/usr\/lib6464 -lssl -lcrypto -ldl -lz     $/;"	m
OP_BLOCKED	bufferevent_openssl.c	574;"	d	file:
OP_ERR	bufferevent_openssl.c	575;"	d	file:
OP_MADE_PROGRESS	bufferevent_openssl.c	573;"	d	file:
OTHER	http.c	/^enum expect { NO, CONTINUE, OTHER };$/;"	e	enum:expect	file:
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OUTPUT	include/event2/rpc.h	463;"	d
O_RDONLY	sample/http-server.c	64;"	d	file:
Optional	event_rpcgen.py	/^    def Optional(self):$/;"	m	class:Entry
PACKAGE	Makefile	/^PACKAGE = libevent$/;"	m
PACKAGE	config.h	408;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	config.h	411;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = libevent$/;"	m
PACKAGE_NAME	config.h	414;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = libevent 2.1.8-stable$/;"	m
PACKAGE_STRING	config.h	417;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = libevent$/;"	m
PACKAGE_TARNAME	config.h	420;"	d
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	423;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 2.1.8-stable$/;"	m
PACKAGE_VERSION	config.h	426;"	d
PARALLELISM	test/bench_httpclient.c	/^const int PARALLELISM = 200;$/;"	v
PART_FRAGMENT	http.c	/^	PART_FRAGMENT$/;"	e	enum:uri_part	file:
PART_PATH	http.c	/^	PART_PATH,$/;"	e	enum:uri_part	file:
PART_QUERY	http.c	/^	PART_QUERY,$/;"	e	enum:uri_part	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PF_INET6	ipv6-internal.h	76;"	d
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PLATFORM_DEPENDENT_SRC	Makefile	/^PLATFORM_DEPENDENT_SRC = \\$/;"	m
PORT	sample/hello-world.c	/^static const int PORT = 9995;$/;"	v	file:
POST_DATA	test/regress_http.c	1919;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PREPEND_CHAIN	buffer.c	/^PREPEND_CHAIN(struct evbuffer *dst, struct evbuffer *src)$/;"	f	file:
PRESERVE_PINNED	buffer.c	/^PRESERVE_PINNED(struct evbuffer *src, struct evbuffer_chain **first,$/;"	f	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT_CHANGES	epoll.c	273;"	d	file:
PROGRAMS	Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PTHREAD_CC	Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CFLAGS	Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_LIBS	Makefile	/^PTHREAD_LIBS =  $(am__append_12)$/;"	m
PTR_NOT_FOUND	buffer.c	138;"	d	file:
PTR_TO_UDATA	kqueue.c	54;"	d	file:
PTR_TO_UDATA	kqueue.c	57;"	d	file:
PUT_DATA	test/regress_http.c	2058;"	d	file:
Parse	event_rpcgen.py	/^def Parse(factory, file):$/;"	f
PrintCode	event_rpcgen.py	/^    def PrintCode(self, file):$/;"	m	class:StructCCode
PrintDeclaration	event_rpcgen.py	/^    def PrintDeclaration(self, file):$/;"	m	class:StructCCode
PrintForwardDeclaration	event_rpcgen.py	/^    def PrintForwardDeclaration(self, file):$/;"	m	class:StructCCode
PrintIndented	event_rpcgen.py	/^    def PrintIndented(self, file, ident, code):$/;"	m	class:Struct
PrintTags	event_rpcgen.py	/^    def PrintTags(self, file):$/;"	m	class:StructCCode
ProcessOneEntry	event_rpcgen.py	/^def ProcessOneEntry(factory, newstruct, entry):$/;"	f
ProcessStruct	event_rpcgen.py	/^def ProcessStruct(factory, data):$/;"	f
QUEUE_THREAD_COUNT	test/regress_thread.c	390;"	d	file:
QUIETLY	event_rpcgen.py	/^QUIETLY = 0$/;"	v
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RATELIM_INTERNAL_H_INCLUDED_	ratelim-internal.h	27;"	d
RB_AUGMENT	WIN32-Code/tree.h	332;"	d
RB_BLACK	WIN32-Code/tree.h	303;"	d
RB_COLOR	WIN32-Code/tree.h	316;"	d
RB_EMPTY	WIN32-Code/tree.h	318;"	d
RB_ENTRY	WIN32-Code/tree.h	305;"	d
RB_FIND	WIN32-Code/tree.h	667;"	d
RB_FOREACH	WIN32-Code/tree.h	672;"	d
RB_GENERATE	WIN32-Code/tree.h	389;"	d
RB_HEAD	WIN32-Code/tree.h	291;"	d
RB_INF	WIN32-Code/tree.h	663;"	d
RB_INIT	WIN32-Code/tree.h	299;"	d
RB_INITIALIZER	WIN32-Code/tree.h	296;"	d
RB_INSERT	WIN32-Code/tree.h	665;"	d
RB_LEFT	WIN32-Code/tree.h	313;"	d
RB_MAX	WIN32-Code/tree.h	670;"	d
RB_MIN	WIN32-Code/tree.h	669;"	d
RB_NEGINF	WIN32-Code/tree.h	662;"	d
RB_NEXT	WIN32-Code/tree.h	668;"	d
RB_PARENT	WIN32-Code/tree.h	315;"	d
RB_PROTOTYPE	WIN32-Code/tree.h	376;"	d
RB_RED	WIN32-Code/tree.h	304;"	d
RB_REMOVE	WIN32-Code/tree.h	666;"	d
RB_RIGHT	WIN32-Code/tree.h	314;"	d
RB_ROOT	WIN32-Code/tree.h	317;"	d
RB_ROTATE_LEFT	WIN32-Code/tree.h	335;"	d
RB_ROTATE_RIGHT	WIN32-Code/tree.h	355;"	d
RB_SET	WIN32-Code/tree.h	320;"	d
RB_SET_BLACKRED	WIN32-Code/tree.h	326;"	d
READ_DEFAULT	bufferevent_openssl.c	730;"	d	file:
RECHECK_LOGS	Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
REGRESS_H_INCLUDED_	test/regress.h	28;"	d
REGRESS_OPENSSL_CLIENT	test/regress_ssl.c	/^	REGRESS_OPENSSL_CLIENT = 64,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_CLIENT_WRITE	test/regress_ssl.c	/^	REGRESS_OPENSSL_CLIENT_WRITE = 2048,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_DIRTY_SHUTDOWN	test/regress_ssl.c	/^	REGRESS_OPENSSL_DIRTY_SHUTDOWN = 16,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_FD	test/regress_ssl.c	/^	REGRESS_OPENSSL_FD = 32,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_FILTER	test/regress_ssl.c	/^	REGRESS_OPENSSL_FILTER = 2,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_FREED	test/regress_ssl.c	/^	REGRESS_OPENSSL_FREED = 256,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_OPEN	test/regress_ssl.c	/^	REGRESS_OPENSSL_OPEN = 8,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_RENEGOTIATE	test/regress_ssl.c	/^	REGRESS_OPENSSL_RENEGOTIATE = 4,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_SERVER	test/regress_ssl.c	/^	REGRESS_OPENSSL_SERVER = 128,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_SLEEP	test/regress_ssl.c	/^	REGRESS_OPENSSL_SLEEP = 1024,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_SOCKETPAIR	test/regress_ssl.c	/^	REGRESS_OPENSSL_SOCKETPAIR = 1,$/;"	e	enum:regress_openssl_type	file:
REGRESS_OPENSSL_TIMEOUT	test/regress_ssl.c	/^	REGRESS_OPENSSL_TIMEOUT = 512,$/;"	e	enum:regress_openssl_type	file:
REGRESS_TESTUTILS_H_INCLUDED_	test/regress_testutils.h	28;"	d
REGRESS_THREAD_H_INCLUDED_	test/regress_thread.h	28;"	d
RELEASE	Makefile	/^RELEASE = -release 2.1$/;"	m
REQUEST_CANCELED	http-internal.h	/^	REQUEST_CANCELED = -2,$/;"	e	enum:message_read_status
REQ_HEAD	evdns.c	390;"	d	file:
REQ_VERSION_ATLEAST	http.c	163;"	d	file:
REQ_VERSION_BEFORE	http.c	159;"	d	file:
RESET	test/regress_util.c	563;"	d	file:
RESET	test/regress_util.c	637;"	d	file:
RESTORE_PINNED	buffer.c	/^RESTORE_PINNED(struct evbuffer *src, struct evbuffer_chain *pinned,$/;"	f	file:
RPC_LEGACY	test/regress_rpc.c	883;"	d	file:
RPC_LEGACY	test/regress_rpc.c	890;"	d	file:
RpcGenError	event_rpcgen.py	/^class RpcGenError(Exception):$/;"	c
SAMPLES	Makefile	/^SAMPLES = sample\/dns-example sample\/event-read-fifo sample\/hello-world \\$/;"	m
SCHEDULE_DEFERRED	bufferevent.c	217;"	d	file:
SCRIPTS	Makefile	/^SCRIPTS = $(dist_bin_SCRIPTS)$/;"	m
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SELECT_ALLOC_SIZE	select.c	75;"	d	file:
SENDFILE_IS_FREEBSD	buffer.c	110;"	d	file:
SENDFILE_IS_LINUX	buffer.c	107;"	d	file:
SENDFILE_IS_MACOSX	buffer.c	113;"	d	file:
SENDFILE_IS_SOLARIS	buffer.c	116;"	d	file:
SERVER_TIMEOUT	test/regress_http.c	/^	SERVER_TIMEOUT = 16,$/;"	e	enum:http_cancel_test_type	file:
SERVICES_KEY	evdns.c	3801;"	d	file:
SETENV_OK	test/regress.c	2586;"	d	file:
SETENV_OK	test/regress.c	2594;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGFPE_REQ	win32select.c	/^volatile double SIGFPE_REQ = 0.0f;$/;"	v
SIMPLEQ_EMPTY	compat/sys/queue.h	278;"	d
SIMPLEQ_END	compat/sys/queue.h	276;"	d
SIMPLEQ_ENTRY	compat/sys/queue.h	263;"	d
SIMPLEQ_FIRST	compat/sys/queue.h	274;"	d
SIMPLEQ_FOREACH	compat/sys/queue.h	282;"	d
SIMPLEQ_HEAD	compat/sys/queue.h	252;"	d
SIMPLEQ_HEAD_INITIALIZER	compat/sys/queue.h	259;"	d
SIMPLEQ_INIT	compat/sys/queue.h	293;"	d
SIMPLEQ_INSERT_AFTER	compat/sys/queue.h	313;"	d
SIMPLEQ_INSERT_HEAD	compat/sys/queue.h	299;"	d
SIMPLEQ_INSERT_TAIL	compat/sys/queue.h	306;"	d
SIMPLEQ_NEXT	compat/sys/queue.h	280;"	d
SIMPLEQ_REMOVE_HEAD	compat/sys/queue.h	320;"	d
SIZEOF_INT	config.h	433;"	d
SIZEOF_LONG	config.h	436;"	d
SIZEOF_LONG_LONG	config.h	439;"	d
SIZEOF_OFF_T	config.h	442;"	d
SIZEOF_PTHREAD_T	config.h	445;"	d
SIZEOF_SHORT	config.h	448;"	d
SIZEOF_SIZE_T	config.h	451;"	d
SIZEOF_VOID_P	config.h	454;"	d
SKIP	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	e	enum:outcome	file:
SKIP_NAME	evdns.c	1057;"	d	file:
SKIP_NAME	evdns.c	1299;"	d	file:
SLEEP_MS	test/regress_thread.c	/^SLEEP_MS(int ms)$/;"	f	file:
SLIST_EMPTY	compat/sys/queue.h	118;"	d
SLIST_END	compat/sys/queue.h	116;"	d
SLIST_ENTRY	compat/sys/queue.h	102;"	d
SLIST_FIRST	compat/sys/queue.h	114;"	d
SLIST_FOREACH	compat/sys/queue.h	123;"	d
SLIST_HEAD	compat/sys/queue.h	91;"	d
SLIST_HEAD_INITIALIZER	compat/sys/queue.h	97;"	d
SLIST_INIT	compat/sys/queue.h	134;"	d
SLIST_INSERT_AFTER	compat/sys/queue.h	139;"	d
SLIST_INSERT_HEAD	compat/sys/queue.h	145;"	d
SLIST_NEXT	compat/sys/queue.h	120;"	d
SLIST_REMOVE_HEAD	compat/sys/queue.h	151;"	d
SOCKET_TYPE_MASK	evutil.c	2561;"	d	file:
SOURCES	Makefile	/^SOURCES = $(libevent_la_SOURCES) $(libevent_core_la_SOURCES) \\$/;"	m
SO_UPDATE_CONNECT_CONTEXT	bufferevent_async.c	69;"	d	file:
SPIN_COUNT	evthread_win32.c	48;"	d	file:
SPLAY_ASSEMBLE	WIN32-Code/tree.h	105;"	d
SPLAY_EMPTY	WIN32-Code/tree.h	78;"	d
SPLAY_ENTRY	WIN32-Code/tree.h	69;"	d
SPLAY_FIND	WIN32-Code/tree.h	278;"	d
SPLAY_FOREACH	WIN32-Code/tree.h	285;"	d
SPLAY_GENERATE	WIN32-Code/tree.h	156;"	d
SPLAY_HEAD	WIN32-Code/tree.h	57;"	d
SPLAY_INF	WIN32-Code/tree.h	274;"	d
SPLAY_INIT	WIN32-Code/tree.h	65;"	d
SPLAY_INITIALIZER	WIN32-Code/tree.h	62;"	d
SPLAY_INSERT	WIN32-Code/tree.h	276;"	d
SPLAY_LEFT	WIN32-Code/tree.h	75;"	d
SPLAY_LINKLEFT	WIN32-Code/tree.h	93;"	d
SPLAY_LINKRIGHT	WIN32-Code/tree.h	99;"	d
SPLAY_MAX	WIN32-Code/tree.h	282;"	d
SPLAY_MIN	WIN32-Code/tree.h	280;"	d
SPLAY_NEGINF	WIN32-Code/tree.h	273;"	d
SPLAY_NEXT	WIN32-Code/tree.h	279;"	d
SPLAY_PROTOTYPE	WIN32-Code/tree.h	114;"	d
SPLAY_REMOVE	WIN32-Code/tree.h	277;"	d
SPLAY_RIGHT	WIN32-Code/tree.h	76;"	d
SPLAY_ROOT	WIN32-Code/tree.h	77;"	d
SPLAY_ROTATE_LEFT	WIN32-Code/tree.h	87;"	d
SPLAY_ROTATE_RIGHT	WIN32-Code/tree.h	81;"	d
STDC_HEADERS	config.h	457;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRLCPY_INTERNAL_H_INCLUDED_	strlcpy-internal.h	2;"	d
SUBDELIMS	http.c	4452;"	d	file:
SYS_INCLUDES	Makefile	/^SYS_INCLUDES = $/;"	m
SYS_LIBS	Makefile	/^SYS_LIBS = $/;"	m
SYS_QUEUE_H__	compat/sys/queue.h	38;"	d
SYS_SRC	Makefile	/^SYS_SRC = $(am__append_18) $(am__append_19) \\$/;"	m
S_ISDIR	sample/http-server.c	26;"	d	file:
SetLineCount	event_rpcgen.py	/^    def SetLineCount(self, number):$/;"	m	class:Entry
SetStruct	event_rpcgen.py	/^    def SetStruct(self, struct):$/;"	m	class:Entry
SleepConditionVariableCS_fn	evthread_win32.c	/^static BOOL WINAPI (*SleepConditionVariableCS_fn)($/;"	v	file:
Struct	event_rpcgen.py	/^    def Struct(self, name):$/;"	m	class:CCodeGenerator
Struct	event_rpcgen.py	/^class Struct:$/;"	c
StructCCode	event_rpcgen.py	/^class StructCCode(Struct):$/;"	c
T	test/check-dumpevents.py	/^T = float(T)$/;"	v
T	test/regress_ssl.c	737;"	d	file:
T	test/regress_ssl.c	811;"	d	file:
TAILQ_EMPTY	compat/sys/queue.h	366;"	d
TAILQ_END	compat/sys/queue.h	355;"	d
TAILQ_END	event-internal.h	492;"	d
TAILQ_ENTRY	compat/sys/queue.h	341;"	d
TAILQ_ENTRY	include/event2/event_struct.h	224;"	d
TAILQ_ENTRY	include/event2/event_struct.h	81;"	d
TAILQ_ENTRY	include/event2/keyvalq_struct.h	38;"	d
TAILQ_ENTRY	include/event2/keyvalq_struct.h	69;"	d
TAILQ_FIRST	compat/sys/queue.h	353;"	d
TAILQ_FIRST	event-internal.h	489;"	d
TAILQ_FOREACH	compat/sys/queue.h	369;"	d
TAILQ_FOREACH	event-internal.h	499;"	d
TAILQ_FOREACH_REVERSE	compat/sys/queue.h	374;"	d
TAILQ_HEAD	compat/sys/queue.h	331;"	d
TAILQ_HEAD	include/event2/event_struct.h	228;"	d
TAILQ_HEAD	include/event2/event_struct.h	90;"	d
TAILQ_HEAD	include/event2/keyvalq_struct.h	47;"	d
TAILQ_HEAD	include/event2/keyvalq_struct.h	73;"	d
TAILQ_HEAD_INITIALIZER	compat/sys/queue.h	337;"	d
TAILQ_INIT	compat/sys/queue.h	383;"	d
TAILQ_INSERT_AFTER	compat/sys/queue.h	408;"	d
TAILQ_INSERT_BEFORE	compat/sys/queue.h	419;"	d
TAILQ_INSERT_BEFORE	event-internal.h	506;"	d
TAILQ_INSERT_HEAD	compat/sys/queue.h	389;"	d
TAILQ_INSERT_TAIL	compat/sys/queue.h	400;"	d
TAILQ_LAST	compat/sys/queue.h	359;"	d
TAILQ_NEXT	compat/sys/queue.h	357;"	d
TAILQ_NEXT	event-internal.h	495;"	d
TAILQ_PREV	compat/sys/queue.h	363;"	d
TAILQ_REMOVE	compat/sys/queue.h	427;"	d
TAILQ_REPLACE	compat/sys/queue.h	437;"	d
TEST	test/regress_finalize.c	334;"	d	file:
TEST	test/regress_thread.c	567;"	d	file:
TEST1	test/regress.c	94;"	d	file:
TESTPROGRAMS	Makefile	/^TESTPROGRAMS = \\$/;"	m
TESTS	Makefile	/^TESTS = \\$/;"	m
TESTS_COMPILER	Makefile	/^TESTS_COMPILER = true$/;"	m
TEST_EXTENSIONS	Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_LOGS	Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOG_COMPILE	Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_DRIVER	Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/test-driver$/;"	m
TEST_MAX_INT	test/regress.c	2358;"	d	file:
TEST_STR	test/regress_bufferevent.c	625;"	d	file:
TEST_SUITE_LOG	Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_TRIM	test/regress_util.c	444;"	d	file:
THREAD_FN	test/regress_thread.h	32;"	d
THREAD_FN	test/regress_thread.h	39;"	d
THREAD_JOIN	test/regress_thread.h	36;"	d
THREAD_JOIN	test/regress_thread.h	45;"	d
THREAD_RETURN	test/regress_thread.h	33;"	d
THREAD_RETURN	test/regress_thread.h	40;"	d
THREAD_START	test/regress_thread.h	34;"	d
THREAD_START	test/regress_thread.h	41;"	d
THREAD_T	test/regress_thread.h	31;"	d
THREAD_T	test/regress_thread.h	38;"	d
TIMEOUT_BACKOFF_FACTOR	evdns.c	515;"	d	file:
TIME_INTERNAL_H_INCLUDED_	time-internal.h	28;"	d
TIME_WITH_SYS_TIME	config.h	460;"	d
TINYTEST_H_INCLUDED_	test/tinytest.h	27;"	d
TINYTEST_MACROS_H_INCLUDED_	test/tinytest_macros.h	27;"	d
TLS_method	openssl-compat.h	31;"	d
TO_SERVER_REQUEST	evdns.c	386;"	d	file:
TRY	evdns.c	3810;"	d	file:
TRY	evdns.c	3858;"	d	file:
TRY_SEED_PROC_SYS_KERNEL_RANDOM_UUID	arc4random.c	251;"	d	file:
TRY_SEED_SYSCTL_BSD	arc4random.c	210;"	d	file:
TRY_SEED_SYSCTL_LINUX	arc4random.c	173;"	d	file:
TRY_SEED_URANDOM	arc4random.c	296;"	d	file:
TRY_SEED_WIN32	arc4random.c	145;"	d	file:
TT_BLATHER	test/tinytest_macros.h	52;"	d
TT_DECLARE	test/tinytest_macros.h	41;"	d
TT_DIE	test/tinytest_macros.h	57;"	d
TT_ENABLED_	test/tinytest.h	34;"	d
TT_ENABLE_IOCP	test/regress.h	96;"	d
TT_ENABLE_IOCP_FLAG	test/regress.h	95;"	d
TT_EXIT_TEST_FUNCTION	test/tinytest_macros.h	36;"	d
TT_FAIL	test/tinytest_macros.h	64;"	d
TT_FIRST_USER_FLAG	test/tinytest.h	38;"	d
TT_FORK	test/tinytest.h	30;"	d
TT_GRIPE	test/tinytest_macros.h	49;"	d
TT_ISOLATED	test/regress.h	99;"	d
TT_LEGACY	test/regress.h	92;"	d
TT_NEED_BASE	test/regress.h	90;"	d
TT_NEED_DNS	test/regress.h	91;"	d
TT_NEED_SOCKETPAIR	test/regress.h	89;"	d
TT_NEED_THREADS	test/regress.h	93;"	d
TT_NO_LOGS	test/regress.h	94;"	d
TT_OFF_BY_DEFAULT	test/tinytest.h	36;"	d
TT_SKIP	test/tinytest.h	32;"	d
TT_STMT_BEGIN	test/tinytest_macros.h	30;"	d
TT_STMT_END	test/tinytest_macros.h	31;"	d
TT_URI	test/regress_http.c	2468;"	d	file:
TT_URI	test/regress_http.c	2836;"	d	file:
TYPE_A	evdns.c	145;"	d	file:
TYPE_AAAA	evdns.c	149;"	d	file:
TYPE_CNAME	evdns.c	146;"	d	file:
TYPE_PTR	evdns.c	147;"	d	file:
TYPE_SOA	evdns.c	148;"	d	file:
Tag	event_rpcgen.py	/^    def Tag(self):$/;"	m	class:Entry
TranslateList	event_rpcgen.py	/^def TranslateList(mylist, mydict):$/;"	f
Type	event_rpcgen.py	/^    def Type(self):$/;"	m	class:Entry
U64_LITERAL	evutil_time.c	72;"	d	file:
UNITS_PER_SEC	evutil_time.c	82;"	d	file:
UNITS_PER_USEC	evutil_time.c	84;"	d	file:
UNLOCK	listener.c	118;"	d	file:
UNLOCKED	bufferevent.c	179;"	d	file:
UNLOCKED	bufferevent.c	214;"	d	file:
UNLOCK_GROUP	bufferevent_ratelim.c	189;"	d	file:
UNSETENV_OK	test/regress.c	2598;"	d	file:
UNSETENV_OK	test/regress.c	2606;"	d	file:
URI_ADD_	http.c	4850;"	d	file:
URI_ADD_	http.c	4904;"	d	file:
URI_FREE_STR_	http.c	4827;"	d	file:
URI_FREE_STR_	http.c	4840;"	d	file:
URI_PARSE	test/regress_http.c	2465;"	d	file:
URI_PARSE	test/regress_http.c	2835;"	d	file:
URI_SET_STR_	http.c	4943;"	d	file:
URL_MAX	sample/http-connect.c	17;"	d	file:
USEC_PER_SEC	evutil_time.c	83;"	d	file:
USE_GLOBAL_FOR_DEBUG_LOGGING	log-internal.h	42;"	d
USE_INTERNAL_NTOP	evutil.c	1870;"	d	file:
USE_INTERNAL_PTON	evutil.c	1871;"	d	file:
USE_IOVEC_IMPL	buffer.c	2364;"	d	file:
USE_NATIVE_GETADDRINFO	evutil.c	1088;"	d	file:
USE_SENDFILE	buffer.c	106;"	d	file:
USE_SENDFILE	buffer.c	109;"	d	file:
USE_SENDFILE	buffer.c	112;"	d	file:
USE_SENDFILE	buffer.c	115;"	d	file:
USING_TIMERFD	epoll.c	83;"	d	file:
UTIL_INTERNAL_H_INCLUDED_	util-internal.h	27;"	d
Usage	event_rpcgen.py	/^class Usage(RpcGenError):$/;"	c
VERIFY	sample/http-connect.c	11;"	d	file:
VERSION	Makefile	/^VERSION = 2.1.8-stable$/;"	m
VERSION	config.h	485;"	d
VERSION_INFO	Makefile	/^VERSION_INFO = 6:2:0$/;"	m
Verify	event_rpcgen.py	/^    def Verify(self):$/;"	m	class:Entry
Verify	event_rpcgen.py	/^    def Verify(self):$/;"	m	class:EntryBytes
WIN32_LEAN_AND_MEAN	event.c	32;"	d	file:
WIN32_LEAN_AND_MEAN	event.c	34;"	d	file:
WIN32_LEAN_AND_MEAN	event_tagging.c	39;"	d	file:
WIN32_LEAN_AND_MEAN	event_tagging.c	42;"	d	file:
WIN32_LEAN_AND_MEAN	evmap.c	31;"	d	file:
WIN32_LEAN_AND_MEAN	evmap.c	33;"	d	file:
WIN32_LEAN_AND_MEAN	evrpc.c	31;"	d	file:
WIN32_LEAN_AND_MEAN	evrpc.c	34;"	d	file:
WIN32_LEAN_AND_MEAN	evthread_win32.c	35;"	d	file:
WIN32_LEAN_AND_MEAN	evthread_win32.c	37;"	d	file:
WIN32_LEAN_AND_MEAN	evutil.c	33;"	d	file:
WIN32_LEAN_AND_MEAN	evutil.c	35;"	d	file:
WIN32_LEAN_AND_MEAN	evutil_time.c	32;"	d	file:
WIN32_LEAN_AND_MEAN	evutil_time.c	34;"	d	file:
WIN32_LEAN_AND_MEAN	include/event.h	61;"	d
WIN32_LEAN_AND_MEAN	include/event.h	65;"	d
WIN32_LEAN_AND_MEAN	log.c	50;"	d	file:
WIN32_LEAN_AND_MEAN	log.c	52;"	d	file:
WIN32_LEAN_AND_MEAN	signal.c	33;"	d	file:
WIN32_LEAN_AND_MEAN	signal.c	36;"	d	file:
WIN32_LEAN_AND_MEAN	test/bench.c	44;"	d	file:
WIN32_LEAN_AND_MEAN	test/bench_cascade.c	36;"	d	file:
WIN32_LEAN_AND_MEAN	test/regress_iocp.c	42;"	d	file:
WIN32_LEAN_AND_MEAN	test/regress_iocp.c	45;"	d	file:
WIN32_LEAN_AND_MEAN	test/test-fdleak.c	30;"	d	file:
WIN_NS_9X_KEY	evdns.c	3802;"	d	file:
WIN_NS_NT_KEY	evdns.c	3803;"	d	file:
WRITE_FRAME	bufferevent_openssl.c	728;"	d	file:
WSABUF_FROM_EVBUFFER_IOV	evbuffer-internal.h	361;"	d
WSAID_ACCEPTEX	event_iocp.c	133;"	d	file:
WSAID_CONNECTEX	event_iocp.c	137;"	d	file:
WSAID_GETACCEPTEXSOCKADDRS	event_iocp.c	141;"	d	file:
WakeAllConditionVariable_fn	evthread_win32.c	/^static void WINAPI (*WakeAllConditionVariable_fn)(PCONDITION_VARIABLE) = NULL;$/;"	v	file:
WakeConditionVariable_fn	evthread_win32.c	/^static void WINAPI (*WakeConditionVariable_fn)(PCONDITION_VARIABLE) = NULL;$/;"	v	file:
XFREE	win32select.c	54;"	d	file:
ZERO_CHAIN	buffer.c	/^ZERO_CHAIN(struct evbuffer *dst)$/;"	f	file:
ZLIB_LIBS	Makefile	/^ZLIB_LIBS = -lz $/;"	m
_ALL_SOURCE	config.h	464;"	d
_ALL_SOURCE	evconfig-private.h	9;"	d
_DARWIN_UNLIMITED_SELECT	select.c	37;"	d	file:
_DARWIN_USE_64_BIT_INODE	config.h	489;"	d
_EVENT_LOG_DEBUG	include/event2/event.h	738;"	d
_EVENT_LOG_ERR	include/event2/event.h	741;"	d
_EVENT_LOG_MSG	include/event2/event.h	739;"	d
_EVENT_LOG_WARN	include/event2/event.h	740;"	d
_FILE_OFFSET_BITS	test/regress_zlib.c	75;"	d	file:
_FORTIFY_SOURCE	evdns.c	57;"	d	file:
_GNU_SOURCE	config.h	468;"	d
_GNU_SOURCE	evconfig-private.h	13;"	d
_GNU_SOURCE	include/event2/util.h	62;"	d
_LARGEFILE64_SOURCE	test/regress_zlib.c	69;"	d	file:
_LFS64_LARGEFILE	test/regress_zlib.c	72;"	d	file:
_NAME	event_rpcgen.py	/^_NAME = "event_rpcgen.py"$/;"	v
_POSIX_PTHREAD_SEMANTICS	config.h	472;"	d
_POSIX_PTHREAD_SEMANTICS	evconfig-private.h	17;"	d
_SYS_TREE_H_	WIN32-Code/tree.h	28;"	d
_TANDEM_SOURCE	config.h	476;"	d
_TANDEM_SOURCE	evconfig-private.h	21;"	d
_VERSION	event_rpcgen.py	/^_VERSION = "0.1"$/;"	v
_WIN32_IE	evdns.c	82;"	d	file:
_WIN32_WINNT	event_iocp.c	30;"	d	file:
_WIN32_WINNT	evthread_win32.c	32;"	d	file:
_WIN32_WINNT	evutil.c	39;"	d	file:
_WIN32_WINNT	evutil.c	41;"	d	file:
_WIN32_WINNT	listener.c	35;"	d	file:
__EXTENSIONS__	config.h	480;"	d
__EXTENSIONS__	evconfig-private.h	25;"	d
__attribute__	test/tinytest.c	56;"	d	file:
__cdecl	signal.c	88;"	d	file:
__func__	util-internal.h	58;"	d
__init__	event_rpcgen.py	/^        def __init__(self, why):$/;"	m	class:RpcGenError
__init__	event_rpcgen.py	/^    def __init__(self):$/;"	m	class:CCodeGenerator
__init__	event_rpcgen.py	/^    def __init__(self, argv):$/;"	m	class:CommandLine
__init__	event_rpcgen.py	/^    def __init__(self, argv0):$/;"	m	class:Usage
__init__	event_rpcgen.py	/^    def __init__(self, entry):$/;"	m	class:EntryArray
__init__	event_rpcgen.py	/^    def __init__(self, name):$/;"	m	class:Struct
__init__	event_rpcgen.py	/^    def __init__(self, name):$/;"	m	class:StructCCode
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag):$/;"	m	class:Entry
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag):$/;"	m	class:EntryString
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag):$/;"	m	class:EntryVarBytes
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag, bits=32):$/;"	m	class:EntryInt
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag, length):$/;"	m	class:EntryBytes
__init__	event_rpcgen.py	/^    def __init__(self, type, name, tag, refname):$/;"	m	class:EntryStruct
__str__	event_rpcgen.py	/^        def __str__(self):$/;"	m	class:RpcGenError	file:
a	evdns.c	/^		} a;$/;"	m	union:reply::__anon12	typeref:struct:reply::__anon12::__anon13	file:
a	minheap-internal.h	/^    unsigned n, a;$/;"	m	struct:min_heap
a	test/regress_util.c	/^	const char *a;$/;"	m	struct:example_struct	file:
aaaa	evdns.c	/^		} aaaa;$/;"	m	union:reply::__anon12	typeref:struct:reply::__anon12::__anon14	file:
abs64	evutil_time.c	/^abs64(ev_int64_t i)$/;"	f	file:
abs_builddir	Makefile	/^abs_builddir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
accept4_flags	listener.c	/^	int accept4_flags;$/;"	m	struct:evconnlistener	file:
accept_cb	sample/le-proxy.c	/^accept_cb(struct evconnlistener *listener, evutil_socket_t fd,$/;"	f	file:
accept_conn_cb	sample/echo.c	/^accept_conn_cb(struct evconnlistener *listener,$/;"	f	file:
accept_error_cb	sample/echo.c	/^accept_error_cb(struct evconnlistener *listener, void *ctx)$/;"	f	file:
accept_socket_cb	http.c	/^accept_socket_cb(struct evconnlistener *listener, evutil_socket_t nfd, struct sockaddr *peer_sa, int peer_socklen, void *arg)$/;"	f	file:
acceptcb	test/regress_listener.c	/^acceptcb(struct evconnlistener *listener, evutil_socket_t fd,$/;"	f	file:
acceptcb	test/regress_ssl.c	/^acceptcb(struct evconnlistener *listener, evutil_socket_t fd,$/;"	f	file:
acceptcb_deferred	test/regress_ssl.c	/^acceptcb_deferred(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
accepted_socket_cb	listener.c	/^accepted_socket_cb(struct event_overlapped *o, ev_uintptr_t key, ev_ssize_t n, int ok)$/;"	f	file:
accepted_socket_invoke_user_cb	listener.c	/^accepted_socket_invoke_user_cb(struct event_callback *dcb, void *arg)$/;"	f	file:
accepting	listener.c	/^	struct accepting_socket **accepting;$/;"	m	struct:evconnlistener_iocp	typeref:struct:evconnlistener_iocp::accepting_socket	file:
accepting_socket	listener.c	/^struct accepting_socket {$/;"	s	file:
activate_cb	test/regress.c	/^activate_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
activate_other_event_cb	test/regress.c	/^activate_other_event_cb(evutil_socket_t fd, short what, void *other_)$/;"	f	file:
active_later_queue	event-internal.h	/^	struct evcallback_list active_later_queue;$/;"	m	struct:event_base	typeref:struct:event_base::evcallback_list
activequeues	event-internal.h	/^	struct evcallback_list *activequeues;$/;"	m	struct:event_base	typeref:struct:event_base::evcallback_list
acx_pthread_config	Makefile	/^acx_pthread_config = $/;"	m
add	event-internal.h	/^	int (*add)(struct event_base *, evutil_socket_t fd, short old, short events, void *fdinfo);$/;"	m	struct:eventop
add_cname_to_reply	evdns.c	/^add_cname_to_reply(struct evdns_getaddrinfo_request *data,$/;"	f	file:
added	event.c	/^    unsigned added : 1;$/;"	m	struct:event_debug_entry	file:
addfile_test_done_writing	test/regress_buffer.c	/^static int addfile_test_done_writing;$/;"	v	file:
addfile_test_event_base	test/regress_buffer.c	/^static struct event_base *addfile_test_event_base;$/;"	v	typeref:struct:event_base	file:
addfile_test_readcb	test/regress_buffer.c	/^addfile_test_readcb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
addfile_test_total_read	test/regress_buffer.c	/^static int addfile_test_total_read;$/;"	v	file:
addfile_test_total_written	test/regress_buffer.c	/^static int addfile_test_total_written;$/;"	v	file:
addfile_test_writecb	test/regress_buffer.c	/^addfile_test_writecb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
additional	evdns.c	/^	struct server_reply_item *additional; \/* linked list of additional RRs *\/$/;"	m	struct:server_request	typeref:struct:server_request::server_reply_item	file:
addr	evdns.c	/^	struct sockaddr_storage addr; \/* Where to send the response *\/$/;"	m	struct:server_request	typeref:struct:server_request::sockaddr_storage	file:
addr	evdns.c	/^	} addr;$/;"	m	struct:hosts_entry	typeref:union:hosts_entry::__anon16	file:
addr	test/regress_util.c	/^	const char *addr;$/;"	m	struct:ipv4_entry	file:
addr	test/regress_util.c	/^	const char *addr;$/;"	m	struct:ipv6_entry	file:
addr	test/regress_util.c	/^	const char *addr;$/;"	m	struct:sa_port_ent	file:
addrbuf	listener.c	/^	char addrbuf[1];$/;"	m	struct:accepting_socket	file:
addrcount	evdns.c	/^			u32 addrcount;$/;"	m	struct:reply::__anon12::__anon13	file:
addrcount	evdns.c	/^			u32 addrcount;$/;"	m	struct:reply::__anon12::__anon14	file:
address	evdns.c	/^	struct sockaddr_storage address;$/;"	m	struct:nameserver	typeref:struct:nameserver::sockaddr_storage	file:
address	http-internal.h	/^	char *address;			\/* address to connect to *\/$/;"	m	struct:evhttp_connection
addresses	evdns.c	/^			struct in6_addr addresses[MAX_V6_ADDRS];$/;"	m	struct:reply::__anon12::__anon14	typeref:struct:reply::__anon12::__anon14::in6_addr	file:
addresses	evdns.c	/^			u32 addresses[MAX_V4_ADDRS];$/;"	m	struct:reply::__anon12::__anon13	file:
addrinfo_from_hostent	evutil.c	/^addrinfo_from_hostent(const struct hostent *ent,$/;"	f	file:
addrlen	evdns.c	/^	ev_socklen_t addrlen; \/* length of addr *\/$/;"	m	struct:server_request	file:
addrlen	evdns.c	/^	ev_socklen_t addrlen;$/;"	m	struct:nameserver	file:
addrlen	evdns.c	/^	int addrlen;$/;"	m	struct:hosts_entry	file:
addrs	test/regress_dns.c	/^	void *addrs;$/;"	m	struct:generic_dns_callback_result	file:
addrs_buf	test/regress_dns.c	/^	char addrs_buf[256];$/;"	m	struct:generic_dns_callback_result	file:
addrs_len	test/regress_dns.c	/^	size_t addrs_len;$/;"	m	struct:generic_dns_callback_result	file:
adj_timeouts	bufferevent-internal.h	/^	int (*adj_timeouts)(struct bufferevent *);$/;"	m	struct:bufferevent_ops
adjust_monotonic_clock	time-internal.h	/^	struct timeval adjust_monotonic_clock;$/;"	m	struct:evutil_monotonic_timer	typeref:struct:evutil_monotonic_timer::timeval
adjust_monotonic_time	evutil_time.c	/^adjust_monotonic_time(struct evutil_monotonic_timer *base,$/;"	f	file:
adjust_tick_count	time-internal.h	/^	ev_uint64_t adjust_tick_count;$/;"	m	struct:evutil_monotonic_timer
advance_last_with_data	buffer.c	/^advance_last_with_data(struct evbuffer *buf)$/;"	f	file:
ai	test/regress_dns.c	/^	struct evutil_addrinfo *ai;$/;"	m	struct:gai_outcome	typeref:struct:gai_outcome::evutil_addrinfo	file:
ai_addr	include/event2/util.h	/^	struct sockaddr  *ai_addr; \/* binary address *\/$/;"	m	struct:evutil_addrinfo	typeref:struct:evutil_addrinfo::sockaddr
ai_addrlen	include/event2/util.h	/^	size_t  ai_addrlen;   \/* length of ai_addr *\/$/;"	m	struct:evutil_addrinfo
ai_canonname	include/event2/util.h	/^	char   *ai_canonname; \/* canonical name for nodename *\/$/;"	m	struct:evutil_addrinfo
ai_family	http-internal.h	/^	int ai_family;$/;"	m	struct:evhttp_connection
ai_family	include/event2/util.h	/^	int     ai_family;    \/* PF_xxx *\/$/;"	m	struct:evutil_addrinfo
ai_find_by_family	test/regress_util.c	/^ai_find_by_family(struct evutil_addrinfo *ai, int family)$/;"	f
ai_find_by_protocol	test/regress_util.c	/^ai_find_by_protocol(struct evutil_addrinfo *ai, int protocol)$/;"	f
ai_find_protocol	evutil.c	/^static struct evutil_addrinfo *ai_find_protocol(struct evutil_addrinfo *ai)$/;"	f	file:
ai_flags	include/event2/util.h	/^	int     ai_flags;     \/* AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST *\/$/;"	m	struct:evutil_addrinfo
ai_next	include/event2/util.h	/^	struct evutil_addrinfo  *ai_next; \/* next structure in linked list *\/$/;"	m	struct:evutil_addrinfo	typeref:struct:evutil_addrinfo::evutil_addrinfo
ai_protocol	include/event2/util.h	/^	int     ai_protocol;  \/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:evutil_addrinfo
ai_socktype	include/event2/util.h	/^	int     ai_socktype;  \/* SOCK_xxx *\/$/;"	m	struct:evutil_addrinfo
alerted_at	test/regress_thread.c	/^	struct timeval alerted_at;$/;"	m	struct:alerted_record	typeref:struct:alerted_record::timeval	file:
alerted_record	test/regress_thread.c	/^struct alerted_record {$/;"	s	file:
alias	http-internal.h	/^	char *alias; \/* the server alias. *\/$/;"	m	struct:evhttp_server_alias
aliases	http-internal.h	/^	TAILQ_HEAD(aliasq, evhttp_server_alias) aliases;$/;"	m	struct:evhttp
alloc	include/event2/thread.h	/^	void *(*alloc)(unsigned locktype);$/;"	m	struct:evthread_lock_callbacks
alloc_condition	include/event2/thread.h	/^	void *(*alloc_condition)(unsigned condtype);$/;"	m	struct:evthread_condition_callbacks
allocated_chunks	test/regress_dns.c	/^static int allocated_chunks = 0;$/;"	v	file:
allow_dirty_shutdown	bufferevent_openssl.c	/^	unsigned allow_dirty_shutdown : 1;$/;"	m	struct:bufferevent_openssl	file:
allowed_methods	http-internal.h	/^	ev_uint16_t allowed_methods;$/;"	m	struct:evhttp
alltests	test/regress_main.c	/^const char *alltests[] = { "+..", NULL };$/;"	v
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_3	Makefile	/^am__DEPENDENCIES_3 = $(am__append_12)$/;"	m
am__DEPENDENCIES_4	Makefile	/^am__DEPENDENCIES_4 = libevent_openssl.la \\$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.h.in \\$/;"	m
am__EXEEXT_1	Makefile	/^am__EXEEXT_1 = test\/regress$(EXEEXT)$/;"	m
am__EXEEXT_2	Makefile	/^am__EXEEXT_2 = sample\/le-proxy$(EXEEXT) \\$/;"	m
am__EXEEXT_3	Makefile	/^am__EXEEXT_3 = sample\/dns-example$(EXEEXT) \\$/;"	m
am__EXEEXT_4	Makefile	/^am__EXEEXT_4 = $(am__EXEEXT_3)$/;"	m
am__EXEEXT_5	Makefile	/^am__EXEEXT_5 = test\/bench$(EXEEXT) test\/bench_cascade$(EXEEXT) \\$/;"	m
am__EXEEXT_6	Makefile	/^am__EXEEXT_6 = $(am__EXEEXT_5)$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ac_backport_259_ssizet.m4 \\$/;"	m
am__append_1	Makefile	/^am__append_1 = libevent_pthreads.la$/;"	m
am__append_10	Makefile	/^am__append_10 = test\/regress$/;"	m
am__append_11	Makefile	/^am__append_11 = test\/regress.gen.c test\/regress.gen.h$/;"	m
am__append_12	Makefile	/^am__append_12 = libevent_pthreads.la$/;"	m
am__append_14	Makefile	/^am__append_14 = test\/regress_ssl.c$/;"	m
am__append_15	Makefile	/^am__append_15 = $(OPENSSL_INCS)$/;"	m
am__append_16	Makefile	/^am__append_16 = libevent_openssl.la $(OPENSSL_LIBS) ${OPENSSL_LIBADD}$/;"	m
am__append_18	Makefile	/^am__append_18 = strlcpy.c$/;"	m
am__append_19	Makefile	/^am__append_19 = select.c$/;"	m
am__append_2	Makefile	/^am__append_2 = libevent_pthreads.pc$/;"	m
am__append_20	Makefile	/^am__append_20 = poll.c$/;"	m
am__append_23	Makefile	/^am__append_23 = epoll.c$/;"	m
am__append_25	Makefile	/^am__append_25 = signal.c$/;"	m
am__append_3	Makefile	/^am__append_3 = libevent_openssl.la$/;"	m
am__append_4	Makefile	/^am__append_4 = libevent_openssl.pc$/;"	m
am__append_6	Makefile	/^am__append_6 = sample\/le-proxy sample\/https-client$/;"	m
am__append_7	Makefile	/^am__append_7 = \\$/;"	m
am__append_8	Makefile	/^am__append_8 = $(SAMPLES)$/;"	m
am__append_9	Makefile	/^am__append_9 = $(TESTPROGRAMS)$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__check_pre	Makefile	/^am__check_pre = \\$/;"	m
am__common_driver_flags	Makefile	/^am__common_driver_flags = \\$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__copy_in_global_log_rx	Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__create_global_log	Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dist_bin_SCRIPTS_DIST	Makefile	/^am__dist_bin_SCRIPTS_DIST = event_rpcgen.py$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__global_test_result_rx	Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	Makefile	/^am__include_HEADERS_DIST = include\/evdns.h include\/event.h \\$/;"	m
am__include_event2_HEADERS_DIST	Makefile	/^am__include_event2_HEADERS_DIST = include\/event2\/buffer.h \\$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__libevent_core_la_SOURCES_DIST	Makefile	/^am__libevent_core_la_SOURCES_DIST = buffer.c bufferevent.c \\$/;"	m
am__libevent_la_SOURCES_DIST	Makefile	/^am__libevent_la_SOURCES_DIST = buffer.c bufferevent.c \\$/;"	m
am__libevent_openssl_la_SOURCES_DIST	Makefile	/^am__libevent_openssl_la_SOURCES_DIST = bufferevent_openssl.c$/;"	m
am__libevent_pthreads_la_SOURCES_DIST	Makefile	/^am__libevent_pthreads_la_SOURCES_DIST = evthread_pthread.c$/;"	m
am__list_recheck_tests	Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__noinst_HEADERS_DIST	Makefile	/^am__noinst_HEADERS_DIST = include\/event2\/buffer.h \\$/;"	m
am__objects_1	Makefile	/^am__objects_1 = strlcpy.lo$/;"	m
am__objects_10	Makefile	/^am__objects_10 = $(am__objects_1) $(am__objects_2) \\$/;"	m
am__objects_11	Makefile	/^am__objects_11 = buffer.lo bufferevent.lo bufferevent_filter.lo \\$/;"	m
am__objects_12	Makefile	/^am__objects_12 = evdns.lo event_tagging.lo evrpc.lo http.lo$/;"	m
am__objects_13	Makefile	/^am__objects_13 = test\/test_regress-regress_thread.$(OBJEXT)$/;"	m
am__objects_14	Makefile	/^am__objects_14 =  \\$/;"	m
am__objects_16	Makefile	/^am__objects_16 =  \\$/;"	m
am__objects_2	Makefile	/^am__objects_2 = select.lo$/;"	m
am__objects_3	Makefile	/^am__objects_3 = poll.lo$/;"	m
am__objects_6	Makefile	/^am__objects_6 = epoll.lo$/;"	m
am__objects_8	Makefile	/^am__objects_8 = signal.lo$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__recheck_rx	Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__rst_title	Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__sample_https_client_SOURCES_DIST	Makefile	/^am__sample_https_client_SOURCES_DIST = sample\/https-client.c \\$/;"	m
am__sample_le_proxy_SOURCES_DIST	Makefile	/^am__sample_le_proxy_SOURCES_DIST = sample\/le-proxy.c$/;"	m
am__set_TESTS_bases	Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_b	Makefile	/^am__set_b = \\$/;"	m
am__sh_e_setup	Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__test_logs1	Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs2	Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_regress_SOURCES_DIST	Makefile	/^am__test_regress_SOURCES_DIST = test\/regress.c test\/regress.gen.c \\$/;"	m
am__tty_colors	Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors_dummy	Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libevent_core_la_OBJECTS	Makefile	/^am_libevent_core_la_OBJECTS = $(am__objects_11)$/;"	m
am_libevent_core_la_rpath	Makefile	/^am_libevent_core_la_rpath = -rpath $(libdir)$/;"	m
am_libevent_extra_la_OBJECTS	Makefile	/^am_libevent_extra_la_OBJECTS = $(am__objects_12)$/;"	m
am_libevent_extra_la_rpath	Makefile	/^am_libevent_extra_la_rpath = -rpath $(libdir)$/;"	m
am_libevent_la_OBJECTS	Makefile	/^am_libevent_la_OBJECTS = $(am__objects_11) $(am__objects_12)$/;"	m
am_libevent_la_rpath	Makefile	/^am_libevent_la_rpath = -rpath $(libdir)$/;"	m
am_libevent_openssl_la_OBJECTS	Makefile	/^am_libevent_openssl_la_OBJECTS =  \\$/;"	m
am_libevent_openssl_la_rpath	Makefile	/^am_libevent_openssl_la_rpath =  \\$/;"	m
am_libevent_pthreads_la_OBJECTS	Makefile	/^am_libevent_pthreads_la_OBJECTS = evthread_pthread.lo$/;"	m
am_libevent_pthreads_la_rpath	Makefile	/^am_libevent_pthreads_la_rpath =  \\$/;"	m
am_sample_dns_example_OBJECTS	Makefile	/^am_sample_dns_example_OBJECTS = sample\/dns-example.$(OBJEXT)$/;"	m
am_sample_event_read_fifo_OBJECTS	Makefile	/^am_sample_event_read_fifo_OBJECTS = sample\/event-read-fifo.$(OBJEXT)$/;"	m
am_sample_hello_world_OBJECTS	Makefile	/^am_sample_hello_world_OBJECTS = sample\/hello-world.$(OBJEXT)$/;"	m
am_sample_http_connect_OBJECTS	Makefile	/^am_sample_http_connect_OBJECTS = sample\/http-connect.$(OBJEXT)$/;"	m
am_sample_http_server_OBJECTS	Makefile	/^am_sample_http_server_OBJECTS = sample\/http-server.$(OBJEXT)$/;"	m
am_sample_https_client_OBJECTS	Makefile	/^am_sample_https_client_OBJECTS =  \\$/;"	m
am_sample_le_proxy_OBJECTS	Makefile	/^am_sample_le_proxy_OBJECTS = sample\/le-proxy.$(OBJEXT)$/;"	m
am_sample_signal_test_OBJECTS	Makefile	/^am_sample_signal_test_OBJECTS = sample\/signal-test.$(OBJEXT)$/;"	m
am_sample_time_test_OBJECTS	Makefile	/^am_sample_time_test_OBJECTS = sample\/time-test.$(OBJEXT)$/;"	m
am_test_bench_OBJECTS	Makefile	/^am_test_bench_OBJECTS = test\/bench.$(OBJEXT)$/;"	m
am_test_bench_cascade_OBJECTS	Makefile	/^am_test_bench_cascade_OBJECTS = test\/bench_cascade.$(OBJEXT)$/;"	m
am_test_bench_http_OBJECTS	Makefile	/^am_test_bench_http_OBJECTS = test\/bench_http.$(OBJEXT)$/;"	m
am_test_bench_httpclient_OBJECTS	Makefile	/^am_test_bench_httpclient_OBJECTS = test\/bench_httpclient.$(OBJEXT)$/;"	m
am_test_regress_OBJECTS	Makefile	/^am_test_regress_OBJECTS = test\/test_regress-regress.$(OBJEXT) \\$/;"	m
am_test_test_changelist_OBJECTS	Makefile	/^am_test_test_changelist_OBJECTS = test\/test-changelist.$(OBJEXT)$/;"	m
am_test_test_closed_OBJECTS	Makefile	/^am_test_test_closed_OBJECTS = test\/test-closed.$(OBJEXT)$/;"	m
am_test_test_dumpevents_OBJECTS	Makefile	/^am_test_test_dumpevents_OBJECTS = test\/test-dumpevents.$(OBJEXT)$/;"	m
am_test_test_eof_OBJECTS	Makefile	/^am_test_test_eof_OBJECTS = test\/test-eof.$(OBJEXT)$/;"	m
am_test_test_fdleak_OBJECTS	Makefile	/^am_test_test_fdleak_OBJECTS = test\/test-fdleak.$(OBJEXT)$/;"	m
am_test_test_init_OBJECTS	Makefile	/^am_test_test_init_OBJECTS = test\/test-init.$(OBJEXT)$/;"	m
am_test_test_ratelim_OBJECTS	Makefile	/^am_test_test_ratelim_OBJECTS = test\/test-ratelim.$(OBJEXT)$/;"	m
am_test_test_time_OBJECTS	Makefile	/^am_test_test_time_OBJECTS = test\/test-time.$(OBJEXT)$/;"	m
am_test_test_weof_OBJECTS	Makefile	/^am_test_test_weof_OBJECTS = test\/test-weof.$(OBJEXT)$/;"	m
announce	test/test.sh	/^announce () {$/;"	f
announce_n	test/test.sh	/^announce_n () {$/;"	f
ans	test/regress_testutils.h	/^	const char *ans;$/;"	m	struct:regress_dns_server_table
anstype	test/regress_testutils.h	/^	const char *anstype;$/;"	m	struct:regress_dns_server_table
answer	evdns.c	/^	struct server_reply_item *answer; \/* linked list of answer RRs *\/$/;"	m	struct:server_request	typeref:struct:server_request::server_reply_item	file:
apply_numeric_port_hack	evutil.c	/^apply_numeric_port_hack(int port, struct evutil_addrinfo **ai)$/;"	f	file:
apply_socktype_protocol_hack	evutil.c	/^apply_socktype_protocol_hack(struct evutil_addrinfo *ai)$/;"	f	file:
arc4_addrandom	arc4random.c	/^arc4_addrandom(const unsigned char *dat, int datlen)$/;"	f	file:
arc4_count	arc4random.c	/^static int arc4_count;$/;"	v	file:
arc4_getbyte	arc4random.c	/^arc4_getbyte(void)$/;"	f	file:
arc4_getword	arc4random.c	/^arc4_getword(void)$/;"	f	file:
arc4_init	arc4random.c	/^arc4_init(void)$/;"	f	file:
arc4_seed	arc4random.c	/^arc4_seed(void)$/;"	f	file:
arc4_seed_proc_sys_kernel_random_uuid	arc4random.c	/^arc4_seed_proc_sys_kernel_random_uuid(void)$/;"	f	file:
arc4_seed_sysctl_bsd	arc4random.c	/^arc4_seed_sysctl_bsd(void)$/;"	f	file:
arc4_seed_sysctl_linux	arc4random.c	/^arc4_seed_sysctl_linux(void)$/;"	f	file:
arc4_seed_urandom	arc4random.c	/^arc4_seed_urandom(void)$/;"	f	file:
arc4_seed_urandom_helper_	arc4random.c	/^static int arc4_seed_urandom_helper_(const char *fname)$/;"	f	file:
arc4_seed_win32	arc4random.c	/^arc4_seed_win32(void)$/;"	f	file:
arc4_seeded_ok	arc4random.c	/^static int arc4_seeded_ok;$/;"	v	file:
arc4_stir	arc4random.c	/^arc4_stir(void)$/;"	f	file:
arc4_stir_if_needed	arc4random.c	/^arc4_stir_if_needed(void)$/;"	f	file:
arc4_stir_pid	arc4random.c	/^static pid_t arc4_stir_pid;$/;"	v	file:
arc4_stream	arc4random.c	/^struct arc4_stream {$/;"	s	file:
arc4rand_lock	evutil_rand.c	/^static void *arc4rand_lock;$/;"	v	file:
arc4random	arc4random.c	/^arc4random(void)$/;"	f
arc4random_addrandom	arc4random.c	/^arc4random_addrandom(const unsigned char *dat, int datlen)$/;"	f
arc4random_buf	arc4random.c	/^arc4random_buf(void *buf_, size_t n)$/;"	f
arc4random_stir	arc4random.c	/^arc4random_stir(void)$/;"	f
arc4random_uniform	arc4random.c	/^arc4random_uniform(unsigned int upper_bound)$/;"	f
arc4random_urandom_filename	arc4random.c	/^static char *arc4random_urandom_filename = NULL;$/;"	v	file:
arg	event-internal.h	/^	void *arg;$/;"	m	struct:event_once
arg	evmap.c	/^	void *arg;$/;"	m	struct:evmap_foreach_event_helper	file:
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
async_readcb	test/regress_iocp.c	/^async_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
attr_recursive	evthread_pthread.c	/^static pthread_mutexattr_t attr_recursive; \/\/ 用于设置递归锁的$/;"	v	file:
authority	evdns.c	/^	struct server_reply_item *authority; \/* linked list of authority RRs *\/$/;"	m	struct:server_request	typeref:struct:server_request::server_reply_item	file:
avoid_method	event-internal.h	/^	const char *avoid_method;$/;"	m	struct:event_config_entry
b	test/regress_util.c	/^	const char *b;$/;"	m	struct:example_struct	file:
bad_reentrant_run_loop_cb	test/regress.c	/^bad_reentrant_run_loop_cb(evutil_socket_t fd, short what, void *ptr)$/;"	f	file:
base	evdns.c	/^	struct evdns_base *base;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::evdns_base	file:
base	evdns.c	/^	struct evdns_base *base;$/;"	m	struct:nameserver	typeref:struct:nameserver::evdns_base	file:
base	evdns.c	/^	struct evdns_base *base;$/;"	m	struct:request	typeref:struct:request::evdns_base	file:
base	evdns.c	/^	struct evdns_server_request base;$/;"	m	struct:server_request	typeref:struct:server_request::evdns_server_request	file:
base	event-internal.h	/^	struct event_base *base;$/;"	m	struct:common_timeout_list	typeref:struct:common_timeout_list::event_base
base	evrpc-internal.h	/^	struct event_base *base;$/;"	m	struct:evrpc_pool	typeref:struct:evrpc_pool::event_base
base	http-internal.h	/^	struct event_base *base;$/;"	m	struct:evhttp	typeref:struct:evhttp::event_base
base	http-internal.h	/^	struct event_base *base;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::event_base
base	include/event2/rpc_struct.h	/^	struct evrpc_base *base;$/;"	m	struct:evrpc	typeref:struct:evrpc::evrpc_base
base	listener.c	/^	struct evconnlistener base;$/;"	m	struct:evconnlistener_event	typeref:struct:evconnlistener_event::evconnlistener	file:
base	listener.c	/^	struct evconnlistener base;$/;"	m	struct:evconnlistener_iocp	typeref:struct:evconnlistener_iocp::evconnlistener	file:
base	sample/https-client.c	/^static struct event_base *base;$/;"	v	typeref:struct:event_base	file:
base	sample/le-proxy.c	/^static struct event_base *base;$/;"	v	typeref:struct:event_base	file:
base	test/bench_httpclient.c	/^struct event_base *base = NULL;$/;"	v	typeref:struct:event_base
base	test/regress.h	/^	struct event_base *base;$/;"	m	struct:basic_test_data	typeref:struct:basic_test_data::event_base
base	test/regress_dns.c	/^	struct event_base *base;$/;"	m	struct:gaic_request_status	typeref:struct:gaic_request_status::event_base	file:
base	test/regress_dns.c	/^	struct event_base *base;$/;"	m	struct:testleak_env_t	typeref:struct:testleak_env_t::event_base	file:
base	test/regress_http.c	/^	struct event_base *base;$/;"	m	struct:chunk_req_state	typeref:struct:chunk_req_state::event_base	file:
base	test/regress_http.c	/^	struct event_base *base;$/;"	m	struct:terminate_state	typeref:struct:terminate_state::event_base	file:
basic_cb_args	test/regress.c	/^struct basic_cb_args$/;"	s	file:
basic_read_cb	test/regress.c	/^basic_read_cb(evutil_socket_t fd, short event, void *data)$/;"	f	file:
basic_setup	test/regress_main.c	/^const struct testcase_setup_t basic_setup = {$/;"	v	typeref:struct:testcase_setup_t
basic_test_cleanup	test/regress_main.c	/^basic_test_cleanup(const struct testcase_t *testcase, void *ptr)$/;"	f	file:
basic_test_data	test/regress.h	/^struct basic_test_data {$/;"	s
basic_test_setup	test/regress_main.c	/^basic_test_setup(const struct testcase_t *testcase)$/;"	f	file:
basic_thread	test/regress_thread.c	/^basic_thread(void *arg)$/;"	f	file:
be_async_ctrl	bufferevent_async.c	/^be_async_ctrl(struct bufferevent *bev, enum bufferevent_ctrl_op op,$/;"	f	file:
be_async_destruct	bufferevent_async.c	/^be_async_destruct(struct bufferevent *bev)$/;"	f	file:
be_async_disable	bufferevent_async.c	/^be_async_disable(struct bufferevent *bev, short what)$/;"	f	file:
be_async_enable	bufferevent_async.c	/^be_async_enable(struct bufferevent *buf, short what)$/;"	f	file:
be_async_flush	bufferevent_async.c	/^be_async_flush(struct bufferevent *bev, short what,$/;"	f	file:
be_async_inbuf_callback	bufferevent_async.c	/^be_async_inbuf_callback(struct evbuffer *buf,$/;"	f	file:
be_async_outbuf_callback	bufferevent_async.c	/^be_async_outbuf_callback(struct evbuffer *buf,$/;"	f	file:
be_conn_hostname_result	test/regress_dns.c	/^struct be_conn_hostname_result {$/;"	s	file:
be_connect_hostname_base	test/regress_dns.c	/^static struct event_base *be_connect_hostname_base = NULL;$/;"	v	typeref:struct:event_base	file:
be_connect_hostname_event_cb	test/regress_dns.c	/^be_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
be_filter_ctrl	bufferevent_filter.c	/^be_filter_ctrl(struct bufferevent *bev, enum bufferevent_ctrl_op op,$/;"	f	file:
be_filter_destruct	bufferevent_filter.c	/^be_filter_destruct(struct bufferevent *bev)$/;"	f	file:
be_filter_disable	bufferevent_filter.c	/^be_filter_disable(struct bufferevent *bev, short event)$/;"	f	file:
be_filter_enable	bufferevent_filter.c	/^be_filter_enable(struct bufferevent *bev, short event)$/;"	f	file:
be_filter_eventcb	bufferevent_filter.c	/^be_filter_eventcb(struct bufferevent *underlying, short what, void *me_)$/;"	f	file:
be_filter_flush	bufferevent_filter.c	/^be_filter_flush(struct bufferevent *bufev,$/;"	f	file:
be_filter_process_input	bufferevent_filter.c	/^be_filter_process_input(struct bufferevent_filtered *bevf,$/;"	f	file:
be_filter_process_output	bufferevent_filter.c	/^be_filter_process_output(struct bufferevent_filtered *bevf,$/;"	f	file:
be_filter_read_nolock_	bufferevent_filter.c	/^be_filter_read_nolock_(struct bufferevent *underlying, void *me_)$/;"	f	file:
be_filter_readcb	bufferevent_filter.c	/^be_filter_readcb(struct bufferevent *underlying, void *me_)$/;"	f	file:
be_filter_unlink	bufferevent_filter.c	/^be_filter_unlink(struct bufferevent *bev)$/;"	f	file:
be_filter_writecb	bufferevent_filter.c	/^be_filter_writecb(struct bufferevent *underlying, void *me_)$/;"	f	file:
be_getaddrinfo_server_cb	test/regress_dns.c	/^be_getaddrinfo_server_cb(struct evdns_server_request *req, void *data)$/;"	f	file:
be_null_filter	bufferevent_filter.c	/^be_null_filter(struct evbuffer *src, struct evbuffer *dst, ev_ssize_t lim,$/;"	f	file:
be_openssl_adj_timeouts	bufferevent_openssl.c	/^be_openssl_adj_timeouts(struct bufferevent *bev)$/;"	f	file:
be_openssl_auto_fd	bufferevent_openssl.c	/^be_openssl_auto_fd(struct bufferevent_openssl *bev_ssl, int fd)$/;"	f	file:
be_openssl_ctrl	bufferevent_openssl.c	/^be_openssl_ctrl(struct bufferevent *bev,$/;"	f	file:
be_openssl_destruct	bufferevent_openssl.c	/^be_openssl_destruct(struct bufferevent *bev)$/;"	f	file:
be_openssl_disable	bufferevent_openssl.c	/^be_openssl_disable(struct bufferevent *bev, short events)$/;"	f	file:
be_openssl_enable	bufferevent_openssl.c	/^be_openssl_enable(struct bufferevent *bev, short events)$/;"	f	file:
be_openssl_eventcb	bufferevent_openssl.c	/^be_openssl_eventcb(struct bufferevent *bev_base, short what, void *ctx)$/;"	f	file:
be_openssl_flush	bufferevent_openssl.c	/^be_openssl_flush(struct bufferevent *bufev,$/;"	f	file:
be_openssl_handshakecb	bufferevent_openssl.c	/^be_openssl_handshakecb(struct bufferevent *bev_base, void *ctx)$/;"	f	file:
be_openssl_handshakeeventcb	bufferevent_openssl.c	/^be_openssl_handshakeeventcb(evutil_socket_t fd, short what, void *ptr)$/;"	f	file:
be_openssl_outbuf_cb	bufferevent_openssl.c	/^be_openssl_outbuf_cb(struct evbuffer *buf,$/;"	f	file:
be_openssl_readcb	bufferevent_openssl.c	/^be_openssl_readcb(struct bufferevent *bev_base, void *ctx)$/;"	f	file:
be_openssl_readeventcb	bufferevent_openssl.c	/^be_openssl_readeventcb(evutil_socket_t fd, short what, void *ptr)$/;"	f	file:
be_openssl_set_fd	bufferevent_openssl.c	/^be_openssl_set_fd(struct bufferevent_openssl *bev_ssl,$/;"	f	file:
be_openssl_unlink	bufferevent_openssl.c	/^be_openssl_unlink(struct bufferevent *bev)$/;"	f	file:
be_openssl_writecb	bufferevent_openssl.c	/^be_openssl_writecb(struct bufferevent *bev_base, void *ctx)$/;"	f	file:
be_openssl_writeeventcb	bufferevent_openssl.c	/^be_openssl_writeeventcb(evutil_socket_t fd, short what, void *ptr)$/;"	f	file:
be_ops	include/event2/bufferevent_struct.h	/^	const struct bufferevent_ops *be_ops;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::bufferevent_ops
be_pair_destruct	bufferevent_pair.c	/^be_pair_destruct(struct bufferevent *bev)$/;"	f	file:
be_pair_disable	bufferevent_pair.c	/^be_pair_disable(struct bufferevent *bev, short events)$/;"	f	file:
be_pair_enable	bufferevent_pair.c	/^be_pair_enable(struct bufferevent *bufev, short events)$/;"	f	file:
be_pair_flush	bufferevent_pair.c	/^be_pair_flush(struct bufferevent *bev, short iotype,$/;"	f	file:
be_pair_outbuf_cb	bufferevent_pair.c	/^be_pair_outbuf_cb(struct evbuffer *outbuf,$/;"	f	file:
be_pair_transfer	bufferevent_pair.c	/^be_pair_transfer(struct bufferevent *src, struct bufferevent *dst,$/;"	f	file:
be_pair_unlink	bufferevent_pair.c	/^be_pair_unlink(struct bufferevent *bev)$/;"	f	file:
be_pair_wants_to_talk	bufferevent_pair.c	/^be_pair_wants_to_talk(struct bufferevent_pair *src,$/;"	f	file:
be_readbuf_full	bufferevent_filter.c	/^be_readbuf_full(struct bufferevent_filtered *bevf,$/;"	f	file:
be_socket_ctrl	bufferevent_sock.c	/^be_socket_ctrl(struct bufferevent *bev, enum bufferevent_ctrl_op op,$/;"	f	file:
be_socket_destruct	bufferevent_sock.c	/^be_socket_destruct(struct bufferevent *bufev)$/;"	f	file:
be_socket_disable	bufferevent_sock.c	/^be_socket_disable(struct bufferevent *bufev, short event)$/;"	f	file:
be_socket_enable	bufferevent_sock.c	/^be_socket_enable(struct bufferevent *bufev, short event)$/;"	f	file:
be_socket_flush	bufferevent_sock.c	/^be_socket_flush(struct bufferevent *bev, short iotype,$/;"	f	file:
be_socket_setfd	bufferevent_sock.c	/^be_socket_setfd(struct bufferevent *bufev, evutil_socket_t fd)$/;"	f	file:
be_underlying_writebuf_full	bufferevent_filter.c	/^be_underlying_writebuf_full(struct bufferevent_filtered *bevf,$/;"	f	file:
bev	bufferevent-internal.h	/^	struct bufferevent bev;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::bufferevent
bev	bufferevent_async.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_async	typeref:struct:bufferevent_async::bufferevent_private	file:
bev	bufferevent_filter.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::bufferevent_private	file:
bev	bufferevent_openssl.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_openssl	typeref:struct:bufferevent_openssl::bufferevent_private	file:
bev	bufferevent_pair.c	/^	struct bufferevent_private bev;$/;"	m	struct:bufferevent_pair	typeref:struct:bufferevent_pair::bufferevent_private	file:
bev	test/regress_http.c	/^	struct bufferevent *bev;$/;"	m	struct:terminate_state	typeref:struct:terminate_state::bufferevent	file:
bev_async_add_read	bufferevent_async.c	/^bev_async_add_read(struct bufferevent_async *beva)$/;"	f	file:
bev_async_add_write	bufferevent_async.c	/^bev_async_add_write(struct bufferevent_async *beva)$/;"	f	file:
bev_async_consider_reading	bufferevent_async.c	/^bev_async_consider_reading(struct bufferevent_async *beva)$/;"	f	file:
bev_async_consider_writing	bufferevent_async.c	/^bev_async_consider_writing(struct bufferevent_async *beva)$/;"	f	file:
bev_async_del_read	bufferevent_async.c	/^bev_async_del_read(struct bufferevent_async *beva)$/;"	f	file:
bev_async_del_write	bufferevent_async.c	/^bev_async_del_write(struct bufferevent_async *beva)$/;"	f	file:
bev_async_set_wsa_error	bufferevent_async.c	/^bev_async_set_wsa_error(struct bufferevent *bev, struct event_overlapped *eo)$/;"	f	file:
bev_group_random_element_	bufferevent_ratelim.c	/^bev_group_random_element_(struct bufferevent_rate_limit_group *group)$/;"	f	file:
bev_group_refill_callback_	bufferevent_ratelim.c	/^bev_group_refill_callback_(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
bev_group_suspend_reading_	bufferevent_ratelim.c	/^bev_group_suspend_reading_(struct bufferevent_rate_limit_group *g)$/;"	f	file:
bev_group_suspend_writing_	bufferevent_ratelim.c	/^bev_group_suspend_writing_(struct bufferevent_rate_limit_group *g)$/;"	f	file:
bev_group_unsuspend_reading_	bufferevent_ratelim.c	/^bev_group_unsuspend_reading_(struct bufferevent_rate_limit_group *g)$/;"	f	file:
bev_group_unsuspend_writing_	bufferevent_ratelim.c	/^bev_group_unsuspend_writing_(struct bufferevent_rate_limit_group *g)$/;"	f	file:
bev_refill_callback_	bufferevent_ratelim.c	/^bev_refill_callback_(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
bev_timeout_event_cb	test/regress_bufferevent.c	/^bev_timeout_event_cb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
bev_timeout_write_cb	test/regress_bufferevent.c	/^bev_timeout_write_cb(struct bufferevent *bev, void *arg)$/;"	f	file:
bevcb	http-internal.h	/^	struct bufferevent* (*bevcb)(struct event_base *, void *);$/;"	m	struct:evhttp	typeref:struct:evhttp::bevcb
bevcbarg	http-internal.h	/^	void *bevcbarg;$/;"	m	struct:evhttp
bevs	test/test-ratelim.c	/^struct bufferevent **bevs;$/;"	v	typeref:struct:bufferevent
bind_address	http-internal.h	/^	char *bind_address;		\/* address to use for binding the src *\/$/;"	m	struct:evhttp_connection
bind_port	http-internal.h	/^	ev_uint16_t bind_port;		\/* local port for binding the src *\/$/;"	m	struct:evhttp_connection
bind_socket	http.c	/^bind_socket(const char *address, ev_uint16_t port, int reuse)$/;"	f	file:
bind_socket_ai	http.c	/^bind_socket_ai(struct evutil_addrinfo *ai, int reuse)$/;"	f	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bio_bufferevent_ctrl	bufferevent_openssl.c	/^bio_bufferevent_ctrl(BIO *b, int cmd, long num, void *ptr)$/;"	f	file:
bio_bufferevent_free	bufferevent_openssl.c	/^bio_bufferevent_free(BIO *b)$/;"	f	file:
bio_bufferevent_new	bufferevent_openssl.c	/^bio_bufferevent_new(BIO *b)$/;"	f	file:
bio_bufferevent_puts	bufferevent_openssl.c	/^bio_bufferevent_puts(BIO *b, const char *s)$/;"	f	file:
bio_bufferevent_read	bufferevent_openssl.c	/^bio_bufferevent_read(BIO *b, char *out, int outlen)$/;"	f	file:
bio_bufferevent_write	bufferevent_openssl.c	/^bio_bufferevent_write(BIO *b, const char *in, int inlen)$/;"	f	file:
bio_data_counts	bufferevent_openssl.c	/^struct bio_data_counts {$/;"	s	file:
bio_rwcount_ctrl	test/regress_ssl.c	/^bio_rwcount_ctrl(BIO *b, int cmd, long num, void *ptr)$/;"	f	file:
bio_rwcount_free	test/regress_ssl.c	/^bio_rwcount_free(BIO *b)$/;"	f	file:
bio_rwcount_new	test/regress_ssl.c	/^bio_rwcount_new(BIO *b)$/;"	f	file:
bio_rwcount_puts	test/regress_ssl.c	/^bio_rwcount_puts(BIO *b, const char *s)$/;"	f	file:
bio_rwcount_read	test/regress_ssl.c	/^bio_rwcount_read(BIO *b, char *out, int outlen)$/;"	f	file:
bio_rwcount_write	test/regress_ssl.c	/^bio_rwcount_write(BIO *b, const char *in, int inlen)$/;"	f	file:
body_size	include/event2/http_struct.h	/^	size_t body_size;$/;"	m	struct:evhttp_request
both	test/regress.c	/^struct both {$/;"	s	file:
bracket_addr_ok	http.c	/^bracket_addr_ok(const char *s, const char *eos)$/;"	f	file:
break_cb	test/regress.c	/^break_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
bufev	http-internal.h	/^	struct bufferevent *bufev;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::bufferevent
buffer	buffer_iocp.c	/^	struct evbuffer buffer;$/;"	m	struct:evbuffer_overlapped	typeref:struct:evbuffer_overlapped::evbuffer	file:
buffer	evbuffer-internal.h	/^	unsigned char *buffer;$/;"	m	struct:evbuffer_chain
buffer_len	evbuffer-internal.h	/^	size_t buffer_len;$/;"	m	struct:evbuffer_chain
bufferevent	include/event2/bufferevent.h	/^struct bufferevent$/;"	s
bufferevent	include/event2/bufferevent_struct.h	/^struct bufferevent {$/;"	s
bufferevent_add_event_	bufferevent.c	/^bufferevent_add_event_(struct event *ev, const struct timeval *tv)$/;"	f
bufferevent_add_to_rate_limit_group	bufferevent_ratelim.c	/^bufferevent_add_to_rate_limit_group(struct bufferevent *bev,$/;"	f
bufferevent_async	bufferevent_async.c	/^struct bufferevent_async {$/;"	s	file:
bufferevent_async_can_connect_	bufferevent_async.c	/^bufferevent_async_can_connect_(struct bufferevent *bev)$/;"	f
bufferevent_async_connect_	bufferevent_async.c	/^bufferevent_async_connect_(struct bufferevent *bev, evutil_socket_t fd,$/;"	f
bufferevent_async_new_	bufferevent_async.c	/^bufferevent_async_new_(struct event_base *base,$/;"	f
bufferevent_async_set_connected_	bufferevent_async.c	/^bufferevent_async_set_connected_(struct bufferevent *bev)$/;"	f
bufferevent_base_set	bufferevent_sock.c	/^bufferevent_base_set(struct event_base *base, struct bufferevent *bufev)$/;"	f
bufferevent_cancel_all_	bufferevent.c	/^bufferevent_cancel_all_(struct bufferevent *bev)$/;"	f	file:
bufferevent_connect_getaddrinfo_cb	bufferevent_sock.c	/^bufferevent_connect_getaddrinfo_cb(int result, struct evutil_addrinfo *ai,$/;"	f	file:
bufferevent_connect_test_flags	test/regress_bufferevent.c	/^static int bufferevent_connect_test_flags = 0;$/;"	v	file:
bufferevent_ctrl_data	bufferevent-internal.h	/^union bufferevent_ctrl_data {$/;"	u
bufferevent_ctrl_op	bufferevent-internal.h	/^enum bufferevent_ctrl_op {$/;"	g
bufferevent_data_cb	include/event2/bufferevent.h	/^typedef void (*bufferevent_data_cb)(struct bufferevent *bev, void *ctx);$/;"	t
bufferevent_decref	bufferevent.c	/^bufferevent_decref(struct bufferevent *bufev)$/;"	f
bufferevent_decref_	bufferevent-internal.h	385;"	d
bufferevent_decref_and_unlock_	bufferevent.c	/^bufferevent_decref_and_unlock_(struct bufferevent *bufev)$/;"	f
bufferevent_decrement_read_buckets_	bufferevent_ratelim.c	/^bufferevent_decrement_read_buckets_(struct bufferevent_private *bev, ev_ssize_t bytes)$/;"	f
bufferevent_decrement_read_limit	bufferevent_ratelim.c	/^bufferevent_decrement_read_limit(struct bufferevent *bev, ev_ssize_t decr)$/;"	f
bufferevent_decrement_write_buckets_	bufferevent_ratelim.c	/^bufferevent_decrement_write_buckets_(struct bufferevent_private *bev, ev_ssize_t bytes)$/;"	f
bufferevent_decrement_write_limit	bufferevent_ratelim.c	/^bufferevent_decrement_write_limit(struct bufferevent *bev, ev_ssize_t decr)$/;"	f
bufferevent_disable	bufferevent.c	/^bufferevent_disable(struct bufferevent *bufev, short event)$/;"	f
bufferevent_disable_hard_	bufferevent.c	/^bufferevent_disable_hard_(struct bufferevent *bufev, short event)$/;"	f
bufferevent_enable	bufferevent.c	/^bufferevent_enable(struct bufferevent *bufev, short event)$/;"	f
bufferevent_enable_locking_	bufferevent.c	/^bufferevent_enable_locking_(struct bufferevent *bufev, void *lock)$/;"	f
bufferevent_event_cb	include/event2/bufferevent.h	/^typedef void (*bufferevent_event_cb)(struct bufferevent *bev, short what, void *ctx);$/;"	t
bufferevent_filter_cb	include/event2/bufferevent.h	/^typedef enum bufferevent_filter_result (*bufferevent_filter_cb)($/;"	t	typeref:enum:bufferevent_filter_cb
bufferevent_filter_data_stuck	test/regress_bufferevent.c	/^struct bufferevent_filter_data_stuck {$/;"	s	file:
bufferevent_filter_data_stuck_inputcb	test/regress_bufferevent.c	/^bufferevent_filter_data_stuck_inputcb($/;"	f	file:
bufferevent_filter_data_stuck_readcb	test/regress_bufferevent.c	/^bufferevent_filter_data_stuck_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
bufferevent_filter_new	bufferevent_filter.c	/^bufferevent_filter_new(struct bufferevent *underlying,$/;"	f
bufferevent_filter_result	include/event2/bufferevent.h	/^enum bufferevent_filter_result {$/;"	g
bufferevent_filtered	bufferevent_filter.c	/^struct bufferevent_filtered {$/;"	s	file:
bufferevent_filtered_inbuf_cb	bufferevent_filter.c	/^bufferevent_filtered_inbuf_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_filtered_outbuf_cb	bufferevent_filter.c	/^bufferevent_filtered_outbuf_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_finalize_cb_	bufferevent.c	/^bufferevent_finalize_cb_(struct event_callback *evcb, void *arg_)$/;"	f	file:
bufferevent_flush	bufferevent.c	/^bufferevent_flush(struct bufferevent *bufev,$/;"	f
bufferevent_flush_mode	include/event2/bufferevent.h	/^enum bufferevent_flush_mode {$/;"	g
bufferevent_free	bufferevent.c	/^bufferevent_free(struct bufferevent *bufev)$/;"	f
bufferevent_generic_adj_existing_timeouts_	bufferevent.c	/^bufferevent_generic_adj_existing_timeouts_(struct bufferevent *bev)$/;"	f
bufferevent_generic_adj_timeouts_	bufferevent.c	/^bufferevent_generic_adj_timeouts_(struct bufferevent *bev)$/;"	f
bufferevent_generic_read_timeout_cb	bufferevent.c	/^bufferevent_generic_read_timeout_cb(evutil_socket_t fd, short event, void *ctx)$/;"	f	file:
bufferevent_generic_write_timeout_cb	bufferevent.c	/^bufferevent_generic_write_timeout_cb(evutil_socket_t fd, short event, void *ctx)$/;"	f	file:
bufferevent_get_base	bufferevent.c	/^bufferevent_get_base(struct bufferevent *bufev)$/;"	f
bufferevent_get_enabled	bufferevent.c	/^bufferevent_get_enabled(struct bufferevent *bufev)$/;"	f
bufferevent_get_input	bufferevent.c	/^bufferevent_get_input(struct bufferevent *bufev)$/;"	f
bufferevent_get_max_single_read	bufferevent_ratelim.c	/^bufferevent_get_max_single_read(struct bufferevent *bev)$/;"	f
bufferevent_get_max_single_write	bufferevent_ratelim.c	/^bufferevent_get_max_single_write(struct bufferevent *bev)$/;"	f
bufferevent_get_max_to_read	bufferevent_ratelim.c	/^bufferevent_get_max_to_read(struct bufferevent *bev)$/;"	f
bufferevent_get_max_to_write	bufferevent_ratelim.c	/^bufferevent_get_max_to_write(struct bufferevent *bev)$/;"	f
bufferevent_get_openssl_error	bufferevent_openssl.c	/^bufferevent_get_openssl_error(struct bufferevent *bev)$/;"	f
bufferevent_get_options_	bufferevent.c	/^bufferevent_get_options_(struct bufferevent *bev)$/;"	f
bufferevent_get_output	bufferevent.c	/^bufferevent_get_output(struct bufferevent *bufev)$/;"	f
bufferevent_get_priority	bufferevent.c	/^bufferevent_get_priority(const struct bufferevent *bufev)$/;"	f
bufferevent_get_read_limit	bufferevent_ratelim.c	/^bufferevent_get_read_limit(struct bufferevent *bev)$/;"	f
bufferevent_get_read_max_	bufferevent_ratelim.c	/^bufferevent_get_read_max_(struct bufferevent_private *bev)$/;"	f
bufferevent_get_rlim_max_	bufferevent_ratelim.c	/^bufferevent_get_rlim_max_(struct bufferevent_private *bev, int is_write)$/;"	f	file:
bufferevent_get_token_bucket_cfg	bufferevent_ratelim.c	/^bufferevent_get_token_bucket_cfg(const struct bufferevent *bev) {$/;"	f
bufferevent_get_underlying	bufferevent.c	/^bufferevent_get_underlying(struct bufferevent *bev)$/;"	f
bufferevent_get_write_limit	bufferevent_ratelim.c	/^bufferevent_get_write_limit(struct bufferevent *bev)$/;"	f
bufferevent_get_write_max_	bufferevent_ratelim.c	/^bufferevent_get_write_max_(struct bufferevent_private *bev)$/;"	f
bufferevent_getcb	bufferevent.c	/^bufferevent_getcb(struct bufferevent *bufev,$/;"	f
bufferevent_getfd	bufferevent.c	/^bufferevent_getfd(struct bufferevent *bev)$/;"	f
bufferevent_getwatermark	bufferevent.c	/^bufferevent_getwatermark(struct bufferevent *bufev, short events,$/;"	f
bufferevent_inbuf_wm_cb	bufferevent.c	/^bufferevent_inbuf_wm_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_incref	bufferevent.c	/^bufferevent_incref(struct bufferevent *bufev)$/;"	f
bufferevent_incref_	bufferevent-internal.h	378;"	d
bufferevent_incref_and_lock_	bufferevent.c	/^bufferevent_incref_and_lock_(struct bufferevent *bufev)$/;"	f
bufferevent_init_common_	bufferevent.c	/^bufferevent_init_common_(struct bufferevent_private *bufev_private,$/;"	f
bufferevent_init_generic_timeout_cbs_	bufferevent.c	/^bufferevent_init_generic_timeout_cbs_(struct bufferevent *bev)$/;"	f
bufferevent_input_filter	test/regress_bufferevent.c	/^bufferevent_input_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
bufferevent_iocp_testcases	test/regress_bufferevent.c	/^struct testcase_t bufferevent_iocp_testcases[] = {$/;"	v	typeref:struct:testcase_t
bufferevent_lock	bufferevent.c	/^bufferevent_lock(struct bufferevent *bev)$/;"	f
bufferevent_new	bufferevent_sock.c	/^bufferevent_new(evutil_socket_t fd,$/;"	f
bufferevent_openssl	bufferevent_openssl.c	/^struct bufferevent_openssl {$/;"	s	file:
bufferevent_openssl_check_fd	test/regress_ssl.c	/^bufferevent_openssl_check_fd(struct bufferevent *bev, int filter)$/;"	f	file:
bufferevent_openssl_check_freed	test/regress_ssl.c	/^bufferevent_openssl_check_freed(struct bufferevent *bev)$/;"	f	file:
bufferevent_openssl_filter_new	bufferevent_openssl.c	/^bufferevent_openssl_filter_new(struct event_base *base,$/;"	f
bufferevent_openssl_get_allow_dirty_shutdown	bufferevent_openssl.c	/^bufferevent_openssl_get_allow_dirty_shutdown(struct bufferevent *bev)$/;"	f
bufferevent_openssl_get_ssl	bufferevent_openssl.c	/^bufferevent_openssl_get_ssl(struct bufferevent *bufev)$/;"	f
bufferevent_openssl_new_impl	bufferevent_openssl.c	/^bufferevent_openssl_new_impl(struct event_base *base,$/;"	f	file:
bufferevent_openssl_set_allow_dirty_shutdown	bufferevent_openssl.c	/^bufferevent_openssl_set_allow_dirty_shutdown(struct bufferevent *bev,$/;"	f
bufferevent_openssl_socket_new	bufferevent_openssl.c	/^bufferevent_openssl_socket_new(struct event_base *base,$/;"	f
bufferevent_ops	bufferevent-internal.h	/^struct bufferevent_ops {$/;"	s
bufferevent_ops_async	bufferevent_async.c	/^const struct bufferevent_ops bufferevent_ops_async = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_filter	bufferevent_filter.c	/^const struct bufferevent_ops bufferevent_ops_filter = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_openssl	bufferevent_openssl.c	/^const struct bufferevent_ops bufferevent_ops_openssl = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_pair	bufferevent_pair.c	/^const struct bufferevent_ops bufferevent_ops_pair = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_ops_socket	bufferevent_sock.c	/^const struct bufferevent_ops bufferevent_ops_socket = {$/;"	v	typeref:struct:bufferevent_ops
bufferevent_options	include/event2/bufferevent.h	/^enum bufferevent_options {$/;"	g
bufferevent_output_filter	test/regress_bufferevent.c	/^bufferevent_output_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
bufferevent_pair	bufferevent_pair.c	/^struct bufferevent_pair {$/;"	s	file:
bufferevent_pair_elt_new	bufferevent_pair.c	/^bufferevent_pair_elt_new(struct event_base *base,$/;"	f	file:
bufferevent_pair_get_partner	bufferevent_pair.c	/^bufferevent_pair_get_partner(struct bufferevent *bev)$/;"	f
bufferevent_pair_new	bufferevent_pair.c	/^bufferevent_pair_new(struct event_base *base, int options,$/;"	f
bufferevent_priority_set	bufferevent_sock.c	/^bufferevent_priority_set(struct bufferevent *bufev, int priority)$/;"	f
bufferevent_private	bufferevent-internal.h	/^struct bufferevent_private {$/;"	s
bufferevent_rate_limit	bufferevent-internal.h	/^struct bufferevent_rate_limit {$/;"	s
bufferevent_rate_limit_group	bufferevent-internal.h	/^struct bufferevent_rate_limit_group {$/;"	s
bufferevent_rate_limit_group_decrement_read	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_decrement_read($/;"	f
bufferevent_rate_limit_group_decrement_write	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_decrement_write($/;"	f
bufferevent_rate_limit_group_free	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_free(struct bufferevent_rate_limit_group *g)$/;"	f
bufferevent_rate_limit_group_get_read_limit	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_get_read_limit($/;"	f
bufferevent_rate_limit_group_get_totals	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_get_totals(struct bufferevent_rate_limit_group *grp,$/;"	f
bufferevent_rate_limit_group_get_write_limit	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_get_write_limit($/;"	f
bufferevent_rate_limit_group_new	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_new(struct event_base *base,$/;"	f
bufferevent_rate_limit_group_reset_totals	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_reset_totals(struct bufferevent_rate_limit_group *grp)$/;"	f
bufferevent_rate_limit_group_set_cfg	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_set_cfg($/;"	f
bufferevent_rate_limit_group_set_min_share	bufferevent_ratelim.c	/^bufferevent_rate_limit_group_set_min_share($/;"	f
bufferevent_ratelim_init_	bufferevent_ratelim.c	/^bufferevent_ratelim_init_(struct bufferevent_private *bev)$/;"	f
bufferevent_read	bufferevent.c	/^bufferevent_read(struct bufferevent *bufev, void *data, size_t size)$/;"	f
bufferevent_read_buffer	bufferevent.c	/^bufferevent_read_buffer(struct bufferevent *bufev, struct evbuffer *buf)$/;"	f
bufferevent_readcb	bufferevent_sock.c	/^bufferevent_readcb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
bufferevent_remove_from_rate_limit_group	bufferevent_ratelim.c	/^bufferevent_remove_from_rate_limit_group(struct bufferevent *bev)$/;"	f
bufferevent_remove_from_rate_limit_group_internal_	bufferevent_ratelim.c	/^bufferevent_remove_from_rate_limit_group_internal_(struct bufferevent *bev,$/;"	f
bufferevent_run_deferred_callbacks_locked	bufferevent.c	/^bufferevent_run_deferred_callbacks_locked(struct event_callback *cb, void *arg)$/;"	f	file:
bufferevent_run_deferred_callbacks_unlocked	bufferevent.c	/^bufferevent_run_deferred_callbacks_unlocked(struct event_callback *cb, void *arg)$/;"	f	file:
bufferevent_run_eventcb_	bufferevent.c	/^bufferevent_run_eventcb_(struct bufferevent *bufev, short what, int options)$/;"	f
bufferevent_run_readcb_	bufferevent.c	/^bufferevent_run_readcb_(struct bufferevent *bufev, int options)$/;"	f
bufferevent_run_writecb_	bufferevent.c	/^bufferevent_run_writecb_(struct bufferevent *bufev, int options)$/;"	f
bufferevent_set_max_single_read	bufferevent_ratelim.c	/^bufferevent_set_max_single_read(struct bufferevent *bev, size_t size)$/;"	f
bufferevent_set_max_single_write	bufferevent_ratelim.c	/^bufferevent_set_max_single_write(struct bufferevent *bev, size_t size)$/;"	f
bufferevent_set_rate_limit	bufferevent_ratelim.c	/^bufferevent_set_rate_limit(struct bufferevent *bev,$/;"	f
bufferevent_set_timeouts	bufferevent.c	/^bufferevent_set_timeouts(struct bufferevent *bufev,$/;"	f
bufferevent_setcb	bufferevent.c	/^bufferevent_setcb(struct bufferevent *bufev,$/;"	f
bufferevent_setfd	bufferevent.c	/^bufferevent_setfd(struct bufferevent *bev, evutil_socket_t fd)$/;"	f
bufferevent_settimeout	bufferevent.c	/^bufferevent_settimeout(struct bufferevent *bufev,$/;"	f
bufferevent_setwatermark	bufferevent.c	/^bufferevent_setwatermark(struct bufferevent *bufev, short events,$/;"	f
bufferevent_socket_connect	bufferevent_sock.c	/^bufferevent_socket_connect(struct bufferevent *bev,$/;"	f
bufferevent_socket_connect_hostname	bufferevent_sock.c	/^bufferevent_socket_connect_hostname(struct bufferevent *bev,$/;"	f
bufferevent_socket_get_conn_address_	bufferevent_sock.c	/^bufferevent_socket_get_conn_address_(struct bufferevent *bev)$/;"	f
bufferevent_socket_get_dns_error	bufferevent_sock.c	/^bufferevent_socket_get_dns_error(struct bufferevent *bev)$/;"	f
bufferevent_socket_new	bufferevent_sock.c	/^bufferevent_socket_new(struct event_base *base, evutil_socket_t fd,$/;"	f
bufferevent_socket_outbuf_cb	bufferevent_sock.c	/^bufferevent_socket_outbuf_cb(struct evbuffer *buf,$/;"	f	file:
bufferevent_socket_set_conn_address	bufferevent_sock.c	/^bufferevent_socket_set_conn_address(struct bufferevent_private *bev_p,$/;"	f	file:
bufferevent_socket_set_conn_address_fd	bufferevent_sock.c	/^bufferevent_socket_set_conn_address_fd(struct bufferevent_private *bev_p, int fd)$/;"	f	file:
bufferevent_ssl_renegotiate	bufferevent_openssl.c	/^bufferevent_ssl_renegotiate(struct bufferevent *bev)$/;"	f
bufferevent_ssl_state	include/event2/bufferevent_ssl.h	/^enum bufferevent_ssl_state {$/;"	g
bufferevent_suspend_flags	bufferevent-internal.h	/^typedef ev_uint16_t bufferevent_suspend_flags;$/;"	t
bufferevent_suspend_read_	bufferevent.c	/^bufferevent_suspend_read_(struct bufferevent *bufev, bufferevent_suspend_flags what)$/;"	f
bufferevent_suspend_write_	bufferevent.c	/^bufferevent_suspend_write_(struct bufferevent *bufev, bufferevent_suspend_flags what)$/;"	f
bufferevent_testcases	test/regress_bufferevent.c	/^struct testcase_t bufferevent_testcases[] = {$/;"	v	typeref:struct:testcase_t
bufferevent_trigger	bufferevent.c	/^bufferevent_trigger(struct bufferevent *bufev, short iotype, int options)$/;"	f
bufferevent_trigger_event	bufferevent.c	/^bufferevent_trigger_event(struct bufferevent *bufev, short what, int options)$/;"	f
bufferevent_trigger_nolock_	bufferevent-internal.h	/^bufferevent_trigger_nolock_(struct bufferevent *bufev, short iotype, int options)$/;"	f
bufferevent_trigger_options	include/event2/bufferevent.h	/^enum bufferevent_trigger_options {$/;"	g
bufferevent_trigger_test_flags	test/regress_bufferevent.c	/^static int bufferevent_trigger_test_flags = 0;$/;"	v	file:
bufferevent_unlock	bufferevent.c	/^bufferevent_unlock(struct bufferevent *bev)$/;"	f
bufferevent_unsuspend_read_	bufferevent.c	/^bufferevent_unsuspend_read_(struct bufferevent *bufev, bufferevent_suspend_flags what)$/;"	f
bufferevent_unsuspend_write_	bufferevent.c	/^bufferevent_unsuspend_write_(struct bufferevent *bufev, bufferevent_suspend_flags what)$/;"	f
bufferevent_update_buckets	bufferevent_ratelim.c	/^bufferevent_update_buckets(struct bufferevent_private *bev)$/;"	f	file:
bufferevent_wm_suspend_read	bufferevent-internal.h	354;"	d
bufferevent_wm_unsuspend_read	bufferevent-internal.h	356;"	d
bufferevent_write	bufferevent.c	/^bufferevent_write(struct bufferevent *bufev, const void *data, size_t size)$/;"	f
bufferevent_write_buffer	bufferevent.c	/^bufferevent_write_buffer(struct bufferevent *bufev, struct evbuffer *buf)$/;"	f
bufferevent_writecb	bufferevent_sock.c	/^bufferevent_writecb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
buffers	buffer_iocp.c	/^	WSABUF buffers[MAX_WSABUFS];$/;"	m	struct:evbuffer_overlapped	file:
buflen	listener.c	/^	ev_uint8_t buflen;$/;"	m	struct:accepting_socket	file:
build	Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
bytes_to_read	bufferevent_openssl.c	/^bytes_to_read(struct bufferevent_openssl *bev)$/;"	f	file:
c	test/regress_util.c	/^	long c;$/;"	m	struct:example_struct	file:
cache_time_cb	test/regress.c	/^cache_time_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
cached_sock_errs_entry	evutil.c	/^struct cached_sock_errs_entry {$/;"	s	file:
cached_time_base	test/regress.c	/^static struct event_base *cached_time_base = NULL;$/;"	v	typeref:struct:event_base	file:
cached_time_reset	test/regress.c	/^static int cached_time_reset = 0;$/;"	v	file:
cached_time_sleep	test/regress.c	/^static int cached_time_sleep = 0;$/;"	v	file:
call_count	test/regress_iocp.c	/^	int call_count;$/;"	m	struct:dummy_overlapped	file:
callback1	test/test-dumpevents.c	/^callback1(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
callback2	test/test-dumpevents.c	/^callback2(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
callback_count	test/regress_thread.c	/^static unsigned callback_count = 0;$/;"	v	file:
callback_finalize_callback_1	test/regress_finalize.c	/^callback_finalize_callback_1(struct event_callback *evcb, void *arg)$/;"	f	file:
callbacks	evbuffer-internal.h	/^	LIST_HEAD(evbuffer_cb_queue, evbuffer_cb_entry) callbacks;$/;"	m	struct:evbuffer
callbacks	http-internal.h	/^	TAILQ_HEAD(httpcbq, evhttp_cb) callbacks;$/;"	m	struct:evhttp
callcount	test/regress.c	/^	unsigned int callcount;$/;"	m	struct:basic_cb_args	file:
called	sample/signal-test.c	/^int called = 0;$/;"	v
called	test/regress.c	/^int called;$/;"	v
called	test/test-eof.c	/^int called = 0;$/;"	v
called	test/test-time.c	/^int called = 0;$/;"	v
called	test/test-weof.c	/^int called = 0;$/;"	v
called_at	test/regress.c	/^	struct timeval called_at;$/;"	m	struct:common_timeout_info	typeref:struct:common_timeout_info::timeval	file:
can_sendfile	evbuffer-internal.h	/^	unsigned can_sendfile : 1;$/;"	m	struct:evbuffer_file_segment
cancel_event	test/regress_dns.c	/^	struct event cancel_event;$/;"	m	struct:gaic_request_status	typeref:struct:gaic_request_status::event	file:
cancel_gai_cb	test/regress_dns.c	/^cancel_gai_cb(evutil_socket_t fd, short what, void *ptr)$/;"	f	file:
canceled	test/regress_dns.c	/^	int canceled;$/;"	m	struct:gaic_request_status	file:
cases	test/tinytest.h	/^	struct testcase_t *cases; \/** Array, ending with END_OF_TESTCASES *\/$/;"	m	struct:testgroup_t	typeref:struct:testgroup_t::testcase_t
cb	evbuffer-internal.h	/^	} cb;$/;"	m	struct:evbuffer_cb_entry	typeref:union:evbuffer_cb_entry::__anon18
cb	event-internal.h	/^	void (*cb)(evutil_socket_t, short, void *);$/;"	m	struct:event_once
cb	evrpc-internal.h	/^	void (*cb)(struct evrpc_status*, void *request, void *reply, void *arg);$/;"	m	struct:evrpc_request_wrapper
cb	evrpc-internal.h	/^	void (*cb)(void *, enum EVRPC_HOOK_RESULT);$/;"	m	struct:evrpc_hook_ctx
cb	http-internal.h	/^	void (*cb)(struct evhttp_connection *, void *);$/;"	m	struct:evhttp_connection
cb	http-internal.h	/^	void (*cb)(struct evhttp_request *req, void *);$/;"	m	struct:evhttp_cb
cb	include/event2/http_struct.h	/^	void (*cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
cb	include/event2/rpc_struct.h	/^	void (*cb)(struct evrpc_req_generic *, void *);$/;"	m	struct:evrpc
cb	iocp-internal.h	/^	iocp_callback cb;$/;"	m	struct:event_overlapped
cb	listener.c	/^	evconnlistener_cb cb;$/;"	m	struct:evconnlistener	file:
cb_arg	evrpc-internal.h	/^	void *cb_arg;$/;"	m	struct:evrpc_request_wrapper
cb_arg	http-internal.h	/^	void *cb_arg;$/;"	m	struct:evhttp_connection
cb_arg	include/event2/http_struct.h	/^	void *cb_arg;$/;"	m	struct:evhttp_request
cb_arg	include/event2/rpc_struct.h	/^	void *cb_arg;$/;"	m	struct:evrpc
cb_func	evbuffer-internal.h	/^		evbuffer_cb_func cb_func;$/;"	m	union:evbuffer_cb_entry::__anon18
cb_obsolete	evbuffer-internal.h	/^		evbuffer_cb cb_obsolete;$/;"	m	union:evbuffer_cb_entry::__anon18
cb_queue	evbuffer-internal.h	/^	struct event_base *cb_queue;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::event_base
cbarg	evbuffer-internal.h	/^	void *cbarg;$/;"	m	struct:evbuffer_cb_entry
cbarg	http-internal.h	/^	void *cbarg;$/;"	m	struct:evhttp_cb
cbarg	include/event2/bufferevent_struct.h	/^	void *cbarg;$/;"	m	struct:bufferevent
cbs	test/regress_bufferevent.c	/^	struct evthread_lock_callbacks cbs;$/;"	m	struct:lock_unlock_base	typeref:struct:lock_unlock_base::evthread_lock_callbacks	file:
cbs	test/regress_thread.c	/^	struct event_callback cbs[CB_COUNT];$/;"	m	struct:deferred_test_data	typeref:struct:deferred_test_data::event_callback	file:
cert_verify_callback	sample/https-client.c	/^static int cert_verify_callback(X509_STORE_CTX *x509_ctx, void *arg)$/;"	f	file:
cfg	bufferevent-internal.h	/^	struct ev_token_bucket_cfg *cfg;$/;"	m	struct:bufferevent_rate_limit	typeref:struct:bufferevent_rate_limit::ev_token_bucket_cfg
cfg_aliases	test/tinytest.c	/^const struct testlist_alias_t *cfg_aliases=NULL;$/;"	v	typeref:struct:testlist_alias_t
cfg_connlimit	test/test-ratelim.c	/^static int cfg_connlimit = 0;$/;"	v	file:
cfg_connlimit_tolerance	test/test-ratelim.c	/^static int cfg_connlimit_tolerance = -1;$/;"	v	file:
cfg_duration	test/test-ratelim.c	/^static int cfg_duration = 5;$/;"	v	file:
cfg_enable_iocp	test/test-ratelim.c	/^static int cfg_enable_iocp = 0;$/;"	v	file:
cfg_group_drain	test/test-ratelim.c	/^static int cfg_group_drain = 0;$/;"	v	file:
cfg_grouplimit	test/test-ratelim.c	/^static int cfg_grouplimit = 0;$/;"	v	file:
cfg_grouplimit_tolerance	test/test-ratelim.c	/^static int cfg_grouplimit_tolerance = -1;$/;"	v	file:
cfg_help	test/test-ratelim.c	/^static int cfg_help = 0;$/;"	v	file:
cfg_min_share	test/test-ratelim.c	/^static int cfg_min_share = -1;$/;"	v	file:
cfg_n_connections	test/test-ratelim.c	/^static int cfg_n_connections = 30;$/;"	v	file:
cfg_stddev_tolerance	test/test-ratelim.c	/^static int cfg_stddev_tolerance = -1;$/;"	v	file:
cfg_tick	test/test-ratelim.c	/^static struct timeval cfg_tick = { 0, 500*1000 };$/;"	v	typeref:struct:timeval	file:
cfg_tick_msec	test/test-ratelim.c	/^static int cfg_tick_msec = 1000;$/;"	v	file:
cfg_verbose	test/test-ratelim.c	/^static int cfg_verbose = 0;$/;"	v	file:
chain	include/event2/buffer.h	/^        void *chain;$/;"	m	struct:evbuffer_ptr::__anon9
change_to_string	epoll.c	/^change_to_string(int change)$/;"	f	file:
changelist	event-internal.h	/^	struct event_changelist changelist;$/;"	m	struct:event_base	typeref:struct:event_base::event_changelist
changes	devpoll.c	/^	struct pollfd *changes;$/;"	m	struct:devpollop	typeref:struct:devpollop::pollfd	file:
changes	event-internal.h	/^	struct event_change *changes;$/;"	m	struct:event_changelist	typeref:struct:event_changelist::event_change
changes	kqueue.c	/^	struct kevent *changes;$/;"	m	struct:kqop	typeref:struct:kqop::kevent	file:
changes_size	event-internal.h	/^	int changes_size;$/;"	m	struct:event_changelist
changes_size	kqueue.c	/^	int changes_size;$/;"	m	struct:kqop	file:
check_bucket_levels_cb	test/test-ratelim.c	/^check_bucket_levels_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
check_dummy_mem_ok	test/regress.c	/^check_dummy_mem_ok(void *mem_)$/;"	f	file:
check_error_logging	test/regress_util.c	/^check_error_logging(void (*fn)(void), int wantexitcode,$/;"	f	file:
check_event	evport.c	/^check_event(port_event_t* pevt)$/;"	f	file:
check_event	evport.c	225;"	d	file:
check_evportop	evport.c	/^check_evportop(struct evport_data *evpd)$/;"	f	file:
check_evportop	evport.c	224;"	d	file:
check_group_bucket_levels_cb	test/test-ratelim.c	/^check_group_bucket_levels_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
check_heap	test/regress_minheap.c	/^check_heap(struct min_heap *heap)$/;"	f	file:
check_prepend	test/regress_buffer.c	/^check_prepend(struct evbuffer *buffer,$/;"	f	file:
check_selectop	select.c	/^check_selectop(struct selectop *sop)$/;"	f	file:
check_selectop	select.c	136;"	d	file:
child_pair	test/regress.c	/^int child_pair[2] = { -1, -1 };$/;"	v
choked	evdns.c	/^	char choked;  \/* true if we have an EAGAIN from this server's socket *\/$/;"	m	struct:nameserver	file:
choked	evdns.c	/^	char choked; \/* Are we currently blocked from writing? *\/$/;"	m	struct:evdns_server_port	file:
chomp	evutil.c	/^chomp (char *s)$/;"	f	file:
chunk_cb	include/event2/http_struct.h	/^	void (*chunk_cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
chunk_req_state	test/regress_http.c	/^struct chunk_req_state {$/;"	s	file:
chunked	include/event2/http_struct.h	/^	unsigned chunked:1,		\/* a chunked request *\/$/;"	m	struct:evhttp_request
class	evdns.c	/^	u16 class; \/* The RR class (usually CLASS_INET) *\/$/;"	m	struct:server_reply_item	file:
cleaned_inserted	test/check-dumpevents.py	/^cleaned_inserted = set( pat.sub(replace_time, s) for s in got_inserted$/;"	v
cleanup_cb	evbuffer-internal.h	/^	evbuffer_file_segment_cleanup_cb cleanup_cb;$/;"	m	struct:evbuffer_file_segment
cleanup_cb_arg	evbuffer-internal.h	/^	void *cleanup_cb_arg;$/;"	m	struct:evbuffer_file_segment
cleanup_fn	test/tinytest.h	/^	int (*cleanup_fn)(const struct testcase_t *, void *);$/;"	m	struct:testcase_setup_t
cleanup_passthrough	test/regress_buffer.c	/^cleanup_passthrough(const struct testcase_t *testcase, void *ptr)$/;"	f	file:
cleanup_test	test/regress.c	295;"	d	file:
cleanupfn	evbuffer-internal.h	/^	evbuffer_ref_cleanup_cb cleanupfn;$/;"	m	struct:evbuffer_chain_reference
clear_rbow	bufferevent_openssl.c	/^clear_rbow(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
clear_time_cache	event.c	/^clear_time_cache(struct event_base *base)$/;"	f	file:
clear_wbor	bufferevent_openssl.c	/^clear_wbor(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
client_error_phrases	http.c	/^static const char *client_error_phrases[] = {$/;"	v	file:
client_event_cb	test/test-fdleak.c	/^client_event_cb(struct bufferevent *bev, short events, void *ctx)$/;"	f	file:
client_read_cb	test/test-fdleak.c	/^client_read_cb(struct bufferevent *bev, void *ctx)$/;"	f	file:
client_state	test/test-ratelim.c	/^struct client_state {$/;"	s	file:
close	evutil.c	94;"	d	file:
close	sample/http-server.c	61;"	d	file:
close_change	changelist-internal.h	/^	ev_uint8_t close_change;$/;"	m	struct:event_change
close_detect_cb	test/regress_http.c	/^close_detect_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
close_detect_done	test/regress_http.c	/^close_detect_done(struct evhttp_request *req, void *arg)$/;"	f	file:
close_detect_launch	test/regress_http.c	/^close_detect_launch(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
close_on_finished_writecb	sample/le-proxy.c	/^close_on_finished_writecb(struct bufferevent *bev, void *ctx)$/;"	f	file:
close_socket_cb	test/regress_bufferevent.c	/^close_socket_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
closecb	http-internal.h	/^	void (*closecb)(struct evhttp_connection *, void *);$/;"	m	struct:evhttp_connection
closecb_arg	http-internal.h	/^	void *closecb_arg;$/;"	m	struct:evhttp_connection
closed_cb	test/test-closed.c	/^closed_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
closing	evdns.c	/^	char closing; \/* Are we trying to close this port, pending writes? *\/$/;"	m	struct:evdns_server_port	file:
cname_result	evdns.c	/^	char *cname_result;$/;"	m	struct:evdns_getaddrinfo_request	file:
cnt_free	test/regress_dns.c	/^cnt_free(void *ptr)$/;"	f	file:
cnt_malloc	test/regress_dns.c	/^cnt_malloc(size_t sz)$/;"	f	file:
cnt_realloc	test/regress_dns.c	/^cnt_realloc(void *old, size_t sz)$/;"	f	file:
code	evutil.c	/^	DWORD code;$/;"	m	struct:cached_sock_errs_entry	file:
combined_read_cb	test/regress.c	/^combined_read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
combined_write_cb	test/regress.c	/^combined_write_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
commandname	test/tinytest.c	/^static char commandname[MAX_PATH+1];$/;"	v	file:
common	evrpc-internal.h	/^	struct evrpc_hooks_ common;$/;"	m	struct:evrpc_base	typeref:struct:evrpc_base::evrpc_hooks_
common	evrpc-internal.h	/^	struct evrpc_hooks_ common;$/;"	m	struct:evrpc_pool	typeref:struct:evrpc_pool::evrpc_hooks_
common_timeout_callback	event.c	/^common_timeout_callback(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
common_timeout_cb	test/regress.c	/^common_timeout_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
common_timeout_info	test/regress.c	/^struct common_timeout_info {$/;"	s	file:
common_timeout_list	event-internal.h	/^struct common_timeout_list {$/;"	s
common_timeout_queues	event-internal.h	/^	struct common_timeout_list **common_timeout_queues;$/;"	m	struct:event_base	typeref:struct:event_base::common_timeout_list
common_timeout_schedule	event.c	/^common_timeout_schedule(struct common_timeout_list *ctl,$/;"	f	file:
cond	test/regress_thread.c	/^	struct cond_wait *cond;$/;"	m	struct:alerted_record	typeref:struct:alerted_record::cond_wait	file:
cond	test/regress_thread.c	/^	void *cond;$/;"	m	struct:cond_wait	file:
cond_wait	test/regress_thread.c	/^struct cond_wait {$/;"	s	file:
condition_api_version	include/event2/thread.h	/^	int condition_api_version;$/;"	m	struct:evthread_condition_callbacks
config_nameserver_from_reg_key	evdns.c	/^config_nameserver_from_reg_key(struct evdns_base *base, HKEY key, const TCHAR *subkey)$/;"	f	file:
configured_min_share	bufferevent-internal.h	/^	ev_ssize_t configured_min_share;$/;"	m	struct:bufferevent_rate_limit_group
conn_address	bufferevent-internal.h	/^	} conn_address;$/;"	m	struct:bufferevent_private	typeref:union:bufferevent_private::__anon10
conn_bucket_cfg	test/test-ratelim.c	/^static struct ev_token_bucket_cfg *conn_bucket_cfg = NULL;$/;"	v	typeref:struct:ev_token_bucket_cfg	file:
conn_closed	bufferevent_openssl.c	/^conn_closed(struct bufferevent_openssl *bev_ssl, int when, int errcode, int ret)$/;"	f	file:
conn_eventcb	sample/hello-world.c	/^conn_eventcb(struct bufferevent *bev, short events, void *user_data)$/;"	f	file:
conn_writecb	sample/hello-world.c	/^conn_writecb(struct bufferevent *bev, void *user_data)$/;"	f	file:
connect_base	sample/http-connect.c	/^struct connect_base$/;"	s	file:
connect_cb	sample/http-connect.c	/^static void connect_cb(struct evhttp_request *proxy_req, void *arg)$/;"	f	file:
connect_complete	bufferevent_async.c	/^connect_complete(struct event_overlapped *eo, ev_uintptr_t key,$/;"	f	file:
connect_overlapped	bufferevent_async.c	/^	struct event_overlapped connect_overlapped;$/;"	m	struct:bufferevent_async	typeref:struct:bufferevent_async::event_overlapped	file:
connect_to_addr	sample/le-proxy.c	/^static struct sockaddr_storage connect_to_addr;$/;"	v	typeref:struct:sockaddr_storage	file:
connect_to_addrlen	sample/le-proxy.c	/^static int connect_to_addrlen;$/;"	v	file:
connecting	bufferevent-internal.h	/^	unsigned connecting : 1;$/;"	m	struct:bufferevent_private
connection_refused	bufferevent-internal.h	/^	unsigned connection_refused : 1;$/;"	m	struct:bufferevent_private
connections	evrpc-internal.h	/^	struct evconq connections;$/;"	m	struct:evrpc_pool	typeref:struct:evrpc_pool::evconq
connections	http-internal.h	/^	struct evconq connections;$/;"	m	struct:evhttp	typeref:struct:evhttp::evconq
consider_reading	bufferevent_openssl.c	/^consider_reading(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
consider_writing	bufferevent_openssl.c	/^consider_writing(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
content	test/bench_http.c	/^static char *content;$/;"	v	file:
content_len	test/bench_http.c	/^static size_t content_len = 0;$/;"	v	file:
content_type	sample/http-server.c	/^	const char *content_type;$/;"	m	struct:table_entry	file:
content_type_table	sample/http-server.c	/^} content_type_table[] = {$/;"	v	typeref:struct:table_entry	file:
contents	evbuffer-internal.h	/^	char *contents;$/;"	m	struct:evbuffer_file_segment
context	bufferevent_filter.c	/^	void *context;$/;"	m	struct:bufferevent_filtered	file:
count	evthread.c	/^	int count; \/\/ 这个锁的加锁次数$/;"	m	struct:debug_lock	file:
count	test/bench.c	/^static int count, writes, fired, failures;$/;"	v	file:
count	test/regress.c	/^	int count;$/;"	m	struct:common_timeout_info	file:
count	test/regress.c	/^	int count;$/;"	m	struct:foreach_helper	file:
count	test/regress.c	/^	int count;$/;"	m	struct:read_not_timeout_param	file:
count	test/regress.c	/^	int count;$/;"	m	struct:test_pri_event	file:
count	test/regress_dns.c	/^	int count;$/;"	m	struct:generic_dns_callback_result	file:
count	test/regress_finalize.c	/^	int count;$/;"	m	struct:event_and_count	file:
count	test/regress_iocp.c	/^static int count = 0;$/;"	v	file:
count	test/regress_thread.c	/^static int count;$/;"	v	file:
count_cond	test/regress_iocp.c	/^static void *count_lock = NULL, *count_cond = NULL;$/;"	v	file:
count_free	test/regress_iocp.c	/^count_free(void)$/;"	f	file:
count_incr	test/regress_iocp.c	/^count_incr(void)$/;"	f	file:
count_init	test/regress_iocp.c	/^count_init(void)$/;"	f	file:
count_lock	test/regress_iocp.c	/^static void *count_lock = NULL, *count_cond = NULL;$/;"	v	file:
count_lock	test/regress_thread.c	/^void *count_lock;$/;"	v
count_wait_for	test/regress_iocp.c	/^count_wait_for(int i, int ms)$/;"	f	file:
counts	bufferevent_openssl.c	/^	struct bio_data_counts counts;$/;"	m	struct:bufferevent_openssl	typeref:struct:bufferevent_openssl::bio_data_counts	file:
cppcomment	event_rpcgen.py	/^cppcomment = re.compile(r'\\\/\\\/.*$')$/;"	v
cppdirect	event_rpcgen.py	/^cppdirect = []$/;"	v
cpu_usage_timer	test/test-changelist.c	/^struct cpu_usage_timer {$/;"	s	file:
create_bev	test/regress_http.c	/^create_bev(struct event_base *base, int fd, int ssl_mask)$/;"	f	file:
create_tm_from_unix_epoch	test/regress_util.c	/^create_tm_from_unix_epoch(struct tm *cur_p, const time_t t)$/;"	f	file:
ctrl	bufferevent-internal.h	/^	int (*ctrl)(struct bufferevent *, enum bufferevent_ctrl_op, union bufferevent_ctrl_data *);$/;"	m	struct:bufferevent_ops
ctx	evrpc-internal.h	/^	void *ctx;$/;"	m	struct:evrpc_hook_ctx
ctx	test/regress_rpc.c	/^	void *ctx;$/;"	m	struct:rpc_hook_ctx_	file:
cur_test_name	test/tinytest.c	/^const char *cur_test_name = NULL;$/;"	v
cur_test_outcome	test/tinytest.c	/^static enum outcome cur_test_outcome = 0;$/;"	v	typeref:enum:outcome	file:
cur_test_prefix	test/tinytest.c	/^const char *cur_test_prefix = NULL; \/**< prefix of the current test group *\/$/;"	v
current_base	evdns.c	/^static struct evdns_base *current_base = NULL;$/;"	v	typeref:struct:evdns_base	file:
current_base	event.c	129;"	d	file:
current_base	test/regress.c	821;"	d	file:
current_event	event-internal.h	/^	struct event_callback *current_event;$/;"	m	struct:event_base	typeref:struct:event_base::event_callback
current_event_cond	event-internal.h	/^	void *current_event_cond;$/;"	m	struct:event_base
current_event_waiters	event-internal.h	/^	int current_event_waiters;$/;"	m	struct:event_base
current_req	evdns.c	/^	struct request *current_req;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::request	file:
current_req	test/regress_dns.c	/^static struct evdns_request *current_req = NULL;$/;"	v	typeref:struct:evdns_request	file:
data	evdns.c	/^	void *data; \/* The contents of the RR *\/$/;"	m	struct:server_reply_item	file:
data	evdns.c	/^	} data;$/;"	m	struct:reply	typeref:union:reply::__anon12	file:
data	evrpc-internal.h	/^	void *data;$/;"	m	struct:evrpc_meta
data_size	evrpc-internal.h	/^	size_t data_size;$/;"	m	struct:evrpc_meta
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datalen	evdns.c	/^	u16 datalen; \/* Length of data; -1 if data is a label *\/$/;"	m	struct:server_reply_item	file:
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
date	test/regress_util.c	/^	char date[30];$/;"	m	struct:date_rfc1123_case	file:
date_rfc1123_case	test/regress_util.c	/^static struct date_rfc1123_case {$/;"	s	file:
date_rfc1123_cases	test/regress_util.c	/^} date_rfc1123_cases[] = {$/;"	v	typeref:struct:date_rfc1123_case	file:
dbg_leak_resume	test/regress_dns.c	/^dbg_leak_resume(void *env_, int cancel, int send_err_shutdown)$/;"	f	file:
dealloc	event-internal.h	/^	void (*dealloc)(struct event_base *);$/;"	m	struct:eventop
debug_cond_wait	evthread.c	/^debug_cond_wait(void *cond_, void *lock_, const struct timeval *tv)$/;"	f	file:
debug_lock	evthread.c	/^struct debug_lock {$/;"	s	file:
debug_lock_alloc	evthread.c	/^debug_lock_alloc(unsigned locktype)$/;"	f	file:
debug_lock_free	evthread.c	/^debug_lock_free(void *lock_, unsigned locktype)$/;"	f	file:
debug_lock_lock	evthread.c	/^debug_lock_lock(unsigned mode, void *lock_)$/;"	f	file:
debug_lock_unlock	evthread.c	/^debug_lock_unlock(unsigned mode, void *lock_)$/;"	f	file:
debug_ntoa	sample/dns-example.c	/^debug_ntoa(u32 address)$/;"	f	file:
declare	event_rpcgen.py	/^def declare(s):$/;"	f
decode_int64_internal	event_tagging.c	/^decode_int64_internal(ev_uint64_t *pnumber, struct evbuffer *evbuf, int offset)$/;"	f	file:
decode_int_internal	event_tagging.c	/^decode_int_internal(ev_uint32_t *pnumber, struct evbuffer *evbuf, int offset)$/;"	f	file:
decode_tag_internal	event_tagging.c	/^decode_tag_internal(ev_uint32_t *ptag, struct evbuffer *evbuf, int dodrain)$/;"	f	file:
decref_and_unlock	bufferevent_pair.c	/^decref_and_unlock(struct bufferevent *b)$/;"	f	file:
decrement_buckets	bufferevent_openssl.c	/^decrement_buckets(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
default_content_type	http-internal.h	/^	const char *default_content_type;$/;"	m	struct:evhttp
default_max_body_size	http-internal.h	/^	ev_uint64_t default_max_body_size;$/;"	m	struct:evhttp
default_max_headers_size	http-internal.h	/^	size_t default_max_headers_size;$/;"	m	struct:evhttp
deferred	bufferevent-internal.h	/^	struct event_callback deferred;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::event_callback
deferred	evbuffer-internal.h	/^	struct event_callback deferred;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::event_callback
deferred	evdns.c	/^	struct event_callback deferred;$/;"	m	struct:deferred_reply_callback	typeref:struct:deferred_reply_callback::event_callback	file:
deferred	listener.c	/^	struct event_callback deferred;$/;"	m	struct:accepting_socket	typeref:struct:accepting_socket::event_callback	file:
deferred_callback	test/regress_thread.c	/^deferred_callback(struct event_callback *cb, void *arg)$/;"	f	file:
deferred_cb_fn	defer-internal.h	/^typedef void (*deferred_cb_fn)(struct event_callback *, void *);$/;"	t
deferred_cbs	evbuffer-internal.h	/^	unsigned deferred_cbs : 1;$/;"	m	struct:evbuffer
deferred_data	test/regress_thread.c	/^static struct deferred_test_data deferred_data[QUEUE_THREAD_COUNT];$/;"	v	typeref:struct:deferred_test_data	file:
deferred_reply_callback	evdns.c	/^struct deferred_reply_callback {$/;"	s	file:
deferred_test_data	test/regress_thread.c	/^struct deferred_test_data {$/;"	s	file:
del	event-internal.h	/^	int (*del)(struct event_base *, evutil_socket_t fd, short old, short events, void *fdinfo);$/;"	m	struct:eventop
del_wait_cb	test/regress.c	/^del_wait_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
del_wait_thread	test/regress.c	/^static void* del_wait_thread(void *arg)$/;"	f	file:
delay	test/regress_thread.c	/^	struct timeval delay;$/;"	m	struct:alerted_record	typeref:struct:alerted_record::timeval	file:
delayed_client	test/regress_http.c	/^static struct evhttp_connection *delayed_client;$/;"	v	typeref:struct:evhttp_connection	file:
delete_all_in_dlist	evmap.c	/^delete_all_in_dlist(struct event_dlist *dlist)$/;"	f	file:
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
destroy	listener.c	/^	void (*destroy)(struct evconnlistener *);$/;"	m	struct:evconnlistener_ops	file:
destruct	bufferevent-internal.h	/^	void (*destruct)(struct bufferevent *);$/;"	m	struct:bufferevent_ops
devpoll_add	devpoll.c	/^devpoll_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
devpoll_commit	devpoll.c	/^devpoll_commit(struct devpollop *devpollop)$/;"	f	file:
devpoll_dealloc	devpoll.c	/^devpoll_dealloc(struct event_base *base)$/;"	f	file:
devpoll_del	devpoll.c	/^devpoll_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
devpoll_dispatch	devpoll.c	/^devpoll_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
devpoll_init	devpoll.c	/^devpoll_init(struct event_base *base)$/;"	f	file:
devpoll_queue	devpoll.c	/^devpoll_queue(struct devpollop *devpollop, int fd, int events) {$/;"	f	file:
devpollop	devpoll.c	/^struct devpollop {$/;"	s	file:
devpollops	devpoll.c	/^const struct eventop devpollops = {$/;"	v	typeref:struct:eventop
dfd_cb	test/regress.c	/^dfd_cb(evutil_socket_t fd, short e, void *data)$/;"	f	file:
disable	bufferevent-internal.h	/^	int (*disable)(struct bufferevent *, short);$/;"	m	struct:bufferevent_ops
disable	listener.c	/^	int (*disable)(struct evconnlistener *);$/;"	m	struct:evconnlistener_ops	file:
disable_tls_11_and_12	test/regress_ssl.c	/^static int disable_tls_11_and_12 = 0;$/;"	v	file:
disable_when_inactive	evdns.c	/^	int disable_when_inactive;$/;"	m	struct:evdns_base	file:
discard_readcb	test/test-ratelim.c	/^discard_readcb(struct bufferevent *bev, void *ctx)$/;"	f	file:
dispatch	event-internal.h	/^	int (*dispatch)(struct event_base *, struct timeval *);$/;"	m	struct:eventop
dist_bin_SCRIPTS	Makefile	/^dist_bin_SCRIPTS = event_rpcgen.py$/;"	m
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dns_base	http-internal.h	/^	struct evdns_base *dns_base;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::evdns_base
dns_base	test/regress_dns.c	/^	struct evdns_base *dns_base;$/;"	m	struct:gaic_request_status	typeref:struct:gaic_request_status::evdns_base	file:
dns_base	test/regress_dns.c	/^	struct evdns_base *dns_base;$/;"	m	struct:testleak_env_t	typeref:struct:testleak_env_t::evdns_base	file:
dns_client_fail_requests_getaddrinfo_test	test/regress_dns.c	/^dns_client_fail_requests_getaddrinfo_test(void *arg)$/;"	f	file:
dns_client_fail_requests_test	test/regress_dns.c	/^dns_client_fail_requests_test(void *arg)$/;"	f	file:
dns_disable_when_inactive_no_ns_test	test/regress_dns.c	/^dns_disable_when_inactive_no_ns_test(void *arg)$/;"	f	file:
dns_disable_when_inactive_test	test/regress_dns.c	/^dns_disable_when_inactive_test(void *arg)$/;"	f	file:
dns_err	test/regress_dns.c	/^static int dns_err = 0;$/;"	v	file:
dns_error	bufferevent-internal.h	/^	int dns_error;$/;"	m	struct:bufferevent_private
dns_gethostbyaddr	test/regress_dns.c	/^dns_gethostbyaddr(void)$/;"	f	file:
dns_gethostbyname	test/regress_dns.c	/^dns_gethostbyname(void)$/;"	f	file:
dns_gethostbyname6	test/regress_dns.c	/^dns_gethostbyname6(void)$/;"	f	file:
dns_gethostbyname_cb	test/regress_dns.c	/^dns_gethostbyname_cb(int result, char type, int count, int ttl,$/;"	f	file:
dns_got_cancel	test/regress_dns.c	/^static int dns_got_cancel = 0;$/;"	v	file:
dns_inflight_test	test/regress_dns.c	/^dns_inflight_test(void *arg)$/;"	f	file:
dns_inflight_test_impl	test/regress_dns.c	/^dns_inflight_test_impl(void *arg, int flags)$/;"	f	file:
dns_ok	test/regress_dns.c	/^static int dns_ok = 0;$/;"	v	file:
dns_port	test/regress_testutils.c	/^static struct evdns_server_port *dns_port;$/;"	v	typeref:struct:evdns_server_port	file:
dns_question_class	include/event2/dns_struct.h	/^	int dns_question_class;$/;"	m	struct:evdns_server_question
dns_question_class	include/event2/dns_struct.h	70;"	d
dns_reissue_disable_when_inactive_test	test/regress_dns.c	/^dns_reissue_disable_when_inactive_test(void *arg)$/;"	f	file:
dns_reissue_test	test/regress_dns.c	/^dns_reissue_test(void *arg)$/;"	f	file:
dns_reissue_test_impl	test/regress_dns.c	/^dns_reissue_test_impl(void *arg, int flags)$/;"	f	file:
dns_request	bufferevent-internal.h	/^	struct evdns_getaddrinfo_request *dns_request;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::evdns_getaddrinfo_request
dns_resolve_reverse	test/regress_dns.c	/^dns_resolve_reverse(void *ptr)$/;"	f	file:
dns_retry_disable_when_inactive_test	test/regress_dns.c	/^dns_retry_disable_when_inactive_test(void *arg)$/;"	f	file:
dns_retry_test	test/regress_dns.c	/^dns_retry_test(void *arg)$/;"	f	file:
dns_retry_test_impl	test/regress_dns.c	/^dns_retry_test_impl(void *arg, int flags)$/;"	f	file:
dns_search_cancel_test	test/regress_dns.c	/^dns_search_cancel_test(void *arg)$/;"	f	file:
dns_search_empty_test	test/regress_dns.c	/^dns_search_empty_test(void *arg)$/;"	f	file:
dns_search_lower_test	test/regress_dns.c	/^dns_search_lower_test(void *arg)$/;"	f	file:
dns_search_test	test/regress_dns.c	/^dns_search_test(void *arg)$/;"	f	file:
dns_search_test_impl	test/regress_dns.c	/^dns_search_test_impl(void *arg, int lower)$/;"	f	file:
dns_server	test/regress_dns.c	/^dns_server(void)$/;"	f	file:
dns_server_gethostbyname_cb	test/regress_dns.c	/^dns_server_gethostbyname_cb(int result, char type, int count, int ttl,$/;"	f	file:
dns_server_request_cb	test/regress_dns.c	/^dns_server_request_cb(struct evdns_server_request *req, void *data)$/;"	f	file:
dns_sock	test/regress_testutils.c	/^evutil_socket_t dns_sock = -1;$/;"	v
dns_testcases	test/regress_dns.c	/^struct testcase_t dns_testcases[] = {$/;"	v	typeref:struct:testcase_t
dnserr	test/regress_dns.c	/^	int dnserr;$/;"	m	struct:be_conn_hostname_result	file:
dnslabel_clear	evdns.c	/^dnslabel_clear(struct dnslabel_table *table)$/;"	f	file:
dnslabel_entry	evdns.c	/^struct dnslabel_entry { char *v; off_t pos; };$/;"	s	file:
dnslabel_table	evdns.c	/^struct dnslabel_table {$/;"	s	file:
dnslabel_table_add	evdns.c	/^dnslabel_table_add(struct dnslabel_table *table, const char *label, off_t pos)$/;"	f	file:
dnslabel_table_get_pos	evdns.c	/^dnslabel_table_get_pos(const struct dnslabel_table *table, const char *label)$/;"	f	file:
dnslabel_table_init	evdns.c	/^dnslabel_table_init(struct dnslabel_table *table)$/;"	f	file:
dnslogcb	test/regress_main.c	/^static void dnslogcb(int w, const char *m)$/;"	f	file:
dnsname_to_labels	evdns.c	/^dnsname_to_labels(u8 *const buf, size_t buf_len, off_t j,$/;"	f	file:
do_fd_clear	win32select.c	/^do_fd_clear(struct event_base *base,$/;"	f	file:
do_fd_set	win32select.c	/^do_fd_set(struct win32op *op, struct idx_info *ent, evutil_socket_t s, int read)$/;"	f	file:
do_handshake	bufferevent_openssl.c	/^do_handshake(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
do_read	bufferevent_openssl.c	/^do_read(struct bufferevent_openssl *bev_ssl, int n_to_read) {$/;"	f	file:
do_test	test/test.sh	/^do_test() {$/;"	f
do_write	bufferevent_openssl.c	/^do_write(struct bufferevent_openssl *bev_ssl, int atmost)$/;"	f	file:
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
done_writing_cb	test/regress_ssl.c	/^done_writing_cb(struct bufferevent *bev, void *ctx)$/;"	f	file:
downcast	bufferevent_filter.c	129;"	d	file:
downcast	bufferevent_pair.c	66;"	d	file:
dpfd	devpoll.c	/^	int dpfd;$/;"	m	struct:devpollop	file:
drained_writecb	sample/le-proxy.c	/^drained_writecb(struct bufferevent *bev, void *ctx)$/;"	f	file:
dummy_cb	test/regress_iocp.c	/^dummy_cb(struct event_overlapped *o, uintptr_t key, ev_ssize_t n, int ok)$/;"	f	file:
dummy_free	test/regress.c	/^dummy_free(void *mem_)$/;"	f	file:
dummy_malloc	test/regress.c	/^dummy_malloc(size_t len)$/;"	f	file:
dummy_overlapped	test/regress_iocp.c	/^struct dummy_overlapped {$/;"	s	file:
dummy_read_cb	test/regress.c	/^dummy_read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
dummy_realloc	test/regress.c	/^dummy_realloc(void *mem_, size_t len)$/;"	f	file:
dump_active_event_fn	event.c	/^dump_active_event_fn(const struct event_base *base, const struct event *e, void *arg)$/;"	f	file:
dump_inserted_event_fn	event.c	/^dump_inserted_event_fn(const struct event_base *base, const struct event *e, void *arg)$/;"	f	file:
dump_request_cb	sample/http-server.c	/^dump_request_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
duration	event-internal.h	/^	struct timeval duration;$/;"	m	struct:common_timeout_list	typeref:struct:common_timeout_list::timeval
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
eb	test/regress.c	/^	struct event_base *eb;$/;"	m	struct:basic_cb_args	typeref:struct:basic_cb_args::event_base	file:
echo_event_cb	sample/echo.c	/^echo_event_cb(struct bufferevent *bev, short events, void *ctx)$/;"	f	file:
echo_eventcb	test/test-ratelim.c	/^echo_eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
echo_listenercb	test/test-ratelim.c	/^echo_listenercb(struct evconnlistener *listener, evutil_socket_t newsock,$/;"	f	file:
echo_read_cb	sample/echo.c	/^echo_read_cb(struct bufferevent *bev, void *ctx)$/;"	f	file:
echo_readcb	test/test-ratelim.c	/^echo_readcb(struct bufferevent *bev, void *ctx)$/;"	f	file:
echo_writecb	test/test-ratelim.c	/^echo_writecb(struct bufferevent *bev, void *ctx)$/;"	f	file:
ed_maxevents	evport.c	/^	int ed_maxevents;$/;"	m	struct:evport_data	file:
ed_npending	evport.c	/^	int ed_npending;$/;"	m	struct:evport_data	file:
ed_pending	evport.c	/^	int *ed_pending;$/;"	m	struct:evport_data	file:
ed_pevtlist	evport.c	/^	port_event_t *ed_pevtlist;$/;"	m	struct:evport_data	file:
ed_port	evport.c	/^	int		ed_port;	\/* event port for system events  *\/$/;"	m	struct:evport_data	file:
edgetriggered_testcases	test/regress_et.c	/^struct testcase_t edgetriggered_testcases[] = {$/;"	v	typeref:struct:testcase_t
enable	bufferevent-internal.h	/^	int (*enable)(struct bufferevent *, short);$/;"	m	struct:bufferevent_ops
enable	listener.c	/^	int (*enable)(struct evconnlistener *);$/;"	m	struct:evconnlistener_ops	file:
enabled	include/event2/bufferevent_struct.h	/^	short enabled;$/;"	m	struct:bufferevent
enabled	listener.c	/^	unsigned enabled : 1;$/;"	m	struct:evconnlistener	file:
encode_int	include/event2/tag_compat.h	45;"	d
encode_int64	include/event2/tag_compat.h	46;"	d
encode_int64_internal	event_tagging.c	/^encode_int64_internal(ev_uint8_t *data, ev_uint64_t number)$/;"	f	file:
encode_int_internal	event_tagging.c	/^encode_int_internal(ev_uint8_t *data, ev_uint32_t number)$/;"	f	file:
end_of_authority	http.c	/^end_of_authority(char *cp)$/;"	f	file:
end_of_cpath	http.c	4997;"	d	file:
end_of_path	http.c	/^end_of_path(char *cp, enum uri_part part, unsigned flags)$/;"	f	file:
ent	evmap.c	/^	} ent;$/;"	m	struct:event_map_entry	typeref:union:event_map_entry::__anon1	file:
entries	event-internal.h	/^	TAILQ_HEAD(event_configq, event_config_entry) entries;$/;"	m	struct:event_config
entries	event-internal.h	/^    void **entries;$/;"	m	struct:event_signal_map
entry	compat/sys/sample_restore_queue.c	/^    }entry;$/;"	m	struct:queue_entry_t	typeref:struct:queue_entry_t::__anon17	file:
entry_status	test/regress_util.c	/^enum entry_status { NORMAL, CANONICAL, BAD };$/;"	g	file:
eo	test/regress_iocp.c	/^	struct event_overlapped eo;$/;"	m	struct:dummy_overlapped	typeref:struct:dummy_overlapped::event_overlapped	file:
epfd	epoll.c	/^	int epfd;$/;"	m	struct:epollop	file:
epoll_apply_changes	epoll.c	/^epoll_apply_changes(struct event_base *base)$/;"	f	file:
epoll_apply_one_change	epoll.c	/^epoll_apply_one_change(struct event_base *base,$/;"	f	file:
epoll_create	epoll_sub.c	/^epoll_create(int size)$/;"	f
epoll_ctl	epoll_sub.c	/^epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)$/;"	f
epoll_dealloc	epoll.c	/^epoll_dealloc(struct event_base *base)$/;"	f	file:
epoll_dispatch	epoll.c	/^epoll_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
epoll_init	epoll.c	/^epoll_init(struct event_base *base)$/;"	f	file:
epoll_nochangelist_add	epoll.c	/^epoll_nochangelist_add(struct event_base *base, evutil_socket_t fd,$/;"	f	file:
epoll_nochangelist_del	epoll.c	/^epoll_nochangelist_del(struct event_base *base, evutil_socket_t fd,$/;"	f	file:
epoll_op_table	epolltable-internal.h	/^} epoll_op_table[] = {$/;"	v	typeref:struct:operation
epoll_op_to_string	epoll.c	/^epoll_op_to_string(int op)$/;"	f	file:
epoll_wait	epoll_sub.c	/^epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout)$/;"	f
epollop	epoll.c	/^struct epollop {$/;"	s	file:
epollops	epoll.c	/^const struct eventop epollops = {$/;"	v	typeref:struct:eventop
epollops_changelist	epoll.c	/^static const struct eventop epollops_changelist = {$/;"	v	typeref:struct:eventop	file:
eq_cached_sock_errs	evutil.c	/^eq_cached_sock_errs(const struct cached_sock_errs_entry *a,$/;"	f	file:
eq_debug_entry	event.c	/^eq_debug_entry(const struct event_debug_entry *a,$/;"	f	file:
eqsocket	evmap.c	/^eqsocket(struct event_map_entry *e1, struct event_map_entry *e2)$/;"	f	file:
err	evdns.c	/^	u32 err;$/;"	m	struct:deferred_reply_callback	file:
err	sample/https-client.c	/^err(const char *msg)$/;"	f	file:
err	test/regress_dns.c	/^	int err;$/;"	m	struct:gai_outcome	file:
err_fn	test/regress_util.c	/^err_fn(void)$/;"	f	file:
err_openssl	sample/https-client.c	/^err_openssl(const char *func)$/;"	f	file:
errno_pending	bufferevent-internal.h	/^	int errno_pending;$/;"	m	struct:bufferevent_private
error	include/event2/rpc_struct.h	/^	int error;$/;"	m	struct:evrpc_status
error	listener.c	/^	int error;$/;"	m	struct:accepting_socket	file:
error_cb	include/event2/http_struct.h	/^	void (*error_cb)(enum evhttp_request_error, void *);$/;"	m	struct:evhttp_request
errorcb	include/event2/bufferevent_struct.h	/^	bufferevent_event_cb errorcb;$/;"	m	struct:bufferevent
errorcb	listener.c	/^	evconnlistener_errorcb errorcb;$/;"	m	struct:evconnlistener	file:
errorcb	test/bench_httpclient.c	/^errorcb(struct bufferevent *b, short what, void *arg)$/;"	f	file:
errorcb	test/regress_bufferevent.c	/^errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
errorcb	test/regress_listener.c	/^errorcb(struct evconnlistener *lis, void *data_)$/;"	f	file:
errorcb	test/regress_zlib.c	/^errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
errorcb_invoked	test/regress_zlib.c	/^static int errorcb_invoked;$/;"	v	file:
errors	bufferevent_openssl.c	/^	ev_uint32_t errors[NUM_ERRORS];$/;"	m	struct:bufferevent_openssl	file:
errx_fn	test/regress_util.c	/^errx_fn(void)$/;"	f	file:
ev	event-internal.h	/^	struct event ev;$/;"	m	struct:event_once	typeref:struct:event_once::event
ev	test/regress.c	/^	const struct event *ev;$/;"	m	struct:foreach_helper	typeref:struct:foreach_helper::event	file:
ev	test/regress.c	/^	struct event **ev;$/;"	m	struct:read_not_timeout_param	typeref:struct:read_not_timeout_param::event	file:
ev	test/regress.c	/^	struct event *ev;$/;"	m	struct:basic_cb_args	typeref:struct:basic_cb_args::event	file:
ev	test/regress.c	/^	struct event ev;$/;"	m	struct:both	typeref:struct:both::event	file:
ev	test/regress.c	/^	struct event ev;$/;"	m	struct:common_timeout_info	typeref:struct:common_timeout_info::event	file:
ev	test/regress.c	/^	struct event ev;$/;"	m	struct:test_pri_event	typeref:struct:test_pri_event::event	file:
ev	test/regress_finalize.c	/^	struct event *ev;$/;"	m	struct:event_and_count	typeref:struct:event_and_count::event	file:
ev	test/test-time.c	/^struct event *ev[NEVENT];$/;"	v	typeref:struct:event
ev2	test/regress_finalize.c	/^	struct event *ev2;$/;"	m	struct:event_and_count	typeref:struct:event_and_count::event	file:
ev_	include/event2/event_struct.h	/^	} ev_;$/;"	m	struct:event	typeref:union:event::__anon6
ev_GetTickCount_func	time-internal.h	/^typedef ULONGLONG (WINAPI *ev_GetTickCount_func)(void);$/;"	t
ev_arc4random_buf	evutil_rand.c	/^ev_arc4random_buf(void *buf, size_t n)$/;"	f	file:
ev_arg	event-internal.h	64;"	d
ev_base	include/event2/bufferevent_struct.h	/^	struct event_base *ev_base;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_base
ev_base	include/event2/event_struct.h	/^	struct event_base *ev_base;$/;"	m	struct:event	typeref:struct:event::event_base
ev_callback	event-internal.h	63;"	d
ev_closure	event-internal.h	62;"	d
ev_evcallback	include/event2/event_struct.h	/^	struct event_callback ev_evcallback;$/;"	m	struct:event	typeref:struct:event::event_callback
ev_events	include/event2/event_struct.h	/^	short ev_events;$/;"	m	struct:event
ev_fd	include/event2/event_struct.h	/^	evutil_socket_t ev_fd;$/;"	m	struct:event
ev_flags	event-internal.h	61;"	d
ev_int16_t	include/event2/util.h	159;"	d
ev_int16_t	include/event2/util.h	162;"	d
ev_int16_t	include/event2/util.h	165;"	d
ev_int16_t	include/event2/util.h	168;"	d
ev_int16_t	include/event2/util.h	171;"	d
ev_int32_t	include/event2/util.h	140;"	d
ev_int32_t	include/event2/util.h	143;"	d
ev_int32_t	include/event2/util.h	146;"	d
ev_int32_t	include/event2/util.h	149;"	d
ev_int32_t	include/event2/util.h	152;"	d
ev_int64_t	include/event2/util.h	121;"	d
ev_int64_t	include/event2/util.h	124;"	d
ev_int64_t	include/event2/util.h	127;"	d
ev_int64_t	include/event2/util.h	130;"	d
ev_int64_t	include/event2/util.h	133;"	d
ev_int8_t	include/event2/util.h	178;"	d
ev_int8_t	include/event2/util.h	181;"	d
ev_int8_t	include/event2/util.h	184;"	d
ev_intptr_t	include/event2/util.h	189;"	d
ev_intptr_t	include/event2/util.h	192;"	d
ev_intptr_t	include/event2/util.h	195;"	d
ev_intptr_t	include/event2/util.h	198;"	d
ev_io	include/event2/event_struct.h	/^		} ev_io;$/;"	m	union:event::__anon6	typeref:struct:event::__anon6::__anon7
ev_io_next	event-internal.h	50;"	d
ev_io_next	include/event2/event_struct.h	/^			LIST_ENTRY (event) ev_io_next;$/;"	m	struct:event::__anon6::__anon7
ev_io_timeout	event-internal.h	52;"	d
ev_misalign_t	evbuffer-internal.h	/^typedef ev_off_t ev_misalign_t;$/;"	t
ev_misalign_t	evbuffer-internal.h	/^typedef ev_ssize_t ev_misalign_t;$/;"	t
ev_n_signals_added	evsignal-internal.h	/^	int ev_n_signals_added;$/;"	m	struct:evsig_info
ev_ncalls	event-internal.h	56;"	d
ev_ncalls	include/event2/event_struct.h	/^			short ev_ncalls;$/;"	m	struct:event::__anon6::__anon8
ev_next_with_common_timeout	include/event2/event_struct.h	/^		TAILQ_ENTRY(event) ev_next_with_common_timeout;$/;"	m	union:event::__anon5
ev_off_t	include/event2/util.h	217;"	d
ev_off_t	include/event2/util.h	219;"	d
ev_off_t	include/event2/util.h	221;"	d
ev_off_t	include/event2/util.h	223;"	d
ev_off_t	include/event2/util.h	225;"	d
ev_pncalls	event-internal.h	57;"	d
ev_pncalls	include/event2/event_struct.h	/^			short *ev_pncalls;$/;"	m	struct:event::__anon6::__anon8
ev_pri	event-internal.h	60;"	d
ev_read	include/event2/bufferevent_struct.h	/^	struct event ev_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event
ev_res	include/event2/event_struct.h	/^	short ev_res;		\/* result passed to event callback *\/$/;"	m	struct:event
ev_sighandler_t	evsignal-internal.h	/^typedef void (*ev_sighandler_t)(int);$/;"	t
ev_signal	evsignal-internal.h	/^	struct event ev_signal;$/;"	m	struct:evsig_info	typeref:struct:evsig_info::event
ev_signal	include/event2/event_struct.h	/^		} ev_signal;$/;"	m	union:event::__anon6	typeref:struct:event::__anon6::__anon8
ev_signal_added	evsignal-internal.h	/^	int ev_signal_added;$/;"	m	struct:evsig_info
ev_signal_next	event-internal.h	49;"	d
ev_signal_next	include/event2/event_struct.h	/^			LIST_ENTRY (event) ev_signal_next;$/;"	m	struct:event::__anon6::__anon8
ev_signal_pair	evsignal-internal.h	/^	evutil_socket_t ev_signal_pair[2];$/;"	m	struct:evsig_info
ev_socklen_t	include/event2/util.h	296;"	d
ev_socklen_t	include/event2/util.h	298;"	d
ev_socklen_t	include/event2/util.h	300;"	d
ev_ssize_t	include/event2/util.h	204;"	d
ev_ssize_t	include/event2/util.h	206;"	d
ev_timeout	evrpc-internal.h	/^	struct event ev_timeout;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::event
ev_timeout	include/event2/event_struct.h	/^			struct timeval ev_timeout;$/;"	m	struct:event::__anon6::__anon7	typeref:struct:event::__anon6::__anon7::timeval
ev_timeout	include/event2/event_struct.h	/^	struct timeval ev_timeout;$/;"	m	struct:event	typeref:struct:event::timeval
ev_timeout_pos	include/event2/event_struct.h	/^	} ev_timeout_pos;$/;"	m	struct:event	typeref:union:event::__anon5
ev_token_bucket	ratelim-internal.h	/^struct ev_token_bucket {$/;"	s
ev_token_bucket_cfg	ratelim-internal.h	/^struct ev_token_bucket_cfg {$/;"	s
ev_token_bucket_cfg_free	bufferevent_ratelim.c	/^ev_token_bucket_cfg_free(struct ev_token_bucket_cfg *cfg)$/;"	f
ev_token_bucket_cfg_new	bufferevent_ratelim.c	/^ev_token_bucket_cfg_new(size_t read_rate, size_t read_burst,$/;"	f
ev_token_bucket_decrement_read	ratelim-internal.h	92;"	d
ev_token_bucket_decrement_write	ratelim-internal.h	97;"	d
ev_token_bucket_get_tick_	bufferevent_ratelim.c	/^ev_token_bucket_get_tick_(const struct timeval *tv,$/;"	f
ev_token_bucket_init_	bufferevent_ratelim.c	/^ev_token_bucket_init_(struct ev_token_bucket *bucket,$/;"	f
ev_token_bucket_update_	bufferevent_ratelim.c	/^ev_token_bucket_update_(struct ev_token_bucket *bucket,$/;"	f
ev_uint16_t	include/event2/util.h	158;"	d
ev_uint16_t	include/event2/util.h	161;"	d
ev_uint16_t	include/event2/util.h	164;"	d
ev_uint16_t	include/event2/util.h	167;"	d
ev_uint16_t	include/event2/util.h	170;"	d
ev_uint32_t	include/event2/util.h	139;"	d
ev_uint32_t	include/event2/util.h	142;"	d
ev_uint32_t	include/event2/util.h	145;"	d
ev_uint32_t	include/event2/util.h	148;"	d
ev_uint32_t	include/event2/util.h	151;"	d
ev_uint64_t	include/event2/util.h	120;"	d
ev_uint64_t	include/event2/util.h	123;"	d
ev_uint64_t	include/event2/util.h	126;"	d
ev_uint64_t	include/event2/util.h	129;"	d
ev_uint64_t	include/event2/util.h	132;"	d
ev_uint8_t	include/event2/util.h	177;"	d
ev_uint8_t	include/event2/util.h	180;"	d
ev_uint8_t	include/event2/util.h	183;"	d
ev_uintptr_t	include/event2/util.h	188;"	d
ev_uintptr_t	include/event2/util.h	191;"	d
ev_uintptr_t	include/event2/util.h	194;"	d
ev_uintptr_t	include/event2/util.h	197;"	d
ev_write	include/event2/bufferevent_struct.h	/^	struct event ev_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event
evbase	event-internal.h	/^	void *evbase;$/;"	m	struct:event_base
evbuffer	evbuffer-internal.h	/^struct evbuffer {$/;"	s
evbuffer	include/event2/buffer.h	/^struct evbuffer$/;"	s
evbuffer_add	buffer.c	/^evbuffer_add(struct evbuffer *buf, const void *data_in, size_t datlen)$/;"	f
evbuffer_add_buffer	buffer.c	/^evbuffer_add_buffer(struct evbuffer *outbuf, struct evbuffer *inbuf)$/;"	f
evbuffer_add_buffer_reference	buffer.c	/^evbuffer_add_buffer_reference(struct evbuffer *outbuf, struct evbuffer *inbuf)$/;"	f
evbuffer_add_cb	buffer.c	/^        evbuffer_add_cb(struct evbuffer *buffer, evbuffer_cb_func cb, void *cbarg)$/;"	f
evbuffer_add_file	buffer.c	/^evbuffer_add_file(struct evbuffer *buf, int fd, ev_off_t offset, ev_off_t length)$/;"	f
evbuffer_add_file_segment	buffer.c	/^evbuffer_add_file_segment(struct evbuffer *buf,$/;"	f
evbuffer_add_iovec	buffer.c	/^evbuffer_add_iovec(struct evbuffer * buf, struct evbuffer_iovec * vec, int n_vec) {$/;"	f
evbuffer_add_printf	buffer.c	/^evbuffer_add_printf(struct evbuffer *buf, const char *fmt, ...)$/;"	f
evbuffer_add_reference	buffer.c	/^evbuffer_add_reference(struct evbuffer *outbuf,$/;"	f
evbuffer_add_vprintf	buffer.c	/^evbuffer_add_vprintf(struct evbuffer *buf, const char *fmt, va_list ap)$/;"	f
evbuffer_cb	include/event2/buffer_compat.h	/^typedef void (*evbuffer_cb)(struct evbuffer *buffer, size_t old_len, size_t new_len, void *arg);$/;"	t
evbuffer_cb_clear_flags	buffer.c	/^evbuffer_cb_clear_flags(struct evbuffer *buffer,$/;"	f
evbuffer_cb_entry	evbuffer-internal.h	/^struct evbuffer_cb_entry {$/;"	s
evbuffer_cb_func	include/event2/buffer.h	/^typedef void (*evbuffer_cb_func)(struct evbuffer *buffer, const struct evbuffer_cb_info *info, void *arg);$/;"	t
evbuffer_cb_info	include/event2/buffer.h	/^struct evbuffer_cb_info {$/;"	s
evbuffer_cb_set_flags	buffer.c	/^evbuffer_cb_set_flags(struct evbuffer *buffer,$/;"	f
evbuffer_chain	evbuffer-internal.h	/^struct evbuffer_chain {$/;"	s
evbuffer_chain_align	buffer.c	/^evbuffer_chain_align(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_file_segment	evbuffer-internal.h	/^struct evbuffer_chain_file_segment {$/;"	s
evbuffer_chain_free	buffer.c	/^evbuffer_chain_free(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_incref	buffer.c	/^evbuffer_chain_incref(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_insert	buffer.c	/^evbuffer_chain_insert(struct evbuffer *buf,$/;"	f	file:
evbuffer_chain_insert_new	buffer.c	/^        evbuffer_chain_insert_new(struct evbuffer *buf, size_t datlen)$/;"	f	file:
evbuffer_chain_new	buffer.c	/^        evbuffer_chain_new(size_t size)$/;"	f	file:
evbuffer_chain_pin_	buffer.c	/^evbuffer_chain_pin_(struct evbuffer_chain *chain, unsigned flag)$/;"	f
evbuffer_chain_reference	evbuffer-internal.h	/^struct evbuffer_chain_reference {$/;"	s
evbuffer_chain_should_realign	buffer.c	/^evbuffer_chain_should_realign(struct evbuffer_chain *chain,$/;"	f	file:
evbuffer_chain_unpin_	buffer.c	/^evbuffer_chain_unpin_(struct evbuffer_chain *chain, unsigned flag)$/;"	f
evbuffer_chains_all_empty	buffer.c	/^evbuffer_chains_all_empty(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chains_all_empty	buffer.c	/^static inline int evbuffer_chains_all_empty(struct evbuffer_chain *chain) {$/;"	f	file:
evbuffer_clear_flags	buffer.c	/^evbuffer_clear_flags(struct evbuffer *buf, ev_uint64_t flags)$/;"	f
evbuffer_commit_read_	buffer_iocp.c	/^evbuffer_commit_read_(struct evbuffer *evbuf, ev_ssize_t nBytes)$/;"	f
evbuffer_commit_space	buffer.c	/^evbuffer_commit_space(struct evbuffer *buf,$/;"	f
evbuffer_commit_write_	buffer_iocp.c	/^evbuffer_commit_write_(struct evbuffer *evbuf, ev_ssize_t nBytes)$/;"	f
evbuffer_contains	test/regress_http.c	/^evbuffer_contains(struct evbuffer *buf, const char *s)$/;"	f	file:
evbuffer_copyout	buffer.c	/^evbuffer_copyout(struct evbuffer *buf, void *data_out, size_t datlen)$/;"	f
evbuffer_copyout_from	buffer.c	/^evbuffer_copyout_from(struct evbuffer *buf, const struct evbuffer_ptr *pos,$/;"	f
evbuffer_datacmp	test/regress_http.c	/^evbuffer_datacmp(struct evbuffer *buf, const char *s)$/;"	f	file:
evbuffer_decref_and_unlock_	buffer.c	/^evbuffer_decref_and_unlock_(struct evbuffer *buffer)$/;"	f
evbuffer_defer_callbacks	buffer.c	/^evbuffer_defer_callbacks(struct evbuffer *buffer, struct event_base *base)$/;"	f
evbuffer_deferred_callback	buffer.c	/^evbuffer_deferred_callback(struct event_callback *cb, void *arg)$/;"	f	file:
evbuffer_drain	buffer.c	/^evbuffer_drain(struct evbuffer *buf, size_t len)$/;"	f
evbuffer_enable_locking	buffer.c	/^evbuffer_enable_locking(struct evbuffer *buf, void *lock)$/;"	f
evbuffer_eol_style	include/event2/buffer.h	/^enum evbuffer_eol_style {$/;"	g
evbuffer_expand	buffer.c	/^evbuffer_expand(struct evbuffer *buf, size_t datlen)$/;"	f
evbuffer_expand_fast_	buffer.c	/^evbuffer_expand_fast_(struct evbuffer *buf, size_t datlen, int n)$/;"	f
evbuffer_expand_singlechain	buffer.c	/^        evbuffer_expand_singlechain(struct evbuffer *buf, size_t datlen)$/;"	f	file:
evbuffer_file_segment	evbuffer-internal.h	/^struct evbuffer_file_segment {$/;"	s
evbuffer_file_segment_add_cleanup_cb	buffer.c	/^void evbuffer_file_segment_add_cleanup_cb(struct evbuffer_file_segment *seg,$/;"	f
evbuffer_file_segment_cleanup_cb	include/event2/buffer.h	/^typedef void (*evbuffer_file_segment_cleanup_cb)($/;"	t
evbuffer_file_segment_free	buffer.c	/^evbuffer_file_segment_free(struct evbuffer_file_segment *seg)$/;"	f
evbuffer_file_segment_materialize	buffer.c	/^evbuffer_file_segment_materialize(struct evbuffer_file_segment *seg)$/;"	f	file:
evbuffer_file_segment_new	buffer.c	/^        evbuffer_file_segment_new($/;"	f
evbuffer_find	buffer.c	/^evbuffer_find(struct evbuffer *buffer, const unsigned char *what, size_t len)$/;"	f
evbuffer_find_eol_char	buffer.c	/^evbuffer_find_eol_char(struct evbuffer_ptr *it)$/;"	f	file:
evbuffer_free	buffer.c	/^evbuffer_free(struct evbuffer *buffer)$/;"	f
evbuffer_free_all_chains	buffer.c	/^evbuffer_free_all_chains(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_free_trailing_empty_chains	buffer.c	/^        evbuffer_free_trailing_empty_chains(struct evbuffer *buf)$/;"	f	file:
evbuffer_freeze	buffer.c	/^evbuffer_freeze(struct evbuffer *buffer, int start)$/;"	f
evbuffer_get_callbacks_	buffer.c	/^evbuffer_get_callbacks_(struct evbuffer *buffer, struct event_callback **cbs,$/;"	f
evbuffer_get_contiguous_space	buffer.c	/^evbuffer_get_contiguous_space(const struct evbuffer *buf)$/;"	f
evbuffer_get_length	buffer.c	/^evbuffer_get_length(const struct evbuffer *buffer)$/;"	f
evbuffer_get_waste	test/regress_buffer.c	/^evbuffer_get_waste(struct evbuffer *buf, size_t *allocatedp, size_t *wastedp, size_t *usedp)$/;"	f	file:
evbuffer_getchr	buffer.c	/^evbuffer_getchr(struct evbuffer_ptr *it)$/;"	f	file:
evbuffer_incref_	buffer.c	/^evbuffer_incref_(struct evbuffer *buf)$/;"	f
evbuffer_incref_and_lock_	buffer.c	/^evbuffer_incref_and_lock_(struct evbuffer *buf)$/;"	f
evbuffer_invoke_callbacks_	buffer.c	/^evbuffer_invoke_callbacks_(struct evbuffer *buffer)$/;"	f
evbuffer_iovec	include/event2/buffer.h	/^struct evbuffer_iovec {$/;"	s
evbuffer_iovec	include/event2/buffer.h	142;"	d
evbuffer_launch_read_	buffer_iocp.c	/^evbuffer_launch_read_(struct evbuffer *buf, size_t at_most,$/;"	f
evbuffer_launch_write_	buffer_iocp.c	/^evbuffer_launch_write_(struct evbuffer *buf, ev_ssize_t at_most,$/;"	f
evbuffer_lock	buffer.c	/^evbuffer_lock(struct evbuffer *buf)$/;"	f
evbuffer_multicast_parent	evbuffer-internal.h	/^struct evbuffer_multicast_parent {$/;"	s
evbuffer_new	buffer.c	/^        evbuffer_new(void)$/;"	f
evbuffer_overlapped	buffer_iocp.c	/^struct evbuffer_overlapped {$/;"	s	file:
evbuffer_overlapped_get_fd_	buffer_iocp.c	/^evbuffer_overlapped_get_fd_(struct evbuffer *buf)$/;"	f
evbuffer_overlapped_new_	buffer_iocp.c	/^evbuffer_overlapped_new_(evutil_socket_t fd)$/;"	f
evbuffer_overlapped_set_fd_	buffer_iocp.c	/^evbuffer_overlapped_set_fd_(struct evbuffer *buf, evutil_socket_t fd)$/;"	f
evbuffer_peek	buffer.c	/^evbuffer_peek(struct evbuffer *buffer, ev_ssize_t len,$/;"	f
evbuffer_prepend	buffer.c	/^evbuffer_prepend(struct evbuffer *buf, const void *data, size_t datlen)$/;"	f
evbuffer_prepend_buffer	buffer.c	/^evbuffer_prepend_buffer(struct evbuffer *outbuf, struct evbuffer *inbuf)$/;"	f
evbuffer_ptr	include/event2/buffer.h	/^struct evbuffer_ptr {$/;"	s
evbuffer_ptr_how	include/event2/buffer.h	/^enum evbuffer_ptr_how {$/;"	g
evbuffer_ptr_memcmp	buffer.c	/^evbuffer_ptr_memcmp(const struct evbuffer *buf, const struct evbuffer_ptr *pos,$/;"	f	file:
evbuffer_ptr_set	buffer.c	/^evbuffer_ptr_set(struct evbuffer *buf, struct evbuffer_ptr *pos,$/;"	f
evbuffer_ptr_subtract	buffer.c	/^evbuffer_ptr_subtract(struct evbuffer *buf, struct evbuffer_ptr *pos,$/;"	f	file:
evbuffer_pullup	buffer.c	/^evbuffer_pullup(struct evbuffer *buf, ev_ssize_t size)$/;"	f
evbuffer_read	buffer.c	/^evbuffer_read(struct evbuffer *buf, evutil_socket_t fd, int howmuch)$/;"	f
evbuffer_read_setup_vecs_	buffer.c	/^evbuffer_read_setup_vecs_(struct evbuffer *buf, ev_ssize_t howmuch,$/;"	f
evbuffer_readline	buffer.c	/^evbuffer_readline(struct evbuffer *buffer)$/;"	f
evbuffer_readln	buffer.c	/^evbuffer_readln(struct evbuffer *buffer, size_t *n_read_out,$/;"	f
evbuffer_ref_cleanup_cb	include/event2/buffer.h	/^typedef void (*evbuffer_ref_cleanup_cb)(const void *data,$/;"	t
evbuffer_remove	buffer.c	/^evbuffer_remove(struct evbuffer *buf, void *data_out, size_t datlen)$/;"	f
evbuffer_remove_all_callbacks	buffer.c	/^evbuffer_remove_all_callbacks(struct evbuffer *buffer)$/;"	f	file:
evbuffer_remove_buffer	buffer.c	/^evbuffer_remove_buffer(struct evbuffer *src, struct evbuffer *dst,$/;"	f
evbuffer_remove_cb	buffer.c	/^evbuffer_remove_cb(struct evbuffer *buffer, evbuffer_cb_func cb, void *cbarg)$/;"	f
evbuffer_remove_cb_entry	buffer.c	/^evbuffer_remove_cb_entry(struct evbuffer *buffer,$/;"	f
evbuffer_reserve_space	buffer.c	/^evbuffer_reserve_space(struct evbuffer *buf, ev_ssize_t size,$/;"	f
evbuffer_run_callbacks	buffer.c	/^evbuffer_run_callbacks(struct evbuffer *buffer, int running_deferred)$/;"	f	file:
evbuffer_search	buffer.c	/^        evbuffer_search(struct evbuffer *buffer, const char *what, size_t len, const struct evbuffer_ptr *start)$/;"	f
evbuffer_search_eol	buffer.c	/^        evbuffer_search_eol(struct evbuffer *buffer,$/;"	f
evbuffer_search_range	buffer.c	/^        evbuffer_search_range(struct evbuffer *buffer, const char *what, size_t len, const struct evbuffer_ptr *start, const struct evbuffer_ptr *end)$/;"	f
evbuffer_set_flags	buffer.c	/^evbuffer_set_flags(struct evbuffer *buf, ev_uint64_t flags)$/;"	f
evbuffer_set_parent_	buffer.c	/^evbuffer_set_parent_(struct evbuffer *buf, struct bufferevent *bev)$/;"	f
evbuffer_setcb	buffer.c	/^evbuffer_setcb(struct evbuffer *buffer, evbuffer_cb cb, void *cbarg)$/;"	f
evbuffer_strchr	buffer.c	/^evbuffer_strchr(struct evbuffer_ptr *it, const char chr)$/;"	f	file:
evbuffer_strspn	buffer.c	/^evbuffer_strspn($/;"	f	file:
evbuffer_testcases	test/regress_buffer.c	/^struct testcase_t evbuffer_testcases[] = {$/;"	v	typeref:struct:testcase_t
evbuffer_unfreeze	buffer.c	/^evbuffer_unfreeze(struct evbuffer *buffer, int start)$/;"	f
evbuffer_unlock	buffer.c	/^evbuffer_unlock(struct evbuffer *buf)$/;"	f
evbuffer_validate	test/regress_buffer.c	167;"	d	file:
evbuffer_validate_	test/regress_buffer.c	/^evbuffer_validate_(struct evbuffer *buf)$/;"	f	file:
evbuffer_write	buffer.c	/^evbuffer_write(struct evbuffer *buffer, evutil_socket_t fd)$/;"	f
evbuffer_write_atmost	buffer.c	/^evbuffer_write_atmost(struct evbuffer *buffer, evutil_socket_t fd,$/;"	f
evbuffer_write_iovec	buffer.c	/^evbuffer_write_iovec(struct evbuffer *buffer, evutil_socket_t fd,$/;"	f	file:
evbuffer_write_sendfile	buffer.c	/^evbuffer_write_sendfile(struct evbuffer *buffer, evutil_socket_t dest_fd,$/;"	f	file:
evbuffercb	include/event2/bufferevent_compat.h	31;"	d
evcb_active_next	include/event2/event_struct.h	/^    TAILQ_ENTRY(event_callback) evcb_active_next; \/\/链表结点，事件发生后链接到激活链表$/;"	m	struct:event_callback
evcb_arg	include/event2/event_struct.h	/^	void *evcb_arg;$/;"	m	struct:event_callback
evcb_callback	include/event2/event_struct.h	/^		void (*evcb_callback)(evutil_socket_t, short, void *);$/;"	m	union:event_callback::__anon4
evcb_cb_union	include/event2/event_struct.h	/^	} evcb_cb_union;$/;"	m	struct:event_callback	typeref:union:event_callback::__anon4
evcb_cbfinalize	include/event2/event_struct.h	/^		void (*evcb_cbfinalize)(struct event_callback *, void *);$/;"	m	union:event_callback::__anon4
evcb_closure	include/event2/event_struct.h	/^	ev_uint8_t evcb_closure;$/;"	m	struct:event_callback
evcb_evfinalize	include/event2/event_struct.h	/^		void (*evcb_evfinalize)(struct event *, void *);$/;"	m	union:event_callback::__anon4
evcb_flags	include/event2/event_struct.h	/^	short evcb_flags;$/;"	m	struct:event_callback
evcb_pri	include/event2/event_struct.h	/^    ev_uint8_t evcb_pri;	\/* smaller numbers are higher priority *\/$/;"	m	struct:event_callback
evcb_selfcb	include/event2/event_struct.h	/^		void (*evcb_selfcb)(struct event_callback *, void *);$/;"	m	union:event_callback::__anon4
evcon	evrpc-internal.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evrpc_hook_meta	typeref:struct:evrpc_hook_meta::evhttp_connection
evcon	evrpc-internal.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evhttp_connection
evcon	include/event2/http_struct.h	/^	struct evhttp_connection *evcon;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evhttp_connection
evcon	sample/http-connect.c	/^	struct evhttp_connection *evcon;$/;"	m	struct:connect_base	typeref:struct:connect_base::evhttp_connection	file:
evconnlistener	listener.c	/^struct evconnlistener {$/;"	s	file:
evconnlistener_cb	include/event2/listener.h	/^typedef void (*evconnlistener_cb)(struct evconnlistener *, evutil_socket_t, struct sockaddr *, int socklen, void *);$/;"	t
evconnlistener_disable	listener.c	/^evconnlistener_disable(struct evconnlistener *lev)$/;"	f
evconnlistener_enable	listener.c	/^evconnlistener_enable(struct evconnlistener *lev)$/;"	f
evconnlistener_errorcb	include/event2/listener.h	/^typedef void (*evconnlistener_errorcb)(struct evconnlistener *, void *);$/;"	t
evconnlistener_event	listener.c	/^struct evconnlistener_event {$/;"	s	file:
evconnlistener_event_ops	listener.c	/^static const struct evconnlistener_ops evconnlistener_event_ops = {$/;"	v	typeref:struct:evconnlistener_ops	file:
evconnlistener_free	listener.c	/^evconnlistener_free(struct evconnlistener *lev)$/;"	f
evconnlistener_get_base	listener.c	/^evconnlistener_get_base(struct evconnlistener *lev)$/;"	f
evconnlistener_get_fd	listener.c	/^evconnlistener_get_fd(struct evconnlistener *lev)$/;"	f
evconnlistener_iocp	listener.c	/^struct evconnlistener_iocp {$/;"	s	file:
evconnlistener_iocp_ops	listener.c	/^static const struct evconnlistener_ops evconnlistener_iocp_ops = {$/;"	v	typeref:struct:evconnlistener_ops	file:
evconnlistener_new	listener.c	/^evconnlistener_new(struct event_base *base,$/;"	f
evconnlistener_new_async	listener.c	/^evconnlistener_new_async(struct event_base *base,$/;"	f
evconnlistener_new_bind	listener.c	/^evconnlistener_new_bind(struct event_base *base, evconnlistener_cb cb,$/;"	f
evconnlistener_ops	listener.c	/^struct evconnlistener_ops {$/;"	s	file:
evconnlistener_set_cb	listener.c	/^evconnlistener_set_cb(struct evconnlistener *lev,$/;"	f
evconnlistener_set_error_cb	listener.c	/^evconnlistener_set_error_cb(struct evconnlistener *lev,$/;"	f
evdns_add_server_port	evdns.c	/^evdns_add_server_port(evutil_socket_t socket, int flags, evdns_request_callback_fn_type cb, void *user_data)$/;"	f
evdns_add_server_port_with_base	evdns.c	/^evdns_add_server_port_with_base(struct event_base *base, evutil_socket_t socket, int flags, evdns_request_callback_fn_type cb, void *user_data)$/;"	f
evdns_base	evdns.c	/^	struct evdns_base *evdns_base;$/;"	m	struct:evdns_getaddrinfo_request	typeref:struct:evdns_getaddrinfo_request::evdns_base	file:
evdns_base	evdns.c	/^struct evdns_base {$/;"	s	file:
evdns_base_clear_host_addresses	evdns.c	/^evdns_base_clear_host_addresses(struct evdns_base *base)$/;"	f
evdns_base_clear_nameservers_and_suspend	evdns.c	/^evdns_base_clear_nameservers_and_suspend(struct evdns_base *base)$/;"	f
evdns_base_config_windows_nameservers	evdns.c	/^evdns_base_config_windows_nameservers(struct evdns_base *base)$/;"	f
evdns_base_count_nameservers	evdns.c	/^evdns_base_count_nameservers(struct evdns_base *base)$/;"	f
evdns_base_free	evdns.c	/^evdns_base_free(struct evdns_base *base, int fail_requests)$/;"	f
evdns_base_free_and_unlock	evdns.c	/^evdns_base_free_and_unlock(struct evdns_base *base, int fail_requests)$/;"	f	file:
evdns_base_get_nameserver_addr	evdns.c	/^evdns_base_get_nameserver_addr(struct evdns_base *base, int idx,$/;"	f
evdns_base_load_hosts	evdns.c	/^evdns_base_load_hosts(struct evdns_base *base, const char *hosts_fname)$/;"	f
evdns_base_load_hosts_impl	evdns.c	/^evdns_base_load_hosts_impl(struct evdns_base *base, const char *hosts_fname)$/;"	f	file:
evdns_base_nameserver_add	evdns.c	/^evdns_base_nameserver_add(struct evdns_base *base, unsigned long int address)$/;"	f
evdns_base_nameserver_ip_add	evdns.c	/^evdns_base_nameserver_ip_add(struct evdns_base *base, const char *ip_as_string) {$/;"	f
evdns_base_nameserver_sockaddr_add	evdns.c	/^evdns_base_nameserver_sockaddr_add(struct evdns_base *base,$/;"	f
evdns_base_new	evdns.c	/^evdns_base_new(struct event_base *event_base, int flags)$/;"	f
evdns_base_parse_hosts_line	evdns.c	/^evdns_base_parse_hosts_line(struct evdns_base *base, char *line)$/;"	f	file:
evdns_base_resolv_conf_parse	evdns.c	/^evdns_base_resolv_conf_parse(struct evdns_base *base, int flags, const char *const filename) {$/;"	f
evdns_base_resolv_conf_parse_impl	evdns.c	/^evdns_base_resolv_conf_parse_impl(struct evdns_base *base, int flags, const char *const filename) {$/;"	f	file:
evdns_base_resolve_ipv4	evdns.c	/^evdns_base_resolve_ipv4(struct evdns_base *base, const char *name, int flags,$/;"	f
evdns_base_resolve_ipv6	evdns.c	/^evdns_base_resolve_ipv6(struct evdns_base *base,$/;"	f
evdns_base_resolve_reverse	evdns.c	/^evdns_base_resolve_reverse(struct evdns_base *base, const struct in_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_base_resolve_reverse_ipv6	evdns.c	/^evdns_base_resolve_reverse_ipv6(struct evdns_base *base, const struct in6_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_base_resume	evdns.c	/^evdns_base_resume(struct evdns_base *base)$/;"	f
evdns_base_search_add	evdns.c	/^evdns_base_search_add(struct evdns_base *base, const char *domain) {$/;"	f
evdns_base_search_clear	evdns.c	/^evdns_base_search_clear(struct evdns_base *base)$/;"	f
evdns_base_search_ndots_set	evdns.c	/^evdns_base_search_ndots_set(struct evdns_base *base, const int ndots) {$/;"	f
evdns_base_set_max_requests_inflight	evdns.c	/^evdns_base_set_max_requests_inflight(struct evdns_base *base, int maxinflight)$/;"	f	file:
evdns_base_set_option	evdns.c	/^evdns_base_set_option(struct evdns_base *base,$/;"	f
evdns_base_set_option_impl	evdns.c	/^evdns_base_set_option_impl(struct evdns_base *base,$/;"	f	file:
evdns_callback_type	include/event2/dns.h	/^typedef void (*evdns_callback_type) (int result, char type, int count, int ttl, void *addresses, void *arg);$/;"	t
evdns_cancel_request	evdns.c	/^evdns_cancel_request(struct evdns_base *base, struct evdns_request *handle)$/;"	f
evdns_clear_nameservers_and_suspend	evdns.c	/^evdns_clear_nameservers_and_suspend(void)$/;"	f
evdns_close_server_port	evdns.c	/^evdns_close_server_port(struct evdns_server_port *port)$/;"	f
evdns_config_windows_nameservers	evdns.c	/^evdns_config_windows_nameservers(void)$/;"	f
evdns_count_nameservers	evdns.c	/^evdns_count_nameservers(void)$/;"	f
evdns_debug_log_fn_type	include/event2/dns.h	/^typedef void (*evdns_debug_log_fn_type)(int is_warning, const char *msg);$/;"	t
evdns_err_to_getaddrinfo_err	evdns.c	/^evdns_err_to_getaddrinfo_err(int e1)$/;"	f	file:
evdns_err_to_string	evdns.c	/^evdns_err_to_string(int err)$/;"	f
evdns_get_default_hosts_filename	evdns.c	/^evdns_get_default_hosts_filename(void)$/;"	f	file:
evdns_get_global_base	evdns.c	/^evdns_get_global_base(void)$/;"	f
evdns_getaddrinfo	evdns.c	/^evdns_getaddrinfo(struct evdns_base *dns_base,$/;"	f
evdns_getaddrinfo_cancel	evdns.c	/^evdns_getaddrinfo_cancel(struct evdns_getaddrinfo_request *data)$/;"	f
evdns_getaddrinfo_cancel_fn	util-internal.h	/^typedef void (*evdns_getaddrinfo_cancel_fn)($/;"	t
evdns_getaddrinfo_cancel_impl	evutil.c	/^static evdns_getaddrinfo_cancel_fn evdns_getaddrinfo_cancel_impl = NULL;$/;"	v	file:
evdns_getaddrinfo_cb	include/event2/dns.h	/^typedef void (*evdns_getaddrinfo_cb)(int result, struct evutil_addrinfo *res, void *arg);$/;"	t
evdns_getaddrinfo_fn	util-internal.h	/^typedef struct evdns_getaddrinfo_request* (*evdns_getaddrinfo_fn)($/;"	t	typeref:struct:evdns_getaddrinfo_fn
evdns_getaddrinfo_fromhosts	evdns.c	/^evdns_getaddrinfo_fromhosts(struct evdns_base *base,$/;"	f	file:
evdns_getaddrinfo_gotresolve	evdns.c	/^evdns_getaddrinfo_gotresolve(int result, char type, int count,$/;"	f	file:
evdns_getaddrinfo_impl	evutil.c	/^static evdns_getaddrinfo_fn evdns_getaddrinfo_impl = NULL;$/;"	v	file:
evdns_getaddrinfo_request	evdns.c	/^struct evdns_getaddrinfo_request {$/;"	s	file:
evdns_getaddrinfo_set_timeout	evdns.c	/^evdns_getaddrinfo_set_timeout(struct evdns_base *evdns_base,$/;"	f	file:
evdns_getaddrinfo_timeout_cb	evdns.c	/^evdns_getaddrinfo_timeout_cb(evutil_socket_t fd, short what, void *ptr)$/;"	f	file:
evdns_init	evdns.c	/^evdns_init(void)$/;"	f
evdns_log_	evdns.c	/^evdns_log_(int severity, const char *fmt, ...)$/;"	f	file:
evdns_log_fn	evdns.c	/^static evdns_debug_log_fn_type evdns_log_fn = NULL;$/;"	v	file:
evdns_nameserver_add	evdns.c	/^evdns_nameserver_add(unsigned long int address) {$/;"	f
evdns_nameserver_add_impl_	evdns.c	/^evdns_nameserver_add_impl_(struct evdns_base *base, const struct sockaddr *address, int addrlen) {$/;"	f	file:
evdns_nameserver_free	evdns.c	/^evdns_nameserver_free(struct nameserver *server)$/;"	f	file:
evdns_nameserver_ip_add	evdns.c	/^evdns_nameserver_ip_add(const char *ip_as_string) {$/;"	f
evdns_nameserver_ip_add_line	evdns.c	/^evdns_nameserver_ip_add_line(struct evdns_base *base, const char *ips) {$/;"	f	file:
evdns_request	evdns.c	/^struct evdns_request {$/;"	s	file:
evdns_request_callback_fn_type	include/event2/dns.h	/^typedef void (*evdns_request_callback_fn_type)(struct evdns_server_request *, void *);$/;"	t
evdns_request_data_build	evdns.c	/^evdns_request_data_build(const char *const name, const size_t name_len,$/;"	f	file:
evdns_request_insert	evdns.c	/^evdns_request_insert(struct request *req, struct request **head) {$/;"	f	file:
evdns_request_len	evdns.c	/^evdns_request_len(const size_t name_len) {$/;"	f	file:
evdns_request_remove	evdns.c	/^evdns_request_remove(struct request *req, struct request **head)$/;"	f	file:
evdns_request_timeout_callback	evdns.c	/^evdns_request_timeout_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
evdns_request_transmit	evdns.c	/^evdns_request_transmit(struct request *req) {$/;"	f	file:
evdns_request_transmit_to	evdns.c	/^evdns_request_transmit_to(struct request *req, struct nameserver *server) {$/;"	f	file:
evdns_requests_pump_waiting_queue	evdns.c	/^evdns_requests_pump_waiting_queue(struct evdns_base *base) {$/;"	f	file:
evdns_resolv_conf_parse	evdns.c	/^evdns_resolv_conf_parse(int flags, const char *const filename) {$/;"	f
evdns_resolv_set_defaults	evdns.c	/^evdns_resolv_set_defaults(struct evdns_base *base, int flags) {$/;"	f	file:
evdns_resolve_ipv4	evdns.c	/^int evdns_resolve_ipv4(const char *name, int flags,$/;"	f
evdns_resolve_ipv6	evdns.c	/^int evdns_resolve_ipv6(const char *name, int flags,$/;"	f
evdns_resolve_reverse	evdns.c	/^int evdns_resolve_reverse(const struct in_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_resolve_reverse_ipv6	evdns.c	/^int evdns_resolve_reverse_ipv6(const struct in6_addr *in, int flags, evdns_callback_type callback, void *ptr) {$/;"	f
evdns_result_is_answer	evdns.c	/^evdns_result_is_answer(int result)$/;"	f	file:
evdns_resume	evdns.c	/^evdns_resume(void)$/;"	f
evdns_search_add	evdns.c	/^evdns_search_add(const char *domain) {$/;"	f
evdns_search_clear	evdns.c	/^evdns_search_clear(void) {$/;"	f
evdns_search_ndots_set	evdns.c	/^evdns_search_ndots_set(const int ndots) {$/;"	f
evdns_server_callback	sample/dns-example.c	/^evdns_server_callback(struct evdns_server_request *req, void *data)$/;"	f	file:
evdns_server_port	evdns.c	/^struct evdns_server_port {$/;"	s	file:
evdns_server_question	include/event2/dns_struct.h	/^struct evdns_server_question {$/;"	s
evdns_server_request	include/event2/dns_struct.h	/^struct evdns_server_request {$/;"	s
evdns_server_request_add_a_reply	evdns.c	/^evdns_server_request_add_a_reply(struct evdns_server_request *req, const char *name, int n, const void *addrs, int ttl)$/;"	f
evdns_server_request_add_aaaa_reply	evdns.c	/^evdns_server_request_add_aaaa_reply(struct evdns_server_request *req, const char *name, int n, const void *addrs, int ttl)$/;"	f
evdns_server_request_add_cname_reply	evdns.c	/^evdns_server_request_add_cname_reply(struct evdns_server_request *req, const char *name, const char *cname, int ttl)$/;"	f
evdns_server_request_add_ptr_reply	evdns.c	/^evdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl)$/;"	f
evdns_server_request_add_reply	evdns.c	/^evdns_server_request_add_reply(struct evdns_server_request *req_, int section, const char *name, int type, int class, int ttl, int datalen, int is_name, const char *data)$/;"	f
evdns_server_request_drop	evdns.c	/^evdns_server_request_drop(struct evdns_server_request *req_)$/;"	f
evdns_server_request_format_response	evdns.c	/^evdns_server_request_format_response(struct server_request *req, int err)$/;"	f	file:
evdns_server_request_get_requesting_addr	evdns.c	/^evdns_server_request_get_requesting_addr(struct evdns_server_request *req_, struct sockaddr *sa, int addr_len)$/;"	f
evdns_server_request_respond	evdns.c	/^evdns_server_request_respond(struct evdns_server_request *req_, int err)$/;"	f
evdns_server_request_set_flags	evdns.c	/^evdns_server_request_set_flags(struct evdns_server_request *exreq, int flags)$/;"	f
evdns_set_log_fn	evdns.c	/^evdns_set_log_fn(evdns_debug_log_fn_type fn)$/;"	f
evdns_set_option	evdns.c	/^evdns_set_option(const char *option, const char *val, int flags)$/;"	f
evdns_set_random_bytes_fn	evdns.c	/^evdns_set_random_bytes_fn(void (*fn)(char *, size_t))$/;"	f
evdns_set_transaction_id_fn	evdns.c	/^evdns_set_transaction_id_fn(ev_uint16_t (*fn)(void))$/;"	f
evdns_shutdown	evdns.c	/^evdns_shutdown(int fail_requests)$/;"	f
evdns_strtotimeval	evdns.c	/^evdns_strtotimeval(const char *const str, struct timeval *out)$/;"	f	file:
evdns_transmit	evdns.c	/^evdns_transmit(struct evdns_base *base) {$/;"	f	file:
event	evdns.c	/^	struct event event; \/* Read\/write event *\/$/;"	m	struct:evdns_server_port	typeref:struct:evdns_server_port::event	file:
event	evdns.c	/^	struct event event;$/;"	m	struct:nameserver	typeref:struct:nameserver::event	file:
event	evthread_win32.c	/^	HANDLE event;$/;"	m	struct:evthread_win32_cond	file:
event	include/event2/event.h	/^struct event$/;"	s
event	include/event2/event_struct.h	/^struct event {$/;"	s
event_active	event.c	/^event_active(struct event *ev, int res, short ncalls)$/;"	f
event_active_later_	event.c	/^event_active_later_(struct event *ev, int res)$/;"	f
event_active_later_nolock_	event.c	/^event_active_later_nolock_(struct event *ev, int res)$/;"	f
event_active_nolock_	event.c	/^event_active_nolock_(struct event *ev, int res, short ncalls)$/;"	f
event_add	event.c	/^event_add(struct event *ev, const struct timeval *tv)$/;"	f
event_add_nolock_	event.c	/^event_add_nolock_(struct event *ev, const struct timeval *tv,$/;"	f
event_added	listener.c	/^	unsigned event_added : 1;$/;"	m	struct:evconnlistener_iocp	file:
event_and_count	test/regress_finalize.c	/^struct event_and_count {$/;"	s	file:
event_assign	event.c	/^event_assign(struct event *ev, struct event_base *base, evutil_socket_t fd, short events, void (*callback)(evutil_socket_t, short, void *), void *arg)$/;"	f
event_base	evdns.c	/^	struct event_base *event_base;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::event_base	file:
event_base	evdns.c	/^	struct event_base *event_base;$/;"	m	struct:evdns_server_port	typeref:struct:evdns_server_port::event_base	file:
event_base	event-internal.h	/^struct event_base {$/;"	s
event_base	include/event2/event.h	/^struct event_base$/;"	s
event_base	listener.c	/^	struct event_base *event_base;$/;"	m	struct:evconnlistener_iocp	typeref:struct:evconnlistener_iocp::event_base	file:
event_base_active_by_fd	event.c	/^event_base_active_by_fd(struct event_base *base, evutil_socket_t fd, short events)$/;"	f
event_base_active_by_signal	event.c	/^event_base_active_by_signal(struct event_base *base, int sig)$/;"	f
event_base_add_virtual_	event.c	/^event_base_add_virtual_(struct event_base *base)$/;"	f
event_base_assert_ok_	event.c	/^event_base_assert_ok_(struct event_base *base)$/;"	f
event_base_assert_ok_nolock_	event.c	/^event_base_assert_ok_nolock_(struct event_base *base)$/;"	f
event_base_cancel_single_callback_	event.c	/^event_base_cancel_single_callback_(struct event_base *base,$/;"	f	file:
event_base_config_flag	include/event2/event.h	/^enum event_base_config_flag {$/;"	g
event_base_del_virtual_	event.c	/^event_base_del_virtual_(struct event_base *base)$/;"	f
event_base_dispatch	event.c	/^event_base_dispatch(struct event_base *event_base)$/;"	f
event_base_dump_events	event.c	/^event_base_dump_events(struct event_base *base, FILE *output)$/;"	f
event_base_foreach_event	event.c	/^event_base_foreach_event(struct event_base *base,$/;"	f
event_base_foreach_event_cb	include/event2/event.h	/^typedef int (*event_base_foreach_event_cb)(const struct event_base *, const struct event *, void *);$/;"	t
event_base_foreach_event_nolock_	event.c	/^event_base_foreach_event_nolock_(struct event_base *base,$/;"	f
event_base_free	event.c	/^event_base_free(struct event_base *base)$/;"	f
event_base_free_	event.c	/^event_base_free_(struct event_base *base, int run_finalizers)$/;"	f	file:
event_base_free_nofinalize	event.c	/^event_base_free_nofinalize(struct event_base *base)$/;"	f
event_base_free_queues_	event.c	/^static int event_base_free_queues_(struct event_base *base, int run_finalizers)$/;"	f	file:
event_base_get_features	event.c	/^event_base_get_features(const struct event_base *base)$/;"	f
event_base_get_iocp_	event_iocp.c	/^event_base_get_iocp_(struct event_base *base)$/;"	f
event_base_get_max_events	event.c	/^event_base_get_max_events(struct event_base *base, unsigned int type, int clear)$/;"	f
event_base_get_method	event.c	/^event_base_get_method(const struct event_base *base)$/;"	f
event_base_get_npriorities	event.c	/^event_base_get_npriorities(struct event_base *base)$/;"	f
event_base_get_num_events	event.c	/^event_base_get_num_events(struct event_base *base, unsigned int type)$/;"	f
event_base_get_running_event	event.c	/^        event_base_get_running_event(struct event_base *base)$/;"	f
event_base_gettimeofday_cached	event.c	/^event_base_gettimeofday_cached(struct event_base *base, struct timeval *tv)$/;"	f
event_base_got_break	event.c	/^event_base_got_break(struct event_base *event_base)$/;"	f
event_base_got_exit	event.c	/^event_base_got_exit(struct event_base *event_base)$/;"	f
event_base_init_common_timeout	event.c	/^        event_base_init_common_timeout(struct event_base *base,$/;"	f
event_base_loop	event.c	/^event_base_loop(struct event_base *base, int flags)$/;"	f
event_base_loopbreak	event.c	/^event_base_loopbreak(struct event_base *event_base)$/;"	f
event_base_loopcontinue	event.c	/^event_base_loopcontinue(struct event_base *event_base)$/;"	f
event_base_loopexit	event.c	/^event_base_loopexit(struct event_base *event_base, const struct timeval *tv)$/;"	f
event_base_new	event.c	/^        event_base_new(void)$/;"	f
event_base_new_with_config	event.c	/^        event_base_new_with_config(const struct event_config *cfg)$/;"	f
event_base_once	event.c	/^event_base_once(struct event_base *base, evutil_socket_t fd, short events,$/;"	f
event_base_priority_init	event.c	/^event_base_priority_init(struct event_base *base, int npriorities)$/;"	f
event_base_set	event.c	/^event_base_set(struct event_base *base, struct event *ev)$/;"	f
event_base_start_iocp_	event.c	/^event_base_start_iocp_(struct event_base *base, int n_cpus)$/;"	f
event_base_stop_iocp_	event.c	/^event_base_stop_iocp_(struct event_base *base)$/;"	f
event_base_update_cache_time	event.c	/^event_base_update_cache_time(struct event_base *base)$/;"	f
event_break	event-internal.h	/^	int event_break;$/;"	m	struct:event_base
event_callback	include/event2/event_struct.h	/^struct event_callback {$/;"	s
event_callback_activate_	event.c	/^event_callback_activate_(struct event_base *base,$/;"	f
event_callback_activate_later_nolock_	event.c	/^event_callback_activate_later_nolock_(struct event_base *base,$/;"	f
event_callback_activate_nolock_	event.c	/^event_callback_activate_nolock_(struct event_base *base,$/;"	f
event_callback_cancel_	event.c	/^event_callback_cancel_(struct event_base *base,$/;"	f
event_callback_cancel_nolock_	event.c	/^event_callback_cancel_nolock_(struct event_base *base,$/;"	f
event_callback_finalize_	event.c	/^event_callback_finalize_(struct event_base *base, unsigned flags, struct event_callback *evcb, void (*cb)(struct event_callback *, void *))$/;"	f
event_callback_finalize_many_	event.c	/^event_callback_finalize_many_(struct event_base *base, int n_cbs, struct event_callback **evcbs, void (*cb)(struct event_callback *, void *))$/;"	f
event_callback_finalize_nolock_	event.c	/^event_callback_finalize_nolock_(struct event_base *base, unsigned flags, struct event_callback *evcb, void (*cb)(struct event_callback *, void *))$/;"	f
event_callback_fn	include/event2/event.h	/^typedef void (*event_callback_fn)(evutil_socket_t, short, void *);$/;"	t
event_callback_init_	event.c	/^event_callback_init_(struct event_base *base,$/;"	f
event_callback_to_event	event.c	/^        event_callback_to_event(struct event_callback *evcb)$/;"	f	file:
event_change	changelist-internal.h	/^struct event_change {$/;"	s
event_change_get_fdinfo	evmap.c	/^event_change_get_fdinfo(struct event_base *base,$/;"	f	file:
event_changelist	event-internal.h	/^struct event_changelist {$/;"	s
event_changelist_add_	evmap.c	/^event_changelist_add_(struct event_base *base, evutil_socket_t fd, short old, short events,$/;"	f
event_changelist_assert_ok	evmap.c	/^event_changelist_assert_ok(struct event_base *base)$/;"	f	file:
event_changelist_assert_ok_foreach_iter_fn	evmap.c	/^event_changelist_assert_ok_foreach_iter_fn($/;"	f	file:
event_changelist_check	evmap.c	829;"	d	file:
event_changelist_check	evmap.c	831;"	d	file:
event_changelist_del_	evmap.c	/^event_changelist_del_(struct event_base *base, evutil_socket_t fd, short old, short events,$/;"	f
event_changelist_fdinfo	evmap.c	/^struct event_changelist_fdinfo {$/;"	s	file:
event_changelist_freemem_	evmap.c	/^event_changelist_freemem_(struct event_changelist *changelist)$/;"	f
event_changelist_get_or_construct	evmap.c	/^event_changelist_get_or_construct(struct event_changelist *changelist,$/;"	f	file:
event_changelist_grow	evmap.c	/^event_changelist_grow(struct event_changelist *changelist)$/;"	f	file:
event_changelist_init_	evmap.c	/^event_changelist_init_(struct event_changelist *changelist)$/;"	f
event_changelist_remove_all_	evmap.c	/^event_changelist_remove_all_(struct event_changelist *changelist,$/;"	f
event_config	event-internal.h	/^struct event_config {$/;"	s
event_config	include/event2/event.h	/^struct event_config$/;"	s
event_config_avoid_method	event.c	/^event_config_avoid_method(struct event_config *cfg, const char *method)$/;"	f
event_config_entry	event-internal.h	/^struct event_config_entry {$/;"	s
event_config_entry_free	event.c	/^event_config_entry_free(struct event_config_entry *entry)$/;"	f	file:
event_config_free	event.c	/^event_config_free(struct event_config *cfg)$/;"	f
event_config_is_avoided_method	event.c	/^event_config_is_avoided_method(const struct event_config *cfg,$/;"	f	file:
event_config_new	event.c	/^        event_config_new(void)$/;"	f
event_config_require_features	event.c	/^event_config_require_features(struct event_config *cfg,$/;"	f
event_config_set_flag	event.c	/^event_config_set_flag(struct event_config *cfg, int flag)$/;"	f
event_config_set_max_dispatch_interval	event.c	/^event_config_set_max_dispatch_interval(struct event_config *cfg,$/;"	f
event_config_set_num_cpus_hint	event.c	/^event_config_set_num_cpus_hint(struct event_config *cfg, int cpus)$/;"	f
event_continue	event-internal.h	/^	int event_continue;$/;"	m	struct:event_base
event_count	event-internal.h	/^	int event_count;$/;"	m	struct:event_base
event_count	poll.c	/^	int event_count;		\/* Highest number alloc *\/$/;"	m	struct:pollop	file:
event_count_active	event-internal.h	/^	int event_count_active;$/;"	m	struct:event_base
event_count_active_max	event-internal.h	/^	int event_count_active_max;$/;"	m	struct:event_base
event_count_max	event-internal.h	/^	int event_count_max;$/;"	m	struct:event_base
event_debug	log-internal.h	73;"	d
event_debug	log-internal.h	79;"	d
event_debug_assert_is_setup_	event.c	311;"	d	file:
event_debug_assert_not_added_	event.c	330;"	d	file:
event_debug_created_threadable_ctx_	event.c	/^int event_debug_created_threadable_ctx_ = 0;$/;"	v
event_debug_entry	event.c	/^struct event_debug_entry {$/;"	s	file:
event_debug_get_logging_mask_	log-internal.h	51;"	d
event_debug_get_logging_mask_	log-internal.h	56;"	d
event_debug_get_logging_mask_	log.c	/^event_debug_get_logging_mask_(void)$/;"	f
event_debug_logging_mask_	log.c	/^ev_uint32_t event_debug_logging_mask_ = DEFAULT_MASK;$/;"	v
event_debug_logging_mask_	log.c	/^static ev_uint32_t event_debug_logging_mask_ = DEFAULT_MASK;$/;"	v	file:
event_debug_map_lock_	event.c	/^static void *event_debug_map_lock_ = NULL;$/;"	v	file:
event_debug_mode_on_	event.c	/^int event_debug_mode_on_ = 0;$/;"	v
event_debug_mode_too_late	event.c	/^static int event_debug_mode_too_late = 0;$/;"	v	file:
event_debug_note_add_	event.c	269;"	d	file:
event_debug_note_del_	event.c	290;"	d	file:
event_debug_note_setup_	event.c	234;"	d	file:
event_debug_note_teardown_	event.c	256;"	d	file:
event_debug_unassign	event.c	/^event_debug_unassign(struct event *ev)$/;"	f
event_debugx_	log.c	/^event_debugx_(const char *fmt, ...)$/;"	f
event_deferred_cb_cancel_	event.c	/^event_deferred_cb_cancel_(struct event_base *base, struct event_callback *cb)$/;"	f
event_deferred_cb_init_	event.c	/^event_deferred_cb_init_(struct event_callback *cb, ev_uint8_t priority, deferred_cb_fn fn, void *arg)$/;"	f
event_deferred_cb_schedule_	event.c	/^event_deferred_cb_schedule_(struct event_base *base, struct event_callback *cb)$/;"	f
event_deferred_cb_set_priority_	event.c	/^event_deferred_cb_set_priority_(struct event_callback *cb, ev_uint8_t priority)$/;"	f
event_del	event.c	/^event_del(struct event *ev)$/;"	f
event_del_	event.c	/^event_del_(struct event *ev, int blocking)$/;"	f	file:
event_del_block	event.c	/^event_del_block(struct event *ev)$/;"	f
event_del_noblock	event.c	/^event_del_noblock(struct event *ev)$/;"	f
event_del_nolock_	event.c	/^event_del_nolock_(struct event *ev, int blocking)$/;"	f
event_disable_debug_mode	event.c	/^event_disable_debug_mode(void)$/;"	f
event_dispatch	event.c	/^event_dispatch(void)$/;"	f
event_enable_debug_logging	log.c	/^event_enable_debug_logging(ev_uint32_t which)$/;"	f
event_enable_debug_mode	event.c	/^event_enable_debug_mode(void)$/;"	f
event_err	log.c	/^event_err(int eval, const char *fmt, ...)$/;"	f
event_errx	log.c	/^event_errx(int eval, const char *fmt, ...)$/;"	f
event_exit	log.c	/^event_exit(int errcode)$/;"	f	file:
event_fatal_cb	include/event2/event.h	/^typedef void (*event_fatal_cb)(int err);$/;"	t
event_fds	select.c	/^	int event_fds;		\/* Highest fd in fd set *\/$/;"	m	struct:selectop	file:
event_fdsz	select.c	/^	int event_fdsz;$/;"	m	struct:selectop	file:
event_finalize	event.c	/^event_finalize(unsigned flags, struct event *ev, event_finalize_callback_fn cb)$/;"	f
event_finalize_callback_1	test/regress_finalize.c	/^event_finalize_callback_1(struct event *ev, void *arg)$/;"	f	file:
event_finalize_callback_2	test/regress_finalize.c	/^event_finalize_callback_2(struct event *ev, void *arg)$/;"	f	file:
event_finalize_callback_fn	include/event2/event.h	/^typedef void (*event_finalize_callback_fn)(struct event *, void *);$/;"	t
event_finalize_impl_	event.c	/^event_finalize_impl_(unsigned flags, struct event *ev, event_finalize_callback_fn cb)$/;"	f	file:
event_finalize_nolock_	event.c	/^event_finalize_nolock_(struct event_base *base, unsigned flags, struct event *ev, event_finalize_callback_fn cb)$/;"	f	file:
event_free	event.c	/^event_free(struct event *ev)$/;"	f
event_free_debug_globals	event.c	/^event_free_debug_globals(void)$/;"	f	file:
event_free_debug_globals_locks	event.c	/^event_free_debug_globals_locks(void)$/;"	f	file:
event_free_evsig_globals	event.c	/^event_free_evsig_globals(void)$/;"	f	file:
event_free_evutil_globals	event.c	/^event_free_evutil_globals(void)$/;"	f	file:
event_free_finalize	event.c	/^event_free_finalize(unsigned flags, struct event *ev, event_finalize_callback_fn cb)$/;"	f
event_free_globals	event.c	/^event_free_globals(void)$/;"	f	file:
event_get_assignment	event.c	/^event_get_assignment(const struct event *event, struct event_base **base_out, evutil_socket_t *fd_out, short *events_out, event_callback_fn *callback_out, void **arg_out)$/;"	f
event_get_base	event.c	/^        event_get_base(const struct event *ev)$/;"	f
event_get_callback	event.c	/^event_get_callback(const struct event *ev)$/;"	f
event_get_callback_arg	event.c	/^event_get_callback_arg(const struct event *ev)$/;"	f
event_get_events	event.c	/^event_get_events(const struct event *ev)$/;"	f
event_get_fd	event.c	/^event_get_fd(const struct event *ev)$/;"	f
event_get_method	event.c	/^event_get_method(void)$/;"	f
event_get_priority	event.c	/^event_get_priority(const struct event *ev)$/;"	f
event_get_signal	include/event2/event.h	1384;"	d
event_get_struct_event_size	event.c	/^event_get_struct_event_size(void)$/;"	f
event_get_supported_methods	event.c	/^event_get_supported_methods(void)$/;"	f
event_get_version	event.c	/^event_get_version(void)$/;"	f
event_get_version_number	event.c	/^event_get_version_number(void)$/;"	f
event_get_win32_extension_fns_	event_iocp.c	/^event_get_win32_extension_fns_(void)$/;"	f
event_gettime_monotonic	event.c	/^event_gettime_monotonic(struct event_base *base, struct timeval *tv)$/;"	f
event_global_current_base_	event.c	/^struct event_base *event_global_current_base_ = NULL;$/;"	v	typeref:struct:event_base
event_global_setup_locks_	event.c	/^event_global_setup_locks_(const int enable_locks)$/;"	f
event_gotterm	event-internal.h	/^	int event_gotterm;$/;"	m	struct:event_base
event_haveevents	event.c	/^event_haveevents(struct event_base *base)$/;"	f	file:
event_init	event.c	/^        event_init(void)$/;"	f
event_initialized	event.c	/^event_initialized(const struct event *ev)$/;"	f
event_io_map	event-internal.h	175;"	d
event_iocp_activate_overlapped_	event_iocp.c	/^event_iocp_activate_overlapped_($/;"	f
event_iocp_notify_all	event_iocp.c	/^event_iocp_notify_all(struct event_iocp_port *port)$/;"	f	file:
event_iocp_port	iocp-internal.h	/^struct event_iocp_port {$/;"	s
event_iocp_port_associate_	event_iocp.c	/^event_iocp_port_associate_(struct event_iocp_port *port, evutil_socket_t fd,$/;"	f
event_iocp_port_launch_	event_iocp.c	/^event_iocp_port_launch_(int n_cpus)$/;"	f
event_iocp_port_unlock_and_free_	event_iocp.c	/^event_iocp_port_unlock_and_free_(struct event_iocp_port *port)$/;"	f	file:
event_iocp_shutdown_	event_iocp.c	/^event_iocp_shutdown_(struct event_iocp_port *port, long waitMsec)$/;"	f
event_is_method_disabled	event.c	/^event_is_method_disabled(const char *name)$/;"	f	file:
event_is_persistent	sample/time-test.c	/^int event_is_persistent;$/;"	v
event_kq_add_notify_event_	kqueue.c	/^event_kq_add_notify_event_(struct event_base *base)$/;"	f
event_kq_notify_base_	kqueue.c	/^event_kq_notify_base_(struct event_base *base)$/;"	f
event_listener_destroy	listener.c	/^event_listener_destroy(struct evconnlistener *lev)$/;"	f	file:
event_listener_disable	listener.c	/^event_listener_disable(struct evconnlistener *lev)$/;"	f	file:
event_listener_enable	listener.c	/^event_listener_enable(struct evconnlistener *lev)$/;"	f	file:
event_listener_getbase	listener.c	/^event_listener_getbase(struct evconnlistener *lev)$/;"	f	file:
event_listener_getfd	listener.c	/^event_listener_getfd(struct evconnlistener *lev)$/;"	f	file:
event_log	log.c	/^event_log(int severity, const char *msg)$/;"	f	file:
event_log_cb	include/event2/event.h	/^typedef void (*event_log_cb)(int severity, const char *msg);$/;"	t
event_logv_	log.c	/^event_logv_(int severity, const char *errstr, const char *fmt, va_list ap)$/;"	f
event_loop	event.c	/^event_loop(int flags)$/;"	f
event_loopbreak	event.c	/^event_loopbreak(void)$/;"	f
event_loopexit	event.c	/^event_loopexit(const struct timeval *tv)$/;"	f
event_loopexit_cb	event.c	/^event_loopexit_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
event_map_entry	evmap.c	/^struct event_map_entry {$/;"	s	file:
event_method_feature	include/event2/event.h	/^enum event_method_feature {$/;"	g
event_mm_calloc_	event.c	/^event_mm_calloc_(size_t count, size_t size)$/;"	f
event_mm_free_	event.c	/^event_mm_free_(void *ptr)$/;"	f
event_mm_malloc_	event.c	/^event_mm_malloc_(size_t sz)$/;"	f
event_mm_realloc_	event.c	/^event_mm_realloc_(void *ptr, size_t sz)$/;"	f
event_mm_strdup_	event.c	/^event_mm_strdup_(const char *str)$/;"	f
event_msgx	log.c	/^event_msgx(const char *fmt, ...)$/;"	f
event_new	event.c	/^        event_new(struct event_base *base, evutil_socket_t fd, short events, void (*cb)(evutil_socket_t, short, void *), void *arg)$/;"	f
event_once	event-internal.h	/^struct event_once {$/;"	s
event_once	event.c	/^event_once(evutil_socket_t fd, short events,$/;"	f
event_once_cb	event.c	/^event_once_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
event_overlapped	iocp-internal.h	/^struct event_overlapped {$/;"	s
event_overlapped_init_	event_iocp.c	/^event_overlapped_init_(struct event_overlapped *o, iocp_callback cb)$/;"	f
event_pending	event.c	/^event_pending(const struct event *ev, short event, struct timeval *tv)$/;"	f
event_persist_closure	event.c	/^event_persist_closure(struct event_base *base, struct event *ev)$/;"	f	file:
event_priority_init	event.c	/^event_priority_init(int npriorities)$/;"	f
event_priority_set	event.c	/^event_priority_set(struct event *ev, int pri)$/;"	f
event_process_active	event.c	/^event_process_active(struct event_base *base)$/;"	f	file:
event_process_active_single_queue	event.c	/^event_process_active_single_queue(struct event_base *base,$/;"	f	file:
event_queue_insert_active	event.c	/^event_queue_insert_active(struct event_base *base, struct event_callback *evcb)$/;"	f	file:
event_queue_insert_active_later	event.c	/^event_queue_insert_active_later(struct event_base *base, struct event_callback *evcb)$/;"	f	file:
event_queue_insert_inserted	event.c	/^event_queue_insert_inserted(struct event_base *base, struct event *ev)$/;"	f	file:
event_queue_insert_timeout	event.c	/^event_queue_insert_timeout(struct event_base *base, struct event *ev)$/;"	f	file:
event_queue_make_later_events_active	event.c	/^event_queue_make_later_events_active(struct event_base *base)$/;"	f	file:
event_queue_reinsert_timeout	event.c	/^event_queue_reinsert_timeout(struct event_base *base, struct event *ev,$/;"	f	file:
event_queue_remove_active	event.c	/^event_queue_remove_active(struct event_base *base, struct event_callback *evcb)$/;"	f	file:
event_queue_remove_active_later	event.c	/^event_queue_remove_active_later(struct event_base *base, struct event_callback *evcb)$/;"	f	file:
event_queue_remove_inserted	event.c	/^event_queue_remove_inserted(struct event_base *base, struct event *ev)$/;"	f	file:
event_queue_remove_timeout	event.c	/^event_queue_remove_timeout(struct event_base *base, struct event *ev)$/;"	f	file:
event_readset_in	select.c	/^	fd_set *event_readset_in;$/;"	m	struct:selectop	file:
event_readset_out	select.c	/^	fd_set *event_readset_out;$/;"	m	struct:selectop	file:
event_reinit	event.c	/^event_reinit(struct event_base *base)$/;"	f
event_remove_timer	event.c	/^event_remove_timer(struct event *ev)$/;"	f
event_remove_timer_nolock_	event.c	/^event_remove_timer_nolock_(struct event *ev)$/;"	f
event_running_priority	event-internal.h	/^	int event_running_priority;$/;"	m	struct:event_base
event_self_cbarg	event.c	/^event_self_cbarg(void)$/;"	f
event_self_cbarg_ptr_	event.c	/^static void *event_self_cbarg_ptr_ = NULL;$/;"	v	file:
event_selfarg_cb	test/regress.c	/^event_selfarg_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
event_set	event.c	/^event_set(struct event *ev, evutil_socket_t fd, short events,$/;"	f
event_set	poll.c	/^	struct pollfd *event_set;$/;"	m	struct:pollop	typeref:struct:pollop::pollfd	file:
event_set_copy	poll.c	/^	struct pollfd *event_set_copy;$/;"	m	struct:pollop	typeref:struct:pollop::pollfd	file:
event_set_fatal_callback	log.c	/^event_set_fatal_callback(event_fatal_cb cb)$/;"	f
event_set_log_callback	log.c	/^event_set_log_callback(event_log_cb cb)$/;"	f
event_set_mem_functions	event.c	/^event_set_mem_functions(void *(*malloc_fn)(size_t sz),$/;"	f
event_signal_closure	event.c	/^event_signal_closure(struct event_base *base, struct event *ev)$/;"	f	file:
event_signal_map	event-internal.h	/^struct event_signal_map {$/;"	s
event_sock_err	log.c	/^event_sock_err(int eval, evutil_socket_t sock, const char *fmt, ...)$/;"	f
event_sock_warn	log.c	/^event_sock_warn(evutil_socket_t sock, const char *fmt, ...)$/;"	f
event_strlcpy_	strlcpy.c	/^event_strlcpy_(dst, src, siz)$/;"	f
event_to_event_callback	event.c	/^        event_to_event_callback(struct event *ev)$/;"	f	file:
event_warn	log.c	/^event_warn(const char *fmt, ...)$/;"	f
event_warnx	log.c	/^event_warnx(const char *fmt, ...)$/;"	f
event_watermark	include/event2/bufferevent_struct.h	/^struct event_watermark {$/;"	s
event_writeset_in	select.c	/^	fd_set *event_writeset_in;$/;"	m	struct:selectop	file:
event_writeset_out	select.c	/^	fd_set *event_writeset_out;$/;"	m	struct:selectop	file:
eventcb	sample/connect_test.c	/^void eventcb(struct bufferevent *bev, short events, void *ptr)$/;"	f
eventcb	sample/le-proxy.c	/^eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
eventcb	test/regress_ssl.c	/^eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
eventcb_pending	bufferevent-internal.h	/^	short eventcb_pending;$/;"	m	struct:bufferevent_private
eventop	event-internal.h	/^struct eventop {$/;"	s
eventops	event.c	/^static const struct eventop *eventops[] = {$/;"	v	typeref:struct:eventop	file:
events	devpoll.c	/^	struct pollfd *events;$/;"	m	struct:devpollop	typeref:struct:devpollop::pollfd	file:
events	epoll.c	/^	struct epoll_event *events;$/;"	m	struct:epollop	typeref:struct:epollop::epoll_event	file:
events	epolltable-internal.h	/^	int events;$/;"	m	struct:operation
events	event-internal.h	/^	struct event_list events;$/;"	m	struct:common_timeout_list	typeref:struct:common_timeout_list::event_list
events	evmap.c	/^	struct event_dlist events;$/;"	m	struct:evmap_io	typeref:struct:evmap_io::event_dlist	file:
events	evmap.c	/^	struct event_dlist events;$/;"	m	struct:evmap_signal	typeref:struct:evmap_signal::event_dlist	file:
events	kqueue.c	/^	struct kevent *events;$/;"	m	struct:kqop	typeref:struct:kqop::kevent	file:
events	test/bench.c	/^static struct event *events;$/;"	v	typeref:struct:event	file:
events	test/bench_cascade.c	/^static struct event *events;$/;"	v	typeref:struct:event	file:
events	test/regress.c	/^	int events;$/;"	m	struct:read_not_timeout_param	file:
events	test/regress.c	/^	short events[16];$/;"	m	struct:persist_active_timeout_called	file:
events_size	kqueue.c	/^	int events_size;$/;"	m	struct:kqop	file:
everrorcb	include/event2/bufferevent_compat.h	32;"	d
evhttp	http-internal.h	/^struct evhttp {$/;"	s
evhttp_accept_socket	http.c	/^evhttp_accept_socket(struct evhttp *http, evutil_socket_t fd)$/;"	f
evhttp_accept_socket_with_handle	http.c	/^evhttp_accept_socket_with_handle(struct evhttp *http, evutil_socket_t fd)$/;"	f
evhttp_add_header	http.c	/^evhttp_add_header(struct evkeyvalq *headers,$/;"	f
evhttp_add_header_internal	http.c	/^evhttp_add_header_internal(struct evkeyvalq *headers,$/;"	f	file:
evhttp_add_server_alias	http.c	/^evhttp_add_server_alias(struct evhttp *http, const char *alias)$/;"	f
evhttp_add_virtual_host	http.c	/^evhttp_add_virtual_host(struct evhttp* http, const char *pattern,$/;"	f
evhttp_append_to_last_header	http.c	/^evhttp_append_to_last_header(struct evkeyvalq *headers, char *line)$/;"	f	file:
evhttp_associate_new_request_with_connection	http.c	/^evhttp_associate_new_request_with_connection(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_bind_listener	http.c	/^evhttp_bind_listener(struct evhttp *http, struct evconnlistener *listener)$/;"	f
evhttp_bind_socket	http.c	/^evhttp_bind_socket(struct evhttp *http, const char *address, ev_uint16_t port)$/;"	f
evhttp_bind_socket_with_handle	http.c	/^evhttp_bind_socket_with_handle(struct evhttp *http, const char *address, ev_uint16_t port)$/;"	f
evhttp_bound_socket	http-internal.h	/^struct evhttp_bound_socket {$/;"	s
evhttp_bound_socket_foreach_fn	include/event2/http.h	/^typedef void evhttp_bound_socket_foreach_fn(struct evhttp_bound_socket *, void *);$/;"	t
evhttp_bound_socket_get_fd	http.c	/^evhttp_bound_socket_get_fd(struct evhttp_bound_socket *bound)$/;"	f
evhttp_bound_socket_get_listener	http.c	/^evhttp_bound_socket_get_listener(struct evhttp_bound_socket *bound)$/;"	f
evhttp_cancel_request	http.c	/^evhttp_cancel_request(struct evhttp_request *req)$/;"	f
evhttp_cb	http-internal.h	/^struct evhttp_cb {$/;"	s
evhttp_clear_headers	http.c	/^evhttp_clear_headers(struct evkeyvalq *headers)$/;"	f
evhttp_cmd_type	include/event2/http.h	/^enum evhttp_cmd_type {$/;"	g
evhttp_connected	http.c	/^evhttp_connected(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection	http-internal.h	/^struct evhttp_connection {$/;"	s
evhttp_connection_base_bufferevent_new	http.c	/^evhttp_connection_base_bufferevent_new(struct event_base *base, struct evdns_base *dnsbase, struct bufferevent* bev,$/;"	f
evhttp_connection_base_new	http.c	/^evhttp_connection_base_new(struct event_base *base, struct evdns_base *dnsbase,$/;"	f
evhttp_connection_cb	http.c	/^evhttp_connection_cb(struct bufferevent *bufev, short what, void *arg)$/;"	f	file:
evhttp_connection_cb_cleanup	http.c	/^evhttp_connection_cb_cleanup(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection_connect_	http.c	/^evhttp_connection_connect_(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_done	http.c	/^evhttp_connection_done(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection_fail_	http.c	/^evhttp_connection_fail_(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_free	http.c	/^evhttp_connection_free(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_free_on_completion	http.c	/^evhttp_connection_free_on_completion(struct evhttp_connection *evcon) {$/;"	f
evhttp_connection_get_addr	http.c	/^evhttp_connection_get_addr(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_get_base	http.c	/^evhttp_connection_get_base(struct evhttp_connection *conn)$/;"	f
evhttp_connection_get_bufferevent	http.c	/^struct bufferevent* evhttp_connection_get_bufferevent(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_get_peer	http.c	/^evhttp_connection_get_peer(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_get_server	http.c	/^evhttp_connection_get_server(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_incoming_fail	http.c	/^evhttp_connection_incoming_fail(struct evhttp_request *req,$/;"	f	file:
evhttp_connection_new	http.c	/^evhttp_connection_new(const char *address, ev_uint16_t port)$/;"	f
evhttp_connection_read_on_write_error	http.c	/^evhttp_connection_read_on_write_error(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_connection_reset_	http.c	/^evhttp_connection_reset_(struct evhttp_connection *evcon)$/;"	f
evhttp_connection_retry	http.c	/^evhttp_connection_retry(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evhttp_connection_set_base	http.c	/^evhttp_connection_set_base(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_closecb	http.c	/^evhttp_connection_set_closecb(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_family	http.c	/^void evhttp_connection_set_family(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_flags	http.c	/^int evhttp_connection_set_flags(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_initial_retry_tv	http.c	/^evhttp_connection_set_initial_retry_tv(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_local_address	http.c	/^evhttp_connection_set_local_address(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_local_port	http.c	/^evhttp_connection_set_local_port(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_max_body_size	http.c	/^evhttp_connection_set_max_body_size(struct evhttp_connection* evcon,$/;"	f
evhttp_connection_set_max_headers_size	http.c	/^evhttp_connection_set_max_headers_size(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_retries	http.c	/^evhttp_connection_set_retries(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_timeout	http.c	/^evhttp_connection_set_timeout(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_set_timeout_tv	http.c	/^evhttp_connection_set_timeout_tv(struct evhttp_connection *evcon,$/;"	f
evhttp_connection_start_detectclose	http.c	/^evhttp_connection_start_detectclose(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_connection_state	http-internal.h	/^enum evhttp_connection_state {$/;"	g
evhttp_connection_stop_detectclose	http.c	/^evhttp_connection_stop_detectclose(struct evhttp_connection *evcon)$/;"	f	file:
evhttp_decode_uri	http.c	/^evhttp_decode_uri(const char *uri)$/;"	f
evhttp_decode_uri_internal	http.c	/^evhttp_decode_uri_internal($/;"	f
evhttp_deferred_read_cb	http.c	/^evhttp_deferred_read_cb(struct event_callback *cb, void *data)$/;"	f	file:
evhttp_del_accept_socket	http.c	/^evhttp_del_accept_socket(struct evhttp *http, struct evhttp_bound_socket *bound)$/;"	f
evhttp_del_cb	http.c	/^evhttp_del_cb(struct evhttp *http, const char *uri)$/;"	f
evhttp_dispatch_callback	http.c	/^evhttp_dispatch_callback(struct httpcbq *callbacks, struct evhttp_request *req)$/;"	f	file:
evhttp_encode_uri	http.c	/^evhttp_encode_uri(const char *str)$/;"	f
evhttp_error_cb	http.c	/^evhttp_error_cb(struct bufferevent *bufev, short what, void *arg)$/;"	f	file:
evhttp_find_alias	http.c	/^evhttp_find_alias(struct evhttp *http, struct evhttp **outhttp,$/;"	f	file:
evhttp_find_header	http.c	/^evhttp_find_header(const struct evkeyvalq *headers, const char *key)$/;"	f
evhttp_find_vhost	http.c	/^evhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp,$/;"	f	file:
evhttp_foreach_bound_socket	http.c	/^evhttp_foreach_bound_socket(struct evhttp *http,$/;"	f
evhttp_free	http.c	/^evhttp_free(struct evhttp* http)$/;"	f
evhttp_get_body	http.c	/^evhttp_get_body(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_get_body_length	http.c	/^evhttp_get_body_length(struct evhttp_request *req)$/;"	f	file:
evhttp_get_request	http.c	/^evhttp_get_request(struct evhttp *http, evutil_socket_t fd,$/;"	f	file:
evhttp_get_request_connection	http.c	/^evhttp_get_request_connection($/;"	f	file:
evhttp_handle_chunked_read	http.c	/^evhttp_handle_chunked_read(struct evhttp_request *req, struct evbuffer *buf)$/;"	f	file:
evhttp_handle_request	http.c	/^evhttp_handle_request(struct evhttp_request *req, void *arg)$/;"	f	file:
evhttp_have_expect	http.c	/^static enum expect evhttp_have_expect(struct evhttp_request *req, int input)$/;"	f	file:
evhttp_header_is_valid_value	http.c	/^evhttp_header_is_valid_value(const char *value)$/;"	f	file:
evhttp_htmlescape	http.c	/^evhttp_htmlescape(const char *html)$/;"	f
evhttp_is_connection_close	http.c	/^evhttp_is_connection_close(int flags, struct evkeyvalq* headers)$/;"	f	file:
evhttp_is_connection_keepalive	http.c	/^evhttp_is_connection_keepalive(struct evkeyvalq* headers)$/;"	f	file:
evhttp_is_request_connection_close	http.c	/^evhttp_is_request_connection_close(struct evhttp_request *req)$/;"	f	file:
evhttp_lingering_close	http.c	/^evhttp_lingering_close(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_lingering_fail	http.c	/^evhttp_lingering_fail(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_make_header	http.c	/^evhttp_make_header(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_make_header_request	http.c	/^evhttp_make_header_request(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_make_header_response	http.c	/^evhttp_make_header_response(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_make_request	http.c	/^evhttp_make_request(struct evhttp_connection *evcon,$/;"	f
evhttp_maybe_add_content_length_header	http.c	/^evhttp_maybe_add_content_length_header(struct evkeyvalq *headers,$/;"	f	file:
evhttp_maybe_add_date_header	http.c	/^evhttp_maybe_add_date_header(struct evkeyvalq *headers)$/;"	f	file:
evhttp_method	http.c	/^evhttp_method(enum evhttp_cmd_type type)$/;"	f	file:
evhttp_method_may_have_body	http.c	/^evhttp_method_may_have_body(enum evhttp_cmd_type type)$/;"	f	file:
evhttp_new	http.c	/^evhttp_new(struct event_base *base)$/;"	f
evhttp_new_object	http.c	/^evhttp_new_object(void)$/;"	f	file:
evhttp_parse_firstline_	http.c	/^evhttp_parse_firstline_(struct evhttp_request *req, struct evbuffer *buffer)$/;"	f
evhttp_parse_headers_	http.c	/^evhttp_parse_headers_(struct evhttp_request *req, struct evbuffer* buffer)$/;"	f
evhttp_parse_http_version	http.c	/^evhttp_parse_http_version(const char *version, struct evhttp_request *req)$/;"	f	file:
evhttp_parse_query	http.c	/^evhttp_parse_query(const char *uri, struct evkeyvalq *headers)$/;"	f
evhttp_parse_query_impl	http.c	/^evhttp_parse_query_impl(const char *str, struct evkeyvalq *headers,$/;"	f	file:
evhttp_parse_query_str	http.c	/^evhttp_parse_query_str(const char *uri, struct evkeyvalq *headers)$/;"	f
evhttp_parse_request_line	http.c	/^evhttp_parse_request_line(struct evhttp_request *req, char *line)$/;"	f	file:
evhttp_parse_response_line	http.c	/^evhttp_parse_response_line(struct evhttp_request *req, char *line)$/;"	f	file:
evhttp_read_body	http.c	/^evhttp_read_body(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_read_cb	http.c	/^evhttp_read_cb(struct bufferevent *bufev, void *arg)$/;"	f	file:
evhttp_read_firstline	http.c	/^evhttp_read_firstline(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_read_header	http.c	/^evhttp_read_header(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_read_trailer	http.c	/^evhttp_read_trailer(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_remove_header	http.c	/^evhttp_remove_header(struct evkeyvalq *headers, const char *key)$/;"	f
evhttp_remove_server_alias	http.c	/^evhttp_remove_server_alias(struct evhttp *http, const char *alias)$/;"	f
evhttp_remove_virtual_host	http.c	/^evhttp_remove_virtual_host(struct evhttp* http, struct evhttp* vhost)$/;"	f
evhttp_request	include/event2/http_struct.h	/^struct evhttp_request {$/;"	s
evhttp_request_dispatch	http.c	/^evhttp_request_dispatch(struct evhttp_connection* evcon)$/;"	f	file:
evhttp_request_error	include/event2/http.h	/^enum evhttp_request_error {$/;"	g
evhttp_request_free	http.c	/^evhttp_request_free(struct evhttp_request *req)$/;"	f
evhttp_request_free_	http.c	/^evhttp_request_free_(struct evhttp_connection *evcon, struct evhttp_request *req)$/;"	f	file:
evhttp_request_free_auto	http.c	/^evhttp_request_free_auto(struct evhttp_request *req)$/;"	f	file:
evhttp_request_get_command	http.c	/^evhttp_request_get_command(const struct evhttp_request *req) {$/;"	f
evhttp_request_get_connection	http.c	/^evhttp_request_get_connection(struct evhttp_request *req)$/;"	f
evhttp_request_get_evhttp_uri	http.c	/^evhttp_request_get_evhttp_uri(const struct evhttp_request *req) {$/;"	f
evhttp_request_get_host	http.c	/^evhttp_request_get_host(struct evhttp_request *req)$/;"	f
evhttp_request_get_input_buffer	http.c	/^struct evbuffer *evhttp_request_get_input_buffer(struct evhttp_request *req)$/;"	f
evhttp_request_get_input_headers	http.c	/^struct evkeyvalq *evhttp_request_get_input_headers(struct evhttp_request *req)$/;"	f
evhttp_request_get_output_buffer	http.c	/^struct evbuffer *evhttp_request_get_output_buffer(struct evhttp_request *req)$/;"	f
evhttp_request_get_output_headers	http.c	/^struct evkeyvalq *evhttp_request_get_output_headers(struct evhttp_request *req)$/;"	f
evhttp_request_get_response_code	http.c	/^evhttp_request_get_response_code(const struct evhttp_request *req)$/;"	f
evhttp_request_get_response_code_line	http.c	/^evhttp_request_get_response_code_line(const struct evhttp_request *req)$/;"	f
evhttp_request_get_uri	http.c	/^evhttp_request_get_uri(const struct evhttp_request *req) {$/;"	f
evhttp_request_is_owned	http.c	/^evhttp_request_is_owned(struct evhttp_request *req)$/;"	f
evhttp_request_kind	include/event2/http.h	/^enum evhttp_request_kind { EVHTTP_REQUEST, EVHTTP_RESPONSE };$/;"	g
evhttp_request_new	http.c	/^evhttp_request_new(void (*cb)(struct evhttp_request *, void *), void *arg)$/;"	f
evhttp_request_own	http.c	/^evhttp_request_own(struct evhttp_request *req)$/;"	f
evhttp_request_set_chunked_cb	http.c	/^evhttp_request_set_chunked_cb(struct evhttp_request *req,$/;"	f
evhttp_request_set_error_cb	http.c	/^evhttp_request_set_error_cb(struct evhttp_request *req,$/;"	f
evhttp_request_set_header_cb	http.c	/^evhttp_request_set_header_cb(struct evhttp_request *req,$/;"	f
evhttp_request_set_on_complete_cb	http.c	/^evhttp_request_set_on_complete_cb(struct evhttp_request *req,$/;"	f
evhttp_request_uri	include/event2/http_compat.h	84;"	d
evhttp_response_code_	http.c	/^evhttp_response_code_(struct evhttp_request *req, int code, const char *reason)$/;"	f
evhttp_response_needs_body	http.c	/^evhttp_response_needs_body(struct evhttp_request *req)$/;"	f	file:
evhttp_response_phrase_internal	http.c	/^evhttp_response_phrase_internal(int code)$/;"	f	file:
evhttp_send	http.c	/^evhttp_send(struct evhttp_request *req, struct evbuffer *databuf)$/;"	f	file:
evhttp_send_continue	http.c	/^evhttp_send_continue(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_send_continue_done	http.c	/^evhttp_send_continue_done(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
evhttp_send_done	http.c	/^evhttp_send_done(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
evhttp_send_error	http.c	/^evhttp_send_error(struct evhttp_request *req, int error, const char *reason)$/;"	f
evhttp_send_page_	http.c	/^evhttp_send_page_(struct evhttp_request *req, struct evbuffer *databuf)$/;"	f
evhttp_send_reply	http.c	/^evhttp_send_reply(struct evhttp_request *req, int code, const char *reason,$/;"	f
evhttp_send_reply_chunk	http.c	/^evhttp_send_reply_chunk(struct evhttp_request *req, struct evbuffer *databuf)$/;"	f
evhttp_send_reply_chunk_with_cb	http.c	/^evhttp_send_reply_chunk_with_cb(struct evhttp_request *req, struct evbuffer *databuf,$/;"	f
evhttp_send_reply_end	http.c	/^evhttp_send_reply_end(struct evhttp_request *req)$/;"	f
evhttp_send_reply_start	http.c	/^evhttp_send_reply_start(struct evhttp_request *req, int code,$/;"	f
evhttp_server_alias	http-internal.h	/^struct evhttp_server_alias {$/;"	s
evhttp_set_allowed_methods	http.c	/^evhttp_set_allowed_methods(struct evhttp* http, ev_uint16_t methods)$/;"	f
evhttp_set_bevcb	http.c	/^evhttp_set_bevcb(struct evhttp *http,$/;"	f
evhttp_set_cb	http.c	/^evhttp_set_cb(struct evhttp *http, const char *uri,$/;"	f
evhttp_set_default_content_type	http.c	/^evhttp_set_default_content_type(struct evhttp *http,$/;"	f
evhttp_set_flags	http.c	/^int evhttp_set_flags(struct evhttp *http, int flags)$/;"	f
evhttp_set_gencb	http.c	/^evhttp_set_gencb(struct evhttp *http,$/;"	f
evhttp_set_max_body_size	http.c	/^evhttp_set_max_body_size(struct evhttp* http, ev_ssize_t max_body_size)$/;"	f
evhttp_set_max_headers_size	http.c	/^evhttp_set_max_headers_size(struct evhttp* http, ev_ssize_t max_headers_size)$/;"	f
evhttp_set_timeout	http.c	/^evhttp_set_timeout(struct evhttp* http, int timeout_in_secs)$/;"	f
evhttp_set_timeout_tv	http.c	/^evhttp_set_timeout_tv(struct evhttp* http, const struct timeval* tv)$/;"	f
evhttp_start	http.c	/^evhttp_start(const char *address, ev_uint16_t port)$/;"	f
evhttp_start_read_	http.c	/^evhttp_start_read_(struct evhttp_connection *evcon)$/;"	f
evhttp_start_write_	http.c	/^evhttp_start_write_(struct evhttp_connection *evcon)$/;"	f
evhttp_uri	http.c	/^struct evhttp_uri {$/;"	s	file:
evhttp_uri_free	http.c	/^evhttp_uri_free(struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_fragment	http.c	/^evhttp_uri_get_fragment(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_host	http.c	/^evhttp_uri_get_host(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_path	http.c	/^evhttp_uri_get_path(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_port	http.c	/^evhttp_uri_get_port(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_query	http.c	/^evhttp_uri_get_query(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_scheme	http.c	/^evhttp_uri_get_scheme(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_get_userinfo	http.c	/^evhttp_uri_get_userinfo(const struct evhttp_uri *uri)$/;"	f
evhttp_uri_join	http.c	/^evhttp_uri_join(struct evhttp_uri *uri, char *buf, size_t limit)$/;"	f
evhttp_uri_new	http.c	/^evhttp_uri_new(void)$/;"	f
evhttp_uri_parse	http.c	/^evhttp_uri_parse(const char *source_uri)$/;"	f
evhttp_uri_parse_with_flags	http.c	/^evhttp_uri_parse_with_flags(const char *source_uri, unsigned flags)$/;"	f
evhttp_uri_set_flags	http.c	/^evhttp_uri_set_flags(struct evhttp_uri *uri, unsigned flags)$/;"	f
evhttp_uri_set_fragment	http.c	/^evhttp_uri_set_fragment(struct evhttp_uri *uri, const char *fragment)$/;"	f
evhttp_uri_set_host	http.c	/^evhttp_uri_set_host(struct evhttp_uri *uri, const char *host)$/;"	f
evhttp_uri_set_path	http.c	/^evhttp_uri_set_path(struct evhttp_uri *uri, const char *path)$/;"	f
evhttp_uri_set_port	http.c	/^evhttp_uri_set_port(struct evhttp_uri *uri, int port)$/;"	f
evhttp_uri_set_query	http.c	/^evhttp_uri_set_query(struct evhttp_uri *uri, const char *query)$/;"	f
evhttp_uri_set_scheme	http.c	/^evhttp_uri_set_scheme(struct evhttp_uri *uri, const char *scheme)$/;"	f
evhttp_uri_set_userinfo	http.c	/^evhttp_uri_set_userinfo(struct evhttp_uri *uri, const char *userinfo)$/;"	f
evhttp_uridecode	http.c	/^evhttp_uridecode(const char *uri, int decode_plus, size_t *size_out)$/;"	f
evhttp_uriencode	http.c	/^evhttp_uriencode(const char *uri, ev_ssize_t len, int space_as_plus)$/;"	f
evhttp_valid_response_code	http.c	/^evhttp_valid_response_code(int code)$/;"	f	file:
evhttp_write_buffer	http.c	/^evhttp_write_buffer(struct evhttp_connection *evcon,$/;"	f	file:
evhttp_write_cb	http.c	/^evhttp_write_cb(struct bufferevent *bufev, void *arg)$/;"	f	file:
evhttp_write_connectioncb	http.c	/^evhttp_write_connectioncb(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
evkeyval	include/event2/keyvalq_struct.h	/^struct evkeyval {$/;"	s
evmap_check_integrity_	evmap.c	/^evmap_check_integrity_(struct event_base *base)$/;"	f
evmap_delete_all_	evmap.c	/^evmap_delete_all_(struct event_base *base)$/;"	f
evmap_foreach_event_	evmap.c	/^evmap_foreach_event_(struct event_base *base,$/;"	f
evmap_foreach_event_helper	evmap.c	/^struct evmap_foreach_event_helper {$/;"	s	file:
evmap_io	evmap.c	/^		struct evmap_io evmap_io;$/;"	m	union:event_map_entry::__anon1	typeref:struct:event_map_entry::__anon1::evmap_io	file:
evmap_io	evmap.c	/^struct evmap_io {$/;"	s	file:
evmap_io_active_	evmap.c	/^evmap_io_active_(struct event_base *base, evutil_socket_t fd, short events)$/;"	f
evmap_io_add_	evmap.c	/^evmap_io_add_(struct event_base *base, evutil_socket_t fd, struct event *ev)$/;"	f
evmap_io_check_integrity_fn	evmap.c	/^evmap_io_check_integrity_fn(struct event_base *base, evutil_socket_t fd,$/;"	f	file:
evmap_io_clear_	evmap.c	/^evmap_io_clear_(struct event_io_map* ctx)$/;"	f
evmap_io_clear_	evmap.c	/^void evmap_io_clear_(struct event_io_map *ctx)$/;"	f
evmap_io_del_	evmap.c	/^evmap_io_del_(struct event_base *base, evutil_socket_t fd, struct event *ev)$/;"	f
evmap_io_delete_all_iter_fn	evmap.c	/^evmap_io_delete_all_iter_fn(struct event_base *base, evutil_socket_t fd,$/;"	f	file:
evmap_io_foreach_event_fn	evmap.c	/^evmap_io_foreach_event_fn(struct event_base *base, evutil_socket_t fd,$/;"	f	file:
evmap_io_foreach_fd	evmap.c	/^evmap_io_foreach_fd(struct event_base *base,$/;"	f	file:
evmap_io_foreach_fd_cb	evmap.c	/^typedef int (*evmap_io_foreach_fd_cb)($/;"	t	file:
evmap_io_get_fdinfo_	evmap.c	/^evmap_io_get_fdinfo_(struct event_io_map *map, evutil_socket_t fd)$/;"	f
evmap_io_init	evmap.c	/^evmap_io_init(struct evmap_io *entry)$/;"	f	file:
evmap_io_initmap_	evmap.c	/^evmap_io_initmap_(struct event_io_map* ctx)$/;"	f
evmap_io_reinit_iter_fn	evmap.c	/^evmap_io_reinit_iter_fn(struct event_base *base, evutil_socket_t fd,$/;"	f	file:
evmap_make_space	evmap.c	/^evmap_make_space(struct event_signal_map *map, int slot, int msize)$/;"	f	file:
evmap_reinit_	evmap.c	/^evmap_reinit_(struct event_base *base)$/;"	f
evmap_signal	evmap.c	/^struct evmap_signal {$/;"	s	file:
evmap_signal_active_	evmap.c	/^evmap_signal_active_(struct event_base *base, evutil_socket_t sig, int ncalls)$/;"	f
evmap_signal_add_	evmap.c	/^evmap_signal_add_(struct event_base *base, int sig, struct event *ev)$/;"	f
evmap_signal_check_integrity_fn	evmap.c	/^evmap_signal_check_integrity_fn(struct event_base *base,$/;"	f	file:
evmap_signal_clear_	evmap.c	/^evmap_signal_clear_(struct event_signal_map *ctx)$/;"	f
evmap_signal_del_	evmap.c	/^evmap_signal_del_(struct event_base *base, int sig, struct event *ev)$/;"	f
evmap_signal_delete_all_iter_fn	evmap.c	/^evmap_signal_delete_all_iter_fn(struct event_base *base, int signum,$/;"	f	file:
evmap_signal_foreach_event_fn	evmap.c	/^evmap_signal_foreach_event_fn(struct event_base *base, int signum,$/;"	f	file:
evmap_signal_foreach_signal	evmap.c	/^evmap_signal_foreach_signal(struct event_base *base,$/;"	f	file:
evmap_signal_foreach_signal_cb	evmap.c	/^typedef int (*evmap_signal_foreach_signal_cb)($/;"	t	file:
evmap_signal_init	evmap.c	/^evmap_signal_init(struct evmap_signal *entry)$/;"	f	file:
evmap_signal_initmap_	evmap.c	/^evmap_signal_initmap_(struct event_signal_map *ctx)$/;"	f
evmap_signal_reinit_iter_fn	evmap.c	/^evmap_signal_reinit_iter_fn(struct event_base *base,$/;"	f	file:
evport_add	evport.c	/^evport_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
evport_data	evport.c	/^struct evport_data {$/;"	s	file:
evport_dealloc	evport.c	/^evport_dealloc(struct event_base *base)$/;"	f	file:
evport_del	evport.c	/^evport_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
evport_dispatch	evport.c	/^evport_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
evport_init	evport.c	/^evport_init(struct event_base *base)$/;"	f	file:
evportops	evport.c	/^const struct eventop evportops = {$/;"	v	typeref:struct:eventop
evrpc	include/event2/rpc_struct.h	/^struct evrpc {$/;"	s
evrpc_add_hook	evrpc.c	/^evrpc_add_hook(void *vbase,$/;"	f
evrpc_base	evrpc-internal.h	/^struct evrpc_base {$/;"	s
evrpc_construct_uri	evrpc.c	/^evrpc_construct_uri(const char *uri)$/;"	f	file:
evrpc_free	evrpc.c	/^evrpc_free(struct evrpc_base *base)$/;"	f
evrpc_get_reply	evrpc.c	/^evrpc_get_reply(struct evrpc_req_generic *req)$/;"	f
evrpc_get_request	evrpc.c	/^evrpc_get_request(struct evrpc_req_generic *req)$/;"	f
evrpc_hook	evrpc-internal.h	/^struct evrpc_hook {$/;"	s
evrpc_hook_add_meta	evrpc.c	/^evrpc_hook_add_meta(void *ctx, const char *key,$/;"	f
evrpc_hook_associate_meta_	evrpc.c	/^evrpc_hook_associate_meta_(struct evrpc_hook_meta **pctx,$/;"	f	file:
evrpc_hook_context_free_	evrpc.c	/^evrpc_hook_context_free_(struct evrpc_hook_meta *ctx)$/;"	f	file:
evrpc_hook_ctx	evrpc-internal.h	/^struct evrpc_hook_ctx {$/;"	s
evrpc_hook_find_meta	evrpc.c	/^evrpc_hook_find_meta(void *ctx, const char *key, void **data, size_t *data_size)$/;"	f
evrpc_hook_get_connection	evrpc.c	/^evrpc_hook_get_connection(void *ctx)$/;"	f
evrpc_hook_meta	evrpc-internal.h	/^struct evrpc_hook_meta {$/;"	s
evrpc_hook_meta_new_	evrpc.c	/^evrpc_hook_meta_new_(void)$/;"	f	file:
evrpc_hooks_	evrpc-internal.h	/^struct evrpc_hooks_ {$/;"	s
evrpc_init	evrpc.c	/^evrpc_init(struct evhttp *http_server)$/;"	f
evrpc_make_request	evrpc.c	/^evrpc_make_request(struct evrpc_request_wrapper *ctx)$/;"	f
evrpc_make_request_ctx	evrpc.c	/^evrpc_make_request_ctx($/;"	f
evrpc_meta	evrpc-internal.h	/^struct evrpc_meta {$/;"	s
evrpc_meta_data_free	evrpc.c	/^evrpc_meta_data_free(struct evrpc_meta_list *meta_data)$/;"	f	file:
evrpc_pause_request	evrpc.c	/^evrpc_pause_request(void *vbase, void *ctx,$/;"	f	file:
evrpc_pool	evrpc-internal.h	/^struct evrpc_pool {$/;"	s
evrpc_pool_add_connection	evrpc.c	/^evrpc_pool_add_connection(struct evrpc_pool *pool,$/;"	f
evrpc_pool_find_connection	evrpc.c	/^evrpc_pool_find_connection(struct evrpc_pool *pool)$/;"	f	file:
evrpc_pool_free	evrpc.c	/^evrpc_pool_free(struct evrpc_pool *pool)$/;"	f
evrpc_pool_new	evrpc.c	/^evrpc_pool_new(struct event_base *base)$/;"	f
evrpc_pool_remove_connection	evrpc.c	/^evrpc_pool_remove_connection(struct evrpc_pool *pool,$/;"	f
evrpc_pool_schedule	evrpc.c	/^evrpc_pool_schedule(struct evrpc_pool *pool)$/;"	f	file:
evrpc_pool_set_timeout	evrpc.c	/^evrpc_pool_set_timeout(struct evrpc_pool *pool, int timeout_in_secs)$/;"	f
evrpc_process_hooks	evrpc.c	/^evrpc_process_hooks(struct evrpc_hook_list *head, void *ctx,$/;"	f	file:
evrpc_register_generic	evrpc.c	/^evrpc_register_generic(struct evrpc_base *base, const char *name,$/;"	f
evrpc_register_object	evrpc.c	/^evrpc_register_object(const char *name,$/;"	f	file:
evrpc_register_rpc	evrpc.c	/^evrpc_register_rpc(struct evrpc_base *base, struct evrpc *rpc,$/;"	f
evrpc_remove_hook	evrpc.c	/^evrpc_remove_hook(void *vbase, enum EVRPC_HOOK_TYPE hook_type, void *handle)$/;"	f
evrpc_remove_hook_internal	evrpc.c	/^evrpc_remove_hook_internal(struct evrpc_hook_list *head, void *handle)$/;"	f	file:
evrpc_reply_done	evrpc.c	/^evrpc_reply_done(struct evhttp_request *req, void *arg)$/;"	f	file:
evrpc_reply_done_closure	evrpc.c	/^evrpc_reply_done_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_req_generic	evrpc-internal.h	/^struct evrpc_req_generic {$/;"	s
evrpc_reqstate_free_	evrpc.c	/^evrpc_reqstate_free_(struct evrpc_req_generic* rpc_state)$/;"	f
evrpc_request_cb	evrpc.c	/^evrpc_request_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
evrpc_request_cb_closure	evrpc.c	/^evrpc_request_cb_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_request_done	evrpc.c	/^evrpc_request_done(struct evrpc_req_generic *rpc_state)$/;"	f
evrpc_request_done_closure	evrpc.c	/^evrpc_request_done_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_request_get_pool	evrpc.c	/^evrpc_request_get_pool(struct evrpc_request_wrapper *ctx)$/;"	f
evrpc_request_set_cb	evrpc.c	/^evrpc_request_set_cb(struct evrpc_request_wrapper *ctx,$/;"	f
evrpc_request_set_pool	evrpc.c	/^evrpc_request_set_pool(struct evrpc_request_wrapper *ctx,$/;"	f
evrpc_request_timeout	evrpc.c	/^evrpc_request_timeout(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evrpc_request_wrapper	evrpc-internal.h	/^struct evrpc_request_wrapper {$/;"	s
evrpc_request_wrapper_free	evrpc.c	/^evrpc_request_wrapper_free(struct evrpc_request_wrapper *request)$/;"	f	file:
evrpc_resume_request	evrpc.c	/^evrpc_resume_request(void *vbase, void *ctx, enum EVRPC_HOOK_RESULT res)$/;"	f
evrpc_schedule_request	evrpc.c	/^evrpc_schedule_request(struct evhttp_connection *connection,$/;"	f	file:
evrpc_schedule_request_closure	evrpc.c	/^evrpc_schedule_request_closure(void *arg, enum EVRPC_HOOK_RESULT hook_res)$/;"	f	file:
evrpc_send_request_generic	evrpc.c	/^evrpc_send_request_generic(struct evrpc_pool *pool,$/;"	f
evrpc_status	include/event2/rpc_struct.h	/^struct evrpc_status {$/;"	s
evrpc_unregister_rpc	evrpc.c	/^evrpc_unregister_rpc(struct evrpc_base *base, const char *name)$/;"	f
evsel	event-internal.h	/^	const struct eventop *evsel;$/;"	m	struct:event_base	typeref:struct:event_base::eventop
evsig_add	signal.c	/^evsig_add(struct event_base *base, evutil_socket_t evsignal, short old, short events, void *p)$/;"	f	file:
evsig_base	signal.c	/^static struct event_base *evsig_base = NULL;$/;"	v	typeref:struct:event_base	file:
evsig_base_fd	signal.c	/^static evutil_socket_t evsig_base_fd = -1;$/;"	v	file:
evsig_base_lock	signal.c	/^static void *evsig_base_lock = NULL;$/;"	v	file:
evsig_base_n_signals_added	signal.c	/^static int evsig_base_n_signals_added = 0;$/;"	v	file:
evsig_cb	signal.c	/^evsig_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evsig_dealloc_	signal.c	/^evsig_dealloc_(struct event_base *base)$/;"	f
evsig_del	signal.c	/^evsig_del(struct event_base *base, evutil_socket_t evsignal, short old, short events, void *p)$/;"	f	file:
evsig_free_globals_	signal.c	/^evsig_free_globals_(void)$/;"	f
evsig_free_globals_locks	signal.c	/^evsig_free_globals_locks(void)$/;"	f	file:
evsig_global_setup_locks_	signal.c	/^evsig_global_setup_locks_(const int enable_locks)$/;"	f
evsig_handler	signal.c	/^evsig_handler(int sig)$/;"	f	file:
evsig_info	evsignal-internal.h	/^struct evsig_info {$/;"	s
evsig_init_	signal.c	/^evsig_init_(struct event_base *base)$/;"	f
evsig_restore_handler_	signal.c	/^evsig_restore_handler_(struct event_base *base, int evsignal)$/;"	f
evsig_set_base_	signal.c	/^evsig_set_base_(struct event_base *base)$/;"	f
evsig_set_handler_	signal.c	/^evsig_set_handler_(struct event_base *base,$/;"	f
evsignal_add	include/event2/event.h	1025;"	d
evsignal_assign	include/event2/event.h	1026;"	d
evsignal_del	include/event2/event.h	1030;"	d
evsignal_initialized	include/event2/event.h	1032;"	d
evsignal_new	include/event2/event.h	1028;"	d
evsignal_pending	include/event2/event.h	1031;"	d
evsignal_set	include/event2/event_compat.h	187;"	d
evsigops	signal.c	/^static const struct eventop evsigops = {$/;"	v	typeref:struct:eventop	file:
evsigsel	event-internal.h	/^	const struct eventop *evsigsel;$/;"	m	struct:event_base	typeref:struct:event_base::eventop
evtag_consume	event_tagging.c	/^evtag_consume(struct evbuffer *evbuf)$/;"	f
evtag_decode_int	event_tagging.c	/^evtag_decode_int(ev_uint32_t *pnumber, struct evbuffer *evbuf)$/;"	f
evtag_decode_int64	event_tagging.c	/^evtag_decode_int64(ev_uint64_t *pnumber, struct evbuffer *evbuf)$/;"	f
evtag_decode_tag	event_tagging.c	/^evtag_decode_tag(ev_uint32_t *ptag, struct evbuffer *evbuf)$/;"	f
evtag_encode_int	event_tagging.c	/^evtag_encode_int(struct evbuffer *evbuf, ev_uint32_t number)$/;"	f
evtag_encode_int64	event_tagging.c	/^evtag_encode_int64(struct evbuffer *evbuf, ev_uint64_t number)$/;"	f
evtag_encode_tag	event_tagging.c	/^evtag_encode_tag(struct evbuffer *evbuf, ev_uint32_t tag)$/;"	f
evtag_fuzz	test/regress.c	/^evtag_fuzz(void *ptr)$/;"	f	file:
evtag_init	event_tagging.c	/^evtag_init(void)$/;"	f
evtag_int_test	test/regress.c	/^evtag_int_test(void *ptr)$/;"	f	file:
evtag_marshal	event_tagging.c	/^evtag_marshal(struct evbuffer *evbuf, ev_uint32_t tag,$/;"	f
evtag_marshal_buffer	event_tagging.c	/^evtag_marshal_buffer(struct evbuffer *evbuf, ev_uint32_t tag,$/;"	f
evtag_marshal_int	event_tagging.c	/^evtag_marshal_int(struct evbuffer *evbuf, ev_uint32_t tag, ev_uint32_t integer)$/;"	f
evtag_marshal_int64	event_tagging.c	/^evtag_marshal_int64(struct evbuffer *evbuf, ev_uint32_t tag,$/;"	f
evtag_marshal_string	event_tagging.c	/^evtag_marshal_string(struct evbuffer *buf, ev_uint32_t tag, const char *string)$/;"	f
evtag_marshal_timeval	event_tagging.c	/^evtag_marshal_timeval(struct evbuffer *evbuf, ev_uint32_t tag, struct timeval *tv)$/;"	f
evtag_payload_length	event_tagging.c	/^evtag_payload_length(struct evbuffer *evbuf, ev_uint32_t *plength)$/;"	f
evtag_peek	event_tagging.c	/^evtag_peek(struct evbuffer *evbuf, ev_uint32_t *ptag)$/;"	f
evtag_peek_length	event_tagging.c	/^evtag_peek_length(struct evbuffer *evbuf, ev_uint32_t *plength)$/;"	f
evtag_tag_encoding	test/regress.c	/^evtag_tag_encoding(void *ptr)$/;"	f	file:
evtag_test_peek	test/regress.c	/^evtag_test_peek(void *ptr)$/;"	f	file:
evtag_testcases	test/regress.c	/^struct testcase_t evtag_testcases[] = {$/;"	v	typeref:struct:testcase_t
evtag_unmarshal	event_tagging.c	/^evtag_unmarshal(struct evbuffer *src, ev_uint32_t *ptag, struct evbuffer *dst)$/;"	f
evtag_unmarshal_fixed	event_tagging.c	/^evtag_unmarshal_fixed(struct evbuffer *src, ev_uint32_t need_tag, void *data,$/;"	f
evtag_unmarshal_header	event_tagging.c	/^evtag_unmarshal_header(struct evbuffer *evbuf, ev_uint32_t *ptag)$/;"	f
evtag_unmarshal_int	event_tagging.c	/^evtag_unmarshal_int(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evtag_unmarshal_int64	event_tagging.c	/^evtag_unmarshal_int64(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evtag_unmarshal_string	event_tagging.c	/^evtag_unmarshal_string(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evtag_unmarshal_timeval	event_tagging.c	/^evtag_unmarshal_timeval(struct evbuffer *evbuf, ev_uint32_t need_tag,$/;"	f
evthread_cond_fns_	evthread.c	/^GLOBAL struct evthread_condition_callbacks evthread_cond_fns_ = {$/;"	v	typeref:struct:evthread_condition_callbacks
evthread_condition_callbacks	include/event2/thread.h	/^struct evthread_condition_callbacks {$/;"	s
evthread_debug_get_real_lock_	evthread.c	/^evthread_debug_get_real_lock_(void *lock_)$/;"	f
evthread_debug_lock_mark_locked	evthread.c	/^evthread_debug_lock_mark_locked(unsigned mode, struct debug_lock *lock)$/;"	f	file:
evthread_debug_lock_mark_unlocked	evthread.c	/^evthread_debug_lock_mark_unlocked(unsigned mode, struct debug_lock *lock)$/;"	f	file:
evthread_enable_lock_debugging	evthread.c	/^evthread_enable_lock_debugging(void)$/;"	f
evthread_enable_lock_debuging	evthread.c	/^evthread_enable_lock_debuging(void)$/;"	f
evthread_get_condition_callbacks	evthread.c	/^struct evthread_condition_callbacks *evthread_get_condition_callbacks()$/;"	f
evthread_get_lock_callbacks	evthread.c	/^struct evthread_lock_callbacks *evthread_get_lock_callbacks()$/;"	f
evthread_id_fn_	evthread.c	/^GLOBAL unsigned long (*evthread_id_fn_)(void) = NULL;$/;"	v
evthread_is_debug_lock_held_	evthread.c	/^evthread_is_debug_lock_held_(void *lock_)$/;"	f
evthread_lock_callbacks	include/event2/thread.h	/^struct evthread_lock_callbacks {$/;"	s
evthread_lock_debugging_enabled_	evthread.c	/^GLOBAL int evthread_lock_debugging_enabled_ = 0;$/;"	v
evthread_lock_fns_	evthread.c	/^GLOBAL struct evthread_lock_callbacks evthread_lock_fns_ = {$/;"	v	typeref:struct:evthread_lock_callbacks
evthread_make_base_notifiable	event.c	/^evthread_make_base_notifiable(struct event_base *base)$/;"	f
evthread_make_base_notifiable_nolock_	event.c	/^evthread_make_base_notifiable_nolock_(struct event_base *base)$/;"	f	file:
evthread_notify_base	event.c	/^evthread_notify_base(struct event_base *base)$/;"	f	file:
evthread_notify_base_default	event.c	/^evthread_notify_base_default(struct event_base *base)$/;"	f	file:
evthread_notify_base_eventfd	event.c	/^evthread_notify_base_eventfd(struct event_base *base)$/;"	f	file:
evthread_notify_drain_default	event.c	/^evthread_notify_drain_default(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evthread_notify_drain_eventfd	event.c	/^evthread_notify_drain_eventfd(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
evthread_posix_cond_alloc	evthread_pthread.c	/^evthread_posix_cond_alloc(unsigned condflags)$/;"	f	file:
evthread_posix_cond_free	evthread_pthread.c	/^evthread_posix_cond_free(void *cond_)$/;"	f	file:
evthread_posix_cond_signal	evthread_pthread.c	/^evthread_posix_cond_signal(void *cond_, int broadcast)$/;"	f	file:
evthread_posix_cond_wait	evthread_pthread.c	/^evthread_posix_cond_wait(void *cond_, void *lock_, const struct timeval *tv)$/;"	f	file:
evthread_posix_get_id	evthread_pthread.c	/^evthread_posix_get_id(void)$/;"	f	file:
evthread_posix_lock	evthread_pthread.c	/^evthread_posix_lock(unsigned mode, void *lock_)$/;"	f	file:
evthread_posix_lock_alloc	evthread_pthread.c	/^evthread_posix_lock_alloc(unsigned locktype)$/;"	f	file:
evthread_posix_lock_free	evthread_pthread.c	/^evthread_posix_lock_free(void *lock_, unsigned locktype)$/;"	f	file:
evthread_posix_unlock	evthread_pthread.c	/^evthread_posix_unlock(unsigned mode, void *lock_)$/;"	f	file:
evthread_set_condition_callbacks	evthread.c	/^evthread_set_condition_callbacks(const struct evthread_condition_callbacks *cbs)$/;"	f
evthread_set_id_callback	evthread.c	/^evthread_set_id_callback(unsigned long (*id_fn)(void))$/;"	f
evthread_set_lock_callbacks	evthread.c	/^evthread_set_lock_callbacks(const struct evthread_lock_callbacks *cbs)$/;"	f
evthread_setup_global_lock_	evthread.c	/^evthread_setup_global_lock_(void *lock_, unsigned locktype, int enable_locks)$/;"	f
evthread_use_pthreads	evthread_pthread.c	/^evthread_use_pthreads(void)$/;"	f
evthread_use_windows_threads	evthread_win32.c	/^evthread_use_windows_threads(void)$/;"	f
evthread_win32_cond	evthread_win32.c	/^struct evthread_win32_cond {$/;"	s	file:
evthread_win32_cond_alloc	evthread_win32.c	/^evthread_win32_cond_alloc(unsigned flags)$/;"	f	file:
evthread_win32_cond_free	evthread_win32.c	/^evthread_win32_cond_free(void *cond_)$/;"	f	file:
evthread_win32_cond_signal	evthread_win32.c	/^evthread_win32_cond_signal(void *cond_, int broadcast)$/;"	f	file:
evthread_win32_cond_wait	evthread_win32.c	/^evthread_win32_cond_wait(void *cond_, void *lock_, const struct timeval *tv)$/;"	f	file:
evthread_win32_condvar_alloc	evthread_win32.c	/^evthread_win32_condvar_alloc(unsigned condflags)$/;"	f	file:
evthread_win32_condvar_free	evthread_win32.c	/^evthread_win32_condvar_free(void *cond_)$/;"	f	file:
evthread_win32_condvar_init	evthread_win32.c	/^evthread_win32_condvar_init(void)$/;"	f	file:
evthread_win32_condvar_signal	evthread_win32.c	/^evthread_win32_condvar_signal(void *cond, int broadcast)$/;"	f	file:
evthread_win32_condvar_wait	evthread_win32.c	/^evthread_win32_condvar_wait(void *cond_, void *lock_, const struct timeval *tv)$/;"	f	file:
evthread_win32_get_id	evthread_win32.c	/^evthread_win32_get_id(void)$/;"	f	file:
evthread_win32_lock	evthread_win32.c	/^evthread_win32_lock(unsigned mode, void *lock_)$/;"	f	file:
evthread_win32_lock_create	evthread_win32.c	/^evthread_win32_lock_create(unsigned locktype)$/;"	f	file:
evthread_win32_lock_free	evthread_win32.c	/^evthread_win32_lock_free(void *lock_, unsigned locktype)$/;"	f	file:
evthread_win32_unlock	evthread_win32.c	/^evthread_win32_unlock(unsigned mode, void *lock_)$/;"	f	file:
evthreadimpl_cond_alloc_	evthread.c	/^evthreadimpl_cond_alloc_(unsigned condtype)$/;"	f
evthreadimpl_cond_free_	evthread.c	/^evthreadimpl_cond_free_(void *cond)$/;"	f
evthreadimpl_cond_signal_	evthread.c	/^evthreadimpl_cond_signal_(void *cond, int broadcast)$/;"	f
evthreadimpl_cond_wait_	evthread.c	/^evthreadimpl_cond_wait_(void *cond, void *lock, const struct timeval *tv)$/;"	f
evthreadimpl_disable_lock_debugging_	evthread.c	/^void evthreadimpl_disable_lock_debugging_(void)$/;"	f
evthreadimpl_get_id_	evthread.c	/^evthreadimpl_get_id_()$/;"	f
evthreadimpl_is_lock_debugging_enabled_	evthread.c	/^evthreadimpl_is_lock_debugging_enabled_(void)$/;"	f
evthreadimpl_lock_alloc_	evthread.c	/^evthreadimpl_lock_alloc_(unsigned locktype)$/;"	f
evthreadimpl_lock_free_	evthread.c	/^evthreadimpl_lock_free_(void *lock, unsigned locktype)$/;"	f
evthreadimpl_lock_lock_	evthread.c	/^evthreadimpl_lock_lock_(unsigned mode, void *lock)$/;"	f
evthreadimpl_lock_unlock_	evthread.c	/^evthreadimpl_lock_unlock_(unsigned mode, void *lock)$/;"	f
evthreadimpl_locking_enabled_	evthread.c	/^evthreadimpl_locking_enabled_(void)$/;"	f
evtimer_add	include/event2/event.h	1012;"	d
evtimer_assign	include/event2/event.h	1008;"	d
evtimer_del	include/event2/event.h	1013;"	d
evtimer_initialized	include/event2/event.h	1015;"	d
evtimer_new	include/event2/event.h	1011;"	d
evtimer_pending	include/event2/event.h	1014;"	d
evtimer_set	include/event2/event_compat.h	186;"	d
evutil_GetTickCount_	evutil_time.c	/^evutil_GetTickCount_(struct evutil_monotonic_timer *base)$/;"	f	file:
evutil_accept4_	evutil.c	/^evutil_accept4_(evutil_socket_t sockfd, struct sockaddr *addr,$/;"	f
evutil_addrinfo	include/event2/util.h	/^struct evutil_addrinfo {$/;"	s
evutil_addrinfo	include/event2/util.h	663;"	d
evutil_addrinfo_append_	evutil.c	/^evutil_addrinfo_append_(struct evutil_addrinfo *first,$/;"	f
evutil_adjust_hints_for_addrconfig_	evutil.c	/^evutil_adjust_hints_for_addrconfig_(struct evutil_addrinfo *hints)$/;"	f
evutil_ascii_strcasecmp	evutil.c	/^evutil_ascii_strcasecmp(const char *s1, const char *s2)$/;"	f
evutil_ascii_strncasecmp	evutil.c	/^int evutil_ascii_strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f
evutil_check_ifaddrs	evutil.c	/^evutil_check_ifaddrs(void)$/;"	f	file:
evutil_check_interfaces	evutil.c	/^evutil_check_interfaces(int force_recheck)$/;"	f	file:
evutil_closesocket	evutil.c	/^evutil_closesocket(evutil_socket_t sock)$/;"	f
evutil_configure_monotonic_time	evutil_time.c	/^evutil_configure_monotonic_time(struct evutil_monotonic_timer *timer,$/;"	f
evutil_configure_monotonic_time_	evutil_time.c	/^evutil_configure_monotonic_time_(struct evutil_monotonic_timer *base,$/;"	f
evutil_date_rfc1123	evutil_time.c	/^evutil_date_rfc1123(char *date, const size_t datelen, const struct tm *tm)$/;"	f
evutil_ersatz_socketpair_	evutil.c	/^evutil_ersatz_socketpair_(int family, int type, int protocol,$/;"	f
evutil_eventfd_	evutil.c	/^evutil_eventfd_(unsigned initval, int flags)$/;"	f
evutil_fast_socket_closeonexec	evutil.c	/^evutil_fast_socket_closeonexec(evutil_socket_t fd)$/;"	f	file:
evutil_fast_socket_nonblocking	evutil.c	/^evutil_fast_socket_nonblocking(evutil_socket_t fd)$/;"	f	file:
evutil_format_sockaddr_port_	evutil.c	/^evutil_format_sockaddr_port_(const struct sockaddr *sa, char *out, size_t outlen)$/;"	f
evutil_found_ifaddr	evutil.c	/^evutil_found_ifaddr(const struct sockaddr *sa)$/;"	f	file:
evutil_free_globals_	evutil.c	/^evutil_free_globals_(void)$/;"	f
evutil_free_secure_rng_globals_	evutil_rand.c	/^evutil_free_secure_rng_globals_(void)$/;"	f
evutil_free_secure_rng_globals_locks	evutil_rand.c	/^evutil_free_secure_rng_globals_locks(void)$/;"	f	file:
evutil_free_sock_err_globals	evutil.c	/^evutil_free_sock_err_globals(void)$/;"	f	file:
evutil_freeaddrinfo	evutil.c	/^evutil_freeaddrinfo(struct evutil_addrinfo *ai)$/;"	f
evutil_gai_strerror	evutil.c	/^evutil_gai_strerror(int err)$/;"	f
evutil_getaddrinfo	evutil.c	/^evutil_getaddrinfo(const char *nodename, const char *servname,$/;"	f
evutil_getaddrinfo_async_	evutil.c	/^struct evdns_getaddrinfo_request *evutil_getaddrinfo_async_($/;"	f
evutil_getaddrinfo_cancel_async_	evutil.c	/^void evutil_getaddrinfo_cancel_async_(struct evdns_getaddrinfo_request *data)$/;"	f
evutil_getaddrinfo_common_	evutil.c	/^evutil_getaddrinfo_common_(const char *nodename, const char *servname,$/;"	f
evutil_getaddrinfo_infer_protocols	evutil.c	/^evutil_getaddrinfo_infer_protocols(struct evutil_addrinfo *hints)$/;"	f	file:
evutil_getenv_	evutil.c	/^evutil_getenv_(const char *varname)$/;"	f
evutil_gettime_monotonic	evutil_time.c	/^evutil_gettime_monotonic(struct evutil_monotonic_timer *timer,$/;"	f
evutil_gettime_monotonic_	evutil_time.c	/^evutil_gettime_monotonic_(struct evutil_monotonic_timer *base,$/;"	f
evutil_gettimeofday	evutil_time.c	/^evutil_gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f
evutil_gettimeofday	include/event2/util.h	583;"	d
evutil_global_setup_locks_	evutil.c	/^evutil_global_setup_locks_(const int enable_locks)$/;"	f
evutil_hex_char_to_int_	evutil.c	/^evutil_hex_char_to_int_(char c)$/;"	f
evutil_inet_ntop	evutil.c	/^evutil_inet_ntop(int af, const void *src, char *dst, size_t len)$/;"	f
evutil_inet_pton	evutil.c	/^evutil_inet_pton(int af, const char *src, void *dst)$/;"	f
evutil_issetugid	evutil.c	/^evutil_issetugid(void)$/;"	f	file:
evutil_load_windows_system_library_	evutil.c	/^evutil_load_windows_system_library_(const TCHAR *library_name)$/;"	f
evutil_make_internal_pipe_	evutil.c	/^evutil_make_internal_pipe_(evutil_socket_t fd[2])$/;"	f
evutil_make_listen_socket_reuseable	evutil.c	/^evutil_make_listen_socket_reuseable(evutil_socket_t sock)$/;"	f
evutil_make_listen_socket_reuseable_port	evutil.c	/^evutil_make_listen_socket_reuseable_port(evutil_socket_t sock)$/;"	f
evutil_make_socket_closeonexec	evutil.c	/^evutil_make_socket_closeonexec(evutil_socket_t fd)$/;"	f
evutil_make_socket_nonblocking	evutil.c	/^evutil_make_socket_nonblocking(evutil_socket_t fd)$/;"	f
evutil_make_tcp_listen_socket_deferred	evutil.c	/^evutil_make_tcp_listen_socket_deferred(evutil_socket_t sock)$/;"	f
evutil_memclear_	evutil.c	/^evutil_memclear_(void *mem, size_t len)$/;"	f
evutil_memset_volatile_	evutil.c	/^void * (*volatile evutil_memset_volatile_)(void *, int, size_t) = memset;$/;"	v
evutil_monotonic_timer	include/event2/util.h	/^struct evutil_monotonic_timer$/;"	s
evutil_monotonic_timer	time-internal.h	/^struct evutil_monotonic_timer {$/;"	s
evutil_monotonic_timer_free	evutil_time.c	/^evutil_monotonic_timer_free(struct evutil_monotonic_timer *timer)$/;"	f
evutil_monotonic_timer_new	evutil_time.c	/^evutil_monotonic_timer_new(void)$/;"	f
evutil_new_addrinfo_	evutil.c	/^evutil_new_addrinfo_(struct sockaddr *sa, ev_socklen_t socklen,$/;"	f
evutil_offsetof	include/event2/util.h	568;"	d
evutil_offsetof	include/event2/util.h	572;"	d
evutil_open_closeonexec_	evutil.c	/^evutil_open_closeonexec_(const char *pathname, int flags, unsigned mode)$/;"	f
evutil_parse_servname	evutil.c	/^evutil_parse_servname(const char *servname, const char *protocol,$/;"	f	file:
evutil_parse_sockaddr_port	evutil.c	/^evutil_parse_sockaddr_port(const char *ip_as_string, struct sockaddr *out, int *outlen)$/;"	f
evutil_read_file_	evutil.c	/^evutil_read_file_(const char *filename, char **content_out, size_t *len_out,$/;"	f
evutil_rtrim_lws_	evutil.c	/^evutil_rtrim_lws_(char *str)$/;"	f
evutil_secure_rng_add_bytes	evutil_rand.c	/^evutil_secure_rng_add_bytes(const char *buf, size_t n)$/;"	f
evutil_secure_rng_get_bytes	evutil_rand.c	/^evutil_secure_rng_get_bytes(void *buf, size_t n)$/;"	f
evutil_secure_rng_global_setup_locks_	evutil_rand.c	/^evutil_secure_rng_global_setup_locks_(const int enable_locks)$/;"	f
evutil_secure_rng_init	evutil_rand.c	/^evutil_secure_rng_init(void)$/;"	f
evutil_secure_rng_set_urandom_device_file	evutil_rand.c	/^evutil_secure_rng_set_urandom_device_file(char *fname)$/;"	f
evutil_set_evdns_getaddrinfo_cancel_fn_	evutil.c	/^evutil_set_evdns_getaddrinfo_cancel_fn_(evdns_getaddrinfo_cancel_fn fn)$/;"	f
evutil_set_evdns_getaddrinfo_fn_	evutil.c	/^evutil_set_evdns_getaddrinfo_fn_(evdns_getaddrinfo_fn fn)$/;"	f
evutil_snprintf	evutil.c	/^evutil_snprintf(char *buf, size_t buflen, const char *format, ...)$/;"	f
evutil_sockaddr_cmp	evutil.c	/^evutil_sockaddr_cmp(const struct sockaddr *sa1, const struct sockaddr *sa2,$/;"	f
evutil_sockaddr_is_loopback_	evutil.c	/^evutil_sockaddr_is_loopback_(const struct sockaddr *addr)$/;"	f
evutil_socket_	evutil.c	/^evutil_socket_(int domain, int type, int protocol)$/;"	f
evutil_socket_connect_	evutil.c	/^evutil_socket_connect_(evutil_socket_t *fd_ptr, const struct sockaddr *sa, int socklen)$/;"	f
evutil_socket_error_to_string	evutil.c	/^evutil_socket_error_to_string(int errcode)$/;"	f
evutil_socket_error_to_string	include/event2/util.h	499;"	d
evutil_socket_error_to_string	include/event2/util.h	506;"	d
evutil_socket_finished_connecting_	evutil.c	/^evutil_socket_finished_connecting_(evutil_socket_t fd)$/;"	f
evutil_socket_geterror	evutil.c	/^evutil_socket_geterror(evutil_socket_t sock)$/;"	f
evutil_socket_geterror	include/event2/util.h	497;"	d
evutil_socket_geterror	include/event2/util.h	505;"	d
evutil_socket_t	include/event2/util.h	314;"	d
evutil_socket_t	include/event2/util.h	316;"	d
evutil_socketpair	evutil.c	/^evutil_socketpair(int family, int type, int protocol, evutil_socket_t fd[2])$/;"	f
evutil_strtoll	evutil.c	/^evutil_strtoll(const char *s, char **endptr, int base)$/;"	f
evutil_timeradd	include/event2/util.h	520;"	d
evutil_timeradd	include/event2/util.h	523;"	d
evutil_timerclear	include/event2/util.h	545;"	d
evutil_timerclear	include/event2/util.h	547;"	d
evutil_timercmp	include/event2/util.h	554;"	d
evutil_timerisset	include/event2/util.h	560;"	d
evutil_timerisset	include/event2/util.h	562;"	d
evutil_timersub	include/event2/util.h	521;"	d
evutil_timersub	include/event2/util.h	532;"	d
evutil_tv_to_msec_	evutil_time.c	/^evutil_tv_to_msec_(const struct timeval *tv)$/;"	f
evutil_unparse_protoname	evutil.c	/^evutil_unparse_protoname(int proto)$/;"	f	file:
evutil_usleep_	evutil_time.c	/^evutil_usleep_(const struct timeval *tv)$/;"	f
evutil_vsnprintf	evutil.c	/^evutil_vsnprintf(char *buf, size_t buflen, const char *format, va_list ap)$/;"	f
evutil_weakrand_	evutil.c	/^evutil_weakrand_(struct evutil_weakrand_state *state)$/;"	f
evutil_weakrand_range_	evutil.c	/^evutil_weakrand_range_(struct evutil_weakrand_state *state, ev_int32_t top)$/;"	f
evutil_weakrand_seed_	evutil.c	/^evutil_weakrand_seed_(struct evutil_weakrand_state *state, ev_uint32_t seed)$/;"	f
evutil_weakrand_state	util-internal.h	/^struct evutil_weakrand_state {$/;"	s
example_struct	test/regress_util.c	/^struct example_struct {$/;"	s	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exit_base	test/regress_dns.c	/^static struct event_base *exit_base;$/;"	v	typeref:struct:event_base	file:
exit_base	test/regress_http.c	/^static struct event_base *exit_base;$/;"	v	typeref:struct:event_base	file:
exit_base	test/regress_ssl.c	/^static struct event_base *exit_base = NULL;$/;"	v	typeref:struct:event_base	file:
exit_base	test/regress_thread.c	/^static struct event_base *exit_base = NULL;$/;"	v	typeref:struct:event_base	file:
exit_base_on_no_pending_results	test/regress_dns.c	/^static struct event_base *exit_base_on_no_pending_results = NULL;$/;"	v	typeref:struct:event_base	file:
exit_failed	test/rpcgen_wrapper.sh	/^exit_failed() {$/;"	f
exit_port	test/regress_dns.c	/^static struct evdns_server_port *exit_port;$/;"	v	typeref:struct:evdns_server_port	file:
exit_reuse	test/rpcgen_wrapper.sh	/^exit_reuse() {$/;"	f
exit_updated	test/rpcgen_wrapper.sh	/^exit_updated() {$/;"	f
expect	http.c	/^enum expect { NO, CONTINUE, OTHER };$/;"	g	file:
expect_active_pos	test/check-dumpevents.py	/^    expect_active_pos = text.index("Active:\\n")$/;"	v
expect_inserted_pos	test/check-dumpevents.py	/^    expect_inserted_pos = text.index("Inserted:\\n")$/;"	v
exset_out	win32select.c	/^	struct win_fd_set *exset_out;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
extension	sample/http-server.c	/^	const char *extension;$/;"	m	struct:table_entry	file:
extension_fns_initialized	event_iocp.c	/^static int extension_fns_initialized = 0;$/;"	v	file:
extra	evbuffer-internal.h	/^	void *extra;$/;"	m	struct:evbuffer_chain_reference
fail_cb	test/regress.c	/^fail_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
fail_server_cb	test/regress_dns.c	/^fail_server_cb(struct evdns_server_request *req, void *data)$/;"	f	file:
failed_times	evdns.c	/^	int failed_times;  \/* number of times which we have given this server a chance *\/$/;"	m	struct:nameserver	file:
failing_malloc	test/regress_buffer.c	/^failing_malloc(size_t how_much)$/;"	f	file:
failures	test/bench.c	/^static int count, writes, fired, failures;$/;"	v	file:
fake_getnameinfo	http.c	/^fake_getnameinfo(const struct sockaddr *sa, size_t salen, char *host,$/;"	f	file:
fake_listener_create	test/regress_bufferevent.c	/^fake_listener_create(struct sockaddr_in *localhost)$/;"	f	file:
family	listener.c	/^	ev_uint8_t family;$/;"	m	struct:accepting_socket	file:
fatal_fn	log.c	/^static event_fatal_cb fatal_fn = NULL;$/;"	v	file:
fatal_want_message	test/regress_util.c	/^static const char *fatal_want_message = NULL;$/;"	v	file:
fatal_want_severity	test/regress_util.c	/^static int fatal_want_severity = 0;$/;"	v	file:
fatalfn	test/regress_util.c	/^fatalfn(int exitcode)$/;"	f	file:
fd	buffer_iocp.c	/^	evutil_socket_t fd;$/;"	m	struct:evbuffer_overlapped	file:
fd	bufferevent-internal.h	/^	evutil_socket_t fd;$/;"	m	union:bufferevent_ctrl_data
fd	changelist-internal.h	/^	evutil_socket_t fd;$/;"	m	struct:event_change
fd	evbuffer-internal.h	/^	int fd;$/;"	m	struct:evbuffer_file_segment
fd	evmap.c	/^	evutil_socket_t fd;$/;"	m	struct:event_map_entry	file:
fd	http-internal.h	/^	evutil_socket_t fd;$/;"	m	struct:evhttp_connection
fd	listener.c	/^	evutil_socket_t fd;$/;"	m	struct:evconnlistener_iocp	file:
fd	test/regress_http.c	/^	evutil_socket_t fd;$/;"	m	struct:terminate_state	file:
fd	test/regress_ssl.c	/^	int fd;$/;"	m	struct:rwcount	file:
fd_array	win32select.c	/^	SOCKET fd_array[1];$/;"	m	struct:win_fd_set	file:
fd_count	win32select.c	/^	unsigned int fd_count;$/;"	m	struct:win_fd_set	file:
fd_info	evport.c	/^struct fd_info {$/;"	s	file:
fd_mask	select.c	/^typedef unsigned long fd_mask;$/;"	t	file:
fd_set_copy	win32select.c	/^fd_set_copy(struct win_fd_set *out, const struct win_fd_set *in)$/;"	f	file:
fdi_what	evport.c	/^	short fdi_what;$/;"	m	struct:fd_info	file:
fdinfo_len	event-internal.h	/^	size_t fdinfo_len;$/;"	m	struct:eventop
features	event-internal.h	/^	enum event_method_feature features;$/;"	m	struct:eventop	typeref:enum:eventop::event_method_feature
fifo_read	sample/event-read-fifo.c	/^fifo_read(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
file_offset	evbuffer-internal.h	/^	ev_off_t file_offset;$/;"	m	struct:evbuffer_file_segment
file_segment_cleanup_cb_called_count	test/regress_buffer.c	/^static int file_segment_cleanup_cb_called_count = 0;$/;"	v	file:
file_segment_cleanup_cb_called_with	test/regress_buffer.c	/^static struct evbuffer_file_segment const* file_segment_cleanup_cb_called_with = NULL;$/;"	v	file:
file_segment_cleanup_cb_called_with_arg	test/regress_buffer.c	/^static void* file_segment_cleanup_cb_called_with_arg = NULL;$/;"	v	file:
file_segment_cleanup_cb_called_with_flags	test/regress_buffer.c	/^static int file_segment_cleanup_cb_called_with_flags = 0;$/;"	v	file:
file_segment_cleanup_cp	test/regress_buffer.c	/^file_segment_cleanup_cp(struct evbuffer_file_segment const* seg, int flags, void* arg)$/;"	f	file:
filetime_diff	test/test-changelist.c	/^filetime_diff(const FILETIME *ftStart, const FILETIME *ftEnd)$/;"	f	file:
filetime_to_100nsec	test/test-changelist.c	/^filetime_to_100nsec(const FILETIME *ft)$/;"	f	file:
finalize_testcases	test/regress_finalize.c	/^struct testcase_t finalize_testcases[] = {$/;"	v	typeref:struct:testcase_t
find_eol_char	buffer.c	/^find_eol_char(char *s, size_t len)$/;"	f	file:
find_hosts_entry	evdns.c	/^find_hosts_entry(struct evdns_base *base, const char *hostname,$/;"	f	file:
finetimetests	test/regress_main.c	/^const char *finetimetests[] = {$/;"	v
fired	test/bench.c	/^static int count, writes, fired, failures;$/;"	v	file:
fired	test/bench_cascade.c	/^static int fired;$/;"	v	file:
first	evbuffer-internal.h	/^	struct evbuffer_chain *first;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
first_counter	time-internal.h	/^	ev_uint64_t first_counter;$/;"	m	struct:evutil_monotonic_timer
first_pinned	buffer_iocp.c	/^	struct evbuffer_chain *first_pinned;$/;"	m	struct:evbuffer_overlapped	typeref:struct:evbuffer_overlapped::evbuffer_chain	file:
first_tick	time-internal.h	/^	ev_uint64_t first_tick;$/;"	m	struct:evutil_monotonic_timer
flags	evbuffer-internal.h	/^	ev_uint32_t flags;$/;"	m	struct:evbuffer
flags	evbuffer-internal.h	/^	ev_uint32_t flags;$/;"	m	struct:evbuffer_cb_entry
flags	evbuffer-internal.h	/^	unsigned flags; \/**< combination of EVBUF_FS_* flags  *\/$/;"	m	struct:evbuffer_file_segment
flags	evbuffer-internal.h	/^	unsigned flags;$/;"	m	struct:evbuffer_chain
flags	event-internal.h	/^	enum event_base_config_flag flags;$/;"	m	struct:event_base	typeref:enum:event_base::event_base_config_flag
flags	event-internal.h	/^	enum event_base_config_flag flags;$/;"	m	struct:event_config	typeref:enum:event_config::event_base_config_flag
flags	http-internal.h	/^	int flags;$/;"	m	struct:evhttp
flags	http-internal.h	/^	int flags;$/;"	m	struct:evhttp_connection
flags	http.c	/^	unsigned flags;$/;"	m	struct:evhttp_uri	file:
flags	include/event2/dns_struct.h	/^	int flags;$/;"	m	struct:evdns_server_request
flags	include/event2/http_struct.h	/^	int flags;$/;"	m	struct:evhttp_request
flags	listener.c	/^	unsigned flags;$/;"	m	struct:evconnlistener	file:
flags	test/tinytest.h	/^	unsigned long flags; \/**< Bitfield of TT_* flags. *\/$/;"	m	struct:testcase_t
flush	bufferevent-internal.h	/^	int (*flush)(struct bufferevent *, short, enum bufferevent_flush_mode);$/;"	m	struct:bufferevent_ops
fn	evmap.c	/^	event_base_foreach_event_cb fn;$/;"	m	struct:evmap_foreach_event_helper	file:
fn	test/tinytest.h	/^	testcase_fn fn; \/**< The function to run to implement this case. *\/$/;"	m	struct:testcase_t
foreach_count_cb	test/regress.c	/^foreach_count_cb(const struct event_base *base, const struct event *ev, void *arg)$/;"	f	file:
foreach_find_cb	test/regress.c	/^foreach_find_cb(const struct event_base *base, const struct event *ev, void *arg)$/;"	f	file:
foreach_helper	test/regress.c	/^struct foreach_helper {$/;"	s	file:
fork_signal_cb	test/regress.c	/^fork_signal_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
found_multi	test/regress_http.c	/^static int found_multi = 0;$/;"	v	file:
found_multi2	test/regress_http.c	/^static int found_multi2 = 0;$/;"	v	file:
fragment	http.c	/^	char *fragment; \/* fragment or NULL *\/$/;"	m	struct:evhttp_uri	file:
free	include/event2/thread.h	/^	void (*free)(void *lock, unsigned locktype);$/;"	m	struct:evthread_lock_callbacks
free_and_unlock_accepting_socket	listener.c	/^free_and_unlock_accepting_socket(struct accepting_socket *as)$/;"	f	file:
free_condition	include/event2/thread.h	/^	void (*free_condition)(void *cond);$/;"	m	struct:evthread_condition_callbacks
free_context	bufferevent_filter.c	/^	void (*free_context)(void *);$/;"	m	struct:bufferevent_filtered	file:
free_getaddrinfo_request	evdns.c	/^free_getaddrinfo_request(struct evdns_getaddrinfo_request *data)$/;"	f	file:
free_lock_unlock_profiler	test/regress_bufferevent.c	/^static void free_lock_unlock_profiler(struct basic_test_data *data)$/;"	f	file:
free_on_cb	listener.c	/^	unsigned free_on_cb:1;$/;"	m	struct:accepting_socket	file:
freeze_end	evbuffer-internal.h	/^	unsigned freeze_end : 1;$/;"	m	struct:evbuffer
freeze_start	evbuffer-internal.h	/^	unsigned freeze_start : 1;$/;"	m	struct:evbuffer
frob_socket	test/bench_httpclient.c	/^frob_socket(evutil_socket_t sock)$/;"	f	file:
fstat	buffer.c	3277;"	d	file:
fstat	evutil.c	96;"	d	file:
fstat	sample/http-server.c	55;"	d	file:
func_add_hook	libtool	/^func_add_hook ()$/;"	f
func_add_hook	ltmain.sh	/^func_add_hook ()$/;"	f
func_append	libtool	/^  func_append ()$/;"	f
func_append	ltmain.sh	/^  func_append ()$/;"	f
func_append_quoted	libtool	/^  func_append_quoted ()$/;"	f
func_append_quoted	ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_uniq	libtool	/^func_append_uniq ()$/;"	f
func_append_uniq	ltmain.sh	/^func_append_uniq ()$/;"	f
func_arith	libtool	/^  func_arith ()$/;"	f
func_arith	ltmain.sh	/^  func_arith ()$/;"	f
func_cc_basename	config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	configure	/^func_cc_basename ()$/;"	f
func_cc_basename	libtool	/^func_cc_basename ()$/;"	f
func_check_prog_grep	libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_sed	libtool	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dll_def_p	libtool	/^func_dll_def_p ()$/;"	f
func_dll_def_p	ltmain.sh	/^func_dll_def_p ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_infix_1	libtool	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_executable_p	libtool	/^func_executable_p ()$/;"	f
func_executable_p	ltmain.sh	/^func_executable_p ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generated_by_libtool_p	libtool	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_hookable	libtool	/^func_hookable ()$/;"	f
func_hookable	ltmain.sh	/^func_hookable ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	libtool	/^  func_len ()$/;"	f
func_len	ltmain.sh	/^  func_len ()$/;"	f
func_lo2o	libtool	/^  func_lo2o ()$/;"	f
func_lo2o	ltmain.sh	/^  func_lo2o ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_ver	libtool	/^func_lt_ver ()$/;"	f
func_lt_ver	ltmain.sh	/^func_lt_ver ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_munge_path_list	config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	libtool	/^func_munge_path_list ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_notquiet	libtool	/^func_notquiet ()$/;"	f
func_notquiet	ltmain.sh	/^func_notquiet ()$/;"	f
func_options	libtool	/^func_options ()$/;"	f
func_options	ltmain.sh	/^func_options ()$/;"	f
func_options_prep	libtool	/^func_options_prep ()$/;"	f
func_options_prep	ltmain.sh	/^func_options_prep ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_options	libtool	/^func_parse_options ()$/;"	f
func_parse_options	ltmain.sh	/^func_parse_options ()$/;"	f
func_path_progs	libtool	/^func_path_progs ()$/;"	f
func_path_progs	ltmain.sh	/^func_path_progs ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_remove_hook	libtool	/^func_remove_hook ()$/;"	f
func_remove_hook	ltmain.sh	/^func_remove_hook ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_require_term_colors	libtool	/^func_require_term_colors ()$/;"	f
func_require_term_colors	ltmain.sh	/^func_require_term_colors ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_run_hooks	libtool	/^func_run_hooks ()$/;"	f
func_run_hooks	ltmain.sh	/^func_run_hooks ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_sort_ver	libtool	/^func_sort_ver ()$/;"	f
func_sort_ver	ltmain.sh	/^func_sort_ver ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_equals	libtool	/^  func_split_equals ()$/;"	f
func_split_equals	ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_short_opt	libtool	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_stripname	libtool	/^  func_stripname ()$/;"	f
func_stripname	ltmain.sh	/^  func_stripname ()$/;"	f
func_suncc_cstd_abi	libtool	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_usage_message	libtool	/^func_usage_message ()$/;"	f
func_usage_message	ltmain.sh	/^func_usage_message ()$/;"	f
func_validate_options	libtool	/^func_validate_options ()$/;"	f
func_validate_options	ltmain.sh	/^func_validate_options ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warn_and_continue	libtool	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	libtool	/^  func_xform ()$/;"	f
func_xform	ltmain.sh	/^  func_xform ()$/;"	f
gai_callback	sample/dns-example.c	/^gai_callback(int err, struct evutil_addrinfo *ai, void *arg)$/;"	f	file:
gai_cb	test/regress_dns.c	/^gai_cb(int err, struct evutil_addrinfo *res, void *ptr)$/;"	f	file:
gai_outcome	test/regress_dns.c	/^struct gai_outcome {$/;"	s	file:
gaic_cancel_request_cb	test/regress_dns.c	/^gaic_cancel_request_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
gaic_getaddrinfo_cb	test/regress_dns.c	/^gaic_getaddrinfo_cb(int result, struct evutil_addrinfo *res, void *arg)$/;"	f	file:
gaic_launch	test/regress_dns.c	/^gaic_launch(struct event_base *base, struct evdns_base *dns_base)$/;"	f	file:
gaic_request_status	test/regress_dns.c	/^struct gaic_request_status {$/;"	s	file:
gaic_server_cb	test/regress_dns.c	/^gaic_server_cb(struct evdns_server_request *req, void *arg)$/;"	f	file:
gencb	http-internal.h	/^	void (*gencb)(struct evhttp_request *req, void *);$/;"	m	struct:evhttp
gencbarg	http-internal.h	/^	void *gencbarg;$/;"	m	struct:evhttp
generation	evthread_win32.c	/^	int generation;$/;"	m	struct:evthread_win32_cond	file:
generic_dns_callback	test/regress_dns.c	/^generic_dns_callback(int result, char type, int count, int ttl, void *addresses,$/;"	f	file:
generic_dns_callback_result	test/regress_dns.c	/^struct generic_dns_callback_result {$/;"	s	file:
get_cb	sample/http-connect.c	/^static void get_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
get_common_timeout_list	event.c	/^        get_common_timeout_list(struct event_base *base, const struct timeval *tv)$/;"	f	file:
get_cpu_usage	test/test-changelist.c	/^get_cpu_usage(struct cpu_usage_timer *timer, double *secElapsedOut,$/;"	f	file:
get_deferred_queue	http.c	1107;"	d	file:
get_extension_function	event_iocp.c	/^get_extension_function(SOCKET s, const GUID *which_fn)$/;"	f	file:
get_n_bytes_readable_on_socket	buffer.c	/^get_n_bytes_readable_on_socket(evutil_socket_t fd)$/;"	f	file:
get_page_size	buffer.c	/^get_page_size(void)$/;"	f	file:
get_ssl_ctx	test/regress_ssl.c	/^get_ssl_ctx(void)$/;"	f
getaddrinfo_cb	test/regress_dns.c	/^getaddrinfo_cb(int err, struct evutil_addrinfo *res, void *ptr)$/;"	f	file:
getaddrinfo_ipv4_answered	evdns.c	/^	int getaddrinfo_ipv4_answered;$/;"	m	struct:evdns_base	file:
getaddrinfo_ipv4_timeouts	evdns.c	/^	int getaddrinfo_ipv4_timeouts;$/;"	m	struct:evdns_base	file:
getaddrinfo_ipv6_answered	evdns.c	/^	int getaddrinfo_ipv6_answered;$/;"	m	struct:evdns_base	file:
getaddrinfo_ipv6_timeouts	evdns.c	/^	int getaddrinfo_ipv6_timeouts;$/;"	m	struct:evdns_base	file:
getaddrinfo_merge_err	evdns.c	/^getaddrinfo_merge_err(int e1, int e2)$/;"	f	file:
getaddrinfo_subrequest	evdns.c	/^struct getaddrinfo_subrequest {$/;"	s	file:
getbase	listener.c	/^	struct event_base *(*getbase)(struct evconnlistener *);$/;"	m	struct:evconnlistener_ops	typeref:struct:evconnlistener_ops::getbase	file:
getfd	listener.c	/^	evutil_socket_t (*getfd)(struct evconnlistener *);$/;"	m	struct:evconnlistener_ops	file:
getpid	arc4random.c	84;"	d	file:
getstate	test/regress_zlib.c	/^getstate(enum bufferevent_flush_mode state)$/;"	f	file:
gettime	event.c	/^gettime(struct event_base *base, struct timeval *tp)$/;"	f	file:
global_base	test/regress.c	/^struct event_base *global_base;$/;"	v	typeref:struct:event_base
global_getaddrinfo_allow_skew	evdns.c	/^	struct timeval global_getaddrinfo_allow_skew;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::timeval	file:
global_good_nameservers	evdns.c	/^	int global_good_nameservers;$/;"	m	struct:evdns_base	file:
global_max_nameserver_timeout	evdns.c	/^	int global_max_nameserver_timeout;$/;"	m	struct:evdns_base	file:
global_max_reissues	evdns.c	/^	int global_max_reissues;  \/* a reissue occurs when we get some errors from the server *\/$/;"	m	struct:evdns_base	file:
global_max_requests_inflight	evdns.c	/^	int global_max_requests_inflight;$/;"	m	struct:evdns_base	file:
global_max_retransmits	evdns.c	/^	int global_max_retransmits;  \/* number of times we'll retransmit a request which timed out *\/$/;"	m	struct:evdns_base	file:
global_nameserver_probe_initial_timeout	evdns.c	/^	struct timeval global_nameserver_probe_initial_timeout;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::timeval	file:
global_outgoing_address	evdns.c	/^	struct sockaddr_storage global_outgoing_address;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::sockaddr_storage	file:
global_outgoing_addrlen	evdns.c	/^	ev_socklen_t global_outgoing_addrlen;$/;"	m	struct:evdns_base	file:
global_randomize_case	evdns.c	/^	int global_randomize_case;$/;"	m	struct:evdns_base	file:
global_requests_inflight	evdns.c	/^	int global_requests_inflight;$/;"	m	struct:evdns_base	file:
global_requests_waiting	evdns.c	/^	int global_requests_waiting;$/;"	m	struct:evdns_base	file:
global_search_state	evdns.c	/^	struct search_state *global_search_state;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::search_state	file:
global_timeout	evdns.c	/^	struct timeval global_timeout;	\/* 5 seconds by default *\/$/;"	m	struct:evdns_base	typeref:struct:evdns_base::timeval	file:
got_active	test/check-dumpevents.py	/^got_active = set(text[got_active_pos+1:])$/;"	v
got_active_pos	test/check-dumpevents.py	/^    got_active_pos = text.index("Active events:\\n")$/;"	v
got_close	test/regress_ssl.c	/^static int got_close = 0;$/;"	v	file:
got_eof	bufferevent_filter.c	/^	unsigned got_eof;$/;"	m	struct:bufferevent_filtered	file:
got_error	test/regress_ssl.c	/^static int got_error = 0;$/;"	v	file:
got_inserted	test/check-dumpevents.py	/^got_inserted = set(text[got_inserted_pos+1:got_active_pos])$/;"	v
got_inserted_pos	test/check-dumpevents.py	/^    got_inserted_pos = text.index("Inserted events:\\n")$/;"	v
got_readcb	test/regress_iocp.c	/^static int got_readcb = 0;$/;"	v	file:
got_sigchld	test/regress_thread.c	/^static int got_sigchld = 0;$/;"	v	file:
got_timeout	test/regress_ssl.c	/^static int got_timeout = 0;$/;"	v	file:
gotclosecb	test/regress_http.c	/^	int gotclosecb: 1;$/;"	m	struct:terminate_state	file:
group	bufferevent-internal.h	/^	struct bufferevent_rate_limit_group *group;$/;"	m	struct:bufferevent_rate_limit	typeref:struct:bufferevent_rate_limit::bufferevent_rate_limit_group
group	test/test-ratelim.c	/^struct bufferevent_rate_limit_group *group = NULL;$/;"	v	typeref:struct:bufferevent_rate_limit_group
group_bucket_cfg	test/test-ratelim.c	/^static struct ev_token_bucket_cfg *group_bucket_cfg = NULL;$/;"	v	typeref:struct:ev_token_bucket_cfg	file:
group_drain_cb	test/test-ratelim.c	/^group_drain_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
grow	evport.c	/^grow(struct evport_data *data, int min_events)$/;"	f	file:
grow_fd_sets	win32select.c	/^grow_fd_sets(struct win32op *op, unsigned new_num_fds)$/;"	f	file:
guess_content_type	sample/http-server.c	/^guess_content_type(const char *path)$/;"	f	file:
had_ipv4_address	evutil.c	/^static int have_checked_interfaces, had_ipv4_address, had_ipv6_address;$/;"	v	file:
had_ipv6_address	evutil.c	/^static int have_checked_interfaces, had_ipv4_address, had_ipv6_address;$/;"	v	file:
handle	evdns.c	/^	struct evdns_request *handle;$/;"	m	struct:deferred_reply_callback	typeref:struct:deferred_reply_callback::evdns_request	file:
handle	evdns.c	/^	struct evdns_request *handle;$/;"	m	struct:request	typeref:struct:request::evdns_request	file:
handle_entry	event_iocp.c	/^handle_entry(OVERLAPPED *o, ULONG_PTR completion_key, DWORD nBytes, int ok)$/;"	f	file:
handle_option	test/test-ratelim.c	/^handle_option(int argc, char **argv, int *i, const struct option *opt)$/;"	f	file:
hash_cached_sock_errs	evutil.c	/^hash_cached_sock_errs(const struct cached_sock_errs_entry *e)$/;"	f	file:
hash_debug_entry	event.c	/^hash_debug_entry(const struct event_debug_entry *e)$/;"	f	file:
hashsocket	evmap.c	/^hashsocket(struct event_map_entry *e)$/;"	f	file:
have_answer	evdns.c	/^	unsigned int have_answer : 1;$/;"	m	struct:reply	file:
have_checked_interfaces	evutil.c	/^static int have_checked_interfaces, had_ipv4_address, had_ipv6_address;$/;"	v	file:
have_closed	test/regress.c	/^static int have_closed = 0;$/;"	v	file:
have_reply	evdns.c	/^	u8 have_reply;$/;"	m	struct:deferred_reply_callback	file:
head	evdns.c	/^	struct search_domain *head;$/;"	m	struct:search_state	typeref:struct:search_state::search_domain	file:
header_cb	include/event2/http_struct.h	/^	int (*header_cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
header_size	test/regress_bufferevent.c	/^	size_t header_size;$/;"	m	struct:bufferevent_filter_data_stuck	file:
headerdirect	event_rpcgen.py	/^headerdirect = []$/;"	v
headers_size	include/event2/http_struct.h	/^	size_t headers_size;$/;"	m	struct:evhttp_request
held_by	evthread.c	/^	unsigned long held_by; \/\/ 这个锁是被哪个线程所拥有$/;"	m	struct:debug_lock	file:
high	include/event2/bufferevent_struct.h	/^	size_t high;$/;"	m	struct:event_watermark
hints	evdns.c	/^	struct evutil_addrinfo hints;$/;"	m	struct:evdns_getaddrinfo_request	typeref:struct:evdns_getaddrinfo_request::evutil_addrinfo	file:
hook_meta	evrpc-internal.h	/^	struct evrpc_hook_meta *hook_meta;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evrpc_hook_meta
hook_meta	evrpc-internal.h	/^	struct evrpc_hook_meta *hook_meta;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evrpc_hook_meta
hook_pause_cb_called	test/regress_rpc.c	/^static int hook_pause_cb_called=0;$/;"	v	file:
host	Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	http.c	/^	char *host; \/* hostname, IP address, or NULL *\/$/;"	m	struct:evhttp_uri	file:
host_alias	Makefile	/^host_alias = $/;"	m
host_cache	include/event2/http_struct.h	/^	char *host_cache;$/;"	m	struct:evhttp_request
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
hostmatch	sample/hostcheck.c	/^static int hostmatch(const char *hostname, const char *pattern)$/;"	f	file:
hostname	evdns.c	/^	char hostname[1];$/;"	m	struct:hosts_entry	file:
hosts_entry	evdns.c	/^struct hosts_entry {$/;"	s	file:
ht_improve_hash_	ht-internal.h	/^ht_improve_hash_(unsigned h)$/;"	f
ht_string_hash_	ht-internal.h	/^ht_string_hash_(const char *s)$/;"	f
html_replace	http.c	/^html_replace(const char ch, const char **escaped)$/;"	f	file:
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
http	test/regress_http.c	/^	struct evhttp *http;$/;"	m	struct:http_server	typeref:struct:http_server::evhttp	file:
http_allowed_methods_eventcb	test/regress_http.c	/^http_allowed_methods_eventcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_allowed_methods_test	test/regress_http.c	/^http_allowed_methods_test(void *arg)$/;"	f	file:
http_autofree_connection_test	test/regress_http.c	/^http_autofree_connection_test(void *arg)$/;"	f	file:
http_bad_header_test	test/regress_http.c	/^http_bad_header_test(void *ptr)$/;"	f	file:
http_bad_request_test	test/regress_http.c	/^http_bad_request_test(void *arg)$/;"	f	file:
http_badreq_cb	test/regress_http.c	/^http_badreq_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_badreq_errorcb	test/regress_http.c	/^http_badreq_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_badreq_readcb	test/regress_http.c	/^http_badreq_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_badreq_successcb	test/regress_http.c	/^http_badreq_successcb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_base_test	test/regress_http.c	/^http_base_test(void *ptr)$/;"	f	file:
http_basic_cb	test/bench_http.c	/^http_basic_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_basic_cb	test/regress_http.c	/^http_basic_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_basic_test	test/regress_http.c	/^static void http_basic_test(void *arg)$/;"	f	file:
http_basic_test_impl	test/regress_http.c	/^http_basic_test_impl(void *arg, int ssl)$/;"	f	file:
http_bind	test/regress_http.c	/^http_bind(struct evhttp *myhttp, ev_uint16_t *pport, int mask)$/;"	f	file:
http_cancel_test	test/regress_http.c	/^http_cancel_test(void *arg)$/;"	f	file:
http_cancel_test_bad_request_new	test/regress_http.c	/^http_cancel_test_bad_request_new(enum http_cancel_test_type type,$/;"	f	file:
http_cancel_test_type	test/regress_http.c	/^enum http_cancel_test_type {$/;"	g	file:
http_chunk_out_test	test/regress_http.c	/^static void http_chunk_out_test(void *arg)$/;"	f	file:
http_chunk_out_test_impl	test/regress_http.c	/^http_chunk_out_test_impl(void *arg, int ssl)$/;"	f	file:
http_chunked_cb	test/regress_http.c	/^http_chunked_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_chunked_errorcb	test/regress_http.c	/^http_chunked_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_chunked_readcb	test/regress_http.c	/^http_chunked_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_chunked_request_done	test/regress_http.c	/^http_chunked_request_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_chunked_trickle_cb	test/regress_http.c	/^http_chunked_trickle_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
http_chunked_writecb	test/regress_http.c	/^http_chunked_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_close_detection_	test/regress_http.c	/^http_close_detection_(struct basic_test_data *data, int with_delay)$/;"	f	file:
http_close_detection_delay_test	test/regress_http.c	/^http_close_detection_delay_test(void *arg)$/;"	f	file:
http_close_detection_test	test/regress_http.c	/^http_close_detection_test(void *arg)$/;"	f	file:
http_complete_write	test/regress_http.c	/^http_complete_write(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_connect	test/regress_http.c	/^http_connect(const char *address, ev_uint16_t port)$/;"	f	file:
http_connection_async_test	test/regress_http.c	/^http_connection_async_test(void *arg)$/;"	f	file:
http_connection_fail_done	test/regress_http.c	/^http_connection_fail_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_connection_fail_test	test/regress_http.c	/^static void http_connection_fail_test(void *arg)$/;"	f	file:
http_connection_fail_test_impl	test/regress_http.c	/^http_connection_fail_test_impl(void *arg, int ssl)$/;"	f	file:
http_connection_retry_conn_address_test	test/regress_http.c	/^static void http_connection_retry_conn_address_test(void *arg)$/;"	f	file:
http_connection_retry_conn_address_test_impl	test/regress_http.c	/^http_connection_retry_conn_address_test_impl(void *arg, int ssl)$/;"	f	file:
http_connection_retry_done	test/regress_http.c	/^http_connection_retry_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_connection_retry_test	test/regress_http.c	/^http_connection_retry_test(void *arg)$/;"	f	file:
http_connection_retry_test_basic	test/regress_http.c	/^http_connection_retry_test_basic(void *arg, const char *addr, struct evdns_base *dns_base, int ssl)$/;"	f	file:
http_connection_retry_test_impl	test/regress_http.c	/^http_connection_retry_test_impl(void *arg, int ssl)$/;"	f	file:
http_connection_test	test/regress_http.c	/^http_connection_test(void *arg)$/;"	f	file:
http_connection_test_	test/regress_http.c	/^http_connection_test_(struct basic_test_data *data, int persistent,$/;"	f	file:
http_data_length_constraints_test	test/regress_http.c	/^static void http_data_length_constraints_test(void *arg)$/;"	f	file:
http_data_length_constraints_test_done	test/regress_http.c	/^http_data_length_constraints_test_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_data_length_constraints_test_impl	test/regress_http.c	/^http_data_length_constraints_test_impl(void *arg, int read_on_write_error)$/;"	f	file:
http_delay_cb	test/regress_http.c	/^http_delay_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_delay_reply	test/regress_http.c	/^http_delay_reply(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_delete_cb	test/regress_http.c	/^http_delete_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_delete_test	test/regress_http.c	/^http_delete_test(void *arg)$/;"	f	file:
http_dispatcher_cb	test/regress_http.c	/^http_dispatcher_cb(struct evhttp_request *req, void *arg)$/;"	f
http_dispatcher_test	test/regress_http.c	/^http_dispatcher_test(void *arg)$/;"	f	file:
http_dispatcher_test_done	test/regress_http.c	/^http_dispatcher_test_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_do_cancel	test/regress_http.c	/^http_do_cancel(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_errorcb	test/regress_http.c	/^http_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_expectation_failed_done	test/regress_http.c	/^http_expectation_failed_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_failed_request_done	test/regress_http.c	/^http_failed_request_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_failure_readcb	test/regress_http.c	/^http_failure_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_failure_test	test/regress_http.c	/^http_failure_test(void *arg)$/;"	f	file:
http_fill_backlog	test/regress_http.c	/^http_fill_backlog(struct event_base *base, int port)$/;"	f	file:
http_free_evcons	test/regress_http.c	/^http_free_evcons(struct evhttp_connection **evcons)$/;"	f	file:
http_get_addr_test	test/regress_http.c	/^http_get_addr_test(void *arg)$/;"	f	file:
http_highport_test	test/regress_http.c	/^http_highport_test(void *arg)$/;"	f	file:
http_incomplete_errorcb	test/regress_http.c	/^http_incomplete_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
http_incomplete_readcb	test/regress_http.c	/^http_incomplete_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_incomplete_test	test/regress_http.c	/^static void http_incomplete_test(void *arg)$/;"	f	file:
http_incomplete_test_	test/regress_http.c	/^http_incomplete_test_(struct basic_test_data *data, int use_timeout, int ssl)$/;"	f	file:
http_incomplete_timeout_test	test/regress_http.c	/^static void http_incomplete_timeout_test(void *arg)$/;"	f	file:
http_incomplete_writecb	test/regress_http.c	/^http_incomplete_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_ipv6_for_domain_test	test/regress_http.c	/^http_ipv6_for_domain_test(void *arg)$/;"	f	file:
http_ipv6_for_domain_test_impl	test/regress_http.c	/^http_ipv6_for_domain_test_impl(void *arg, int family)$/;"	f	file:
http_large_cb	test/regress_http.c	/^http_large_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_large_delay_cb	test/regress_http.c	/^http_large_delay_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_large_entity_test_done	test/regress_http.c	/^http_large_entity_test_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_lingering_close_test	test/regress_http.c	/^static void http_lingering_close_test(void *arg)$/;"	f	file:
http_lingering_close_test_impl	test/regress_http.c	/^http_lingering_close_test_impl(void *arg, int lingering)$/;"	f	file:
http_make_web_server	test/regress_http.c	/^http_make_web_server(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_make_web_server_base	test/regress_http.c	/^static struct event_base *http_make_web_server_base=NULL;$/;"	v	typeref:struct:event_base	file:
http_multi_line_header_test	test/regress_http.c	/^http_multi_line_header_test(void *arg)$/;"	f	file:
http_negative_content_length_test	test/regress_http.c	/^http_negative_content_length_test(void *arg)$/;"	f	file:
http_no_write	test/regress_http.c	/^http_no_write(struct evbuffer *buffer, const struct evbuffer_cb_info *info, void *arg)$/;"	f	file:
http_non_lingering_close_test	test/regress_http.c	/^static void http_non_lingering_close_test(void *arg)$/;"	f	file:
http_on_complete_cb	test/regress_http.c	/^http_on_complete_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_on_complete_test	test/regress_http.c	/^http_on_complete_test(void *arg)$/;"	f	file:
http_parse_query_test	test/regress_http.c	/^http_parse_query_test(void *ptr)$/;"	f	file:
http_parse_uri_test	test/regress_http.c	/^http_parse_uri_test(void *ptr)$/;"	f	file:
http_persist_connection_test	test/regress_http.c	/^http_persist_connection_test(void *arg)$/;"	f	file:
http_post_cb	test/regress_http.c	/^http_post_cb(struct evhttp_request *req, void *arg)$/;"	f
http_post_test	test/regress_http.c	/^http_post_test(void *arg)$/;"	f	file:
http_postrequest_done	test/regress_http.c	/^http_postrequest_done(struct evhttp_request *req, void *arg)$/;"	f
http_primitives	test/regress_http.c	/^http_primitives(void *ptr)$/;"	f	file:
http_put_cb	test/regress_http.c	/^http_put_cb(struct evhttp_request *req, void *arg)$/;"	f
http_put_test	test/regress_http.c	/^http_put_test(void *arg)$/;"	f	file:
http_putrequest_done	test/regress_http.c	/^http_putrequest_done(struct evhttp_request *req, void *arg)$/;"	f
http_read_on_write_error_test	test/regress_http.c	/^static void http_read_on_write_error_test(void *arg)$/;"	f	file:
http_readcb	test/regress_http.c	/^http_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
http_ref_cb	test/bench_http.c	/^http_ref_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_req	evrpc-internal.h	/^	struct evhttp_request* http_req;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evhttp_request
http_req	include/event2/rpc_struct.h	/^	struct evhttp_request *http_req;$/;"	m	struct:evrpc_status	typeref:struct:evrpc_status::evhttp_request
http_request_bad	test/regress_http.c	/^http_request_bad(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_done	sample/https-client.c	/^http_request_done(struct evhttp_request *req, void *ctx)$/;"	f	file:
http_request_done	test/regress_http.c	/^http_request_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_empty_done	test/regress_http.c	/^http_request_empty_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_error_cb_with_cancel	test/regress_http.c	/^http_request_error_cb_with_cancel(enum evhttp_request_error error, void *arg)$/;"	f	file:
http_request_expect_error	test/regress_http.c	/^http_request_expect_error(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_get_addr_on_close	test/regress_http.c	/^http_request_get_addr_on_close(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
http_request_never_call	test/regress_http.c	/^http_request_never_call(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_no_action_done	test/regress_http.c	/^http_request_no_action_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_request_own_test	test/regress_http.c	/^http_request_own_test(void *arg)$/;"	f	file:
http_sent_cb	test/regress_http.c	/^http_sent_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
http_server	evrpc-internal.h	/^	struct evhttp* http_server;$/;"	m	struct:evrpc_base	typeref:struct:evrpc_base::evhttp
http_server	http-internal.h	/^	struct evhttp *http_server;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::evhttp
http_server	test/regress_http.c	/^struct http_server$/;"	s	file:
http_set_family_ipv4_test	test/regress_http.c	/^http_set_family_ipv4_test(void *arg)$/;"	f	file:
http_set_family_ipv6_test	test/regress_http.c	/^http_set_family_ipv6_test(void *arg)$/;"	f	file:
http_set_family_test	test/regress_http.c	/^http_set_family_test(void *arg)$/;"	f	file:
http_setup	test/regress_http.c	/^http_setup(ev_uint16_t *pport, struct event_base *base, int mask)$/;"	f	file:
http_setup	test/regress_rpc.c	/^http_setup(ev_uint16_t *pport)$/;"	f	file:
http_simple_test	test/regress_http.c	/^static void http_simple_test(void *arg)$/;"	f	file:
http_simple_test_impl	test/regress_http.c	/^http_simple_test_impl(void *arg, int ssl, int dirty)$/;"	f	file:
http_stream_in_cancel_chunk	test/regress_http.c	/^http_stream_in_cancel_chunk(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_cancel_done	test/regress_http.c	/^http_stream_in_cancel_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_cancel_test	test/regress_http.c	/^http_stream_in_cancel_test(void *arg)$/;"	f	file:
http_stream_in_chunk	test/regress_http.c	/^http_stream_in_chunk(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_done	test/regress_http.c	/^http_stream_in_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_stream_in_test	test/regress_http.c	/^http_stream_in_test(void *arg)$/;"	f	file:
http_stream_in_test_	test/regress_http.c	/^http_stream_in_test_(struct basic_test_data *data, char const *url,$/;"	f	file:
http_stream_out_test	test/regress_http.c	/^static void http_stream_out_test(void *arg)$/;"	f	file:
http_stream_out_test_impl	test/regress_http.c	/^http_stream_out_test_impl(void *arg, int ssl)$/;"	f	file:
http_terminate_chunked_oneshot_test	test/regress_http.c	/^http_terminate_chunked_oneshot_test(void *arg)$/;"	f	file:
http_terminate_chunked_test	test/regress_http.c	/^http_terminate_chunked_test(void *arg)$/;"	f	file:
http_terminate_chunked_test_impl	test/regress_http.c	/^http_terminate_chunked_test_impl(void *arg, int oneshot)$/;"	f	file:
http_testcases	test/regress_http.c	/^struct testcase_t http_testcases[] = {$/;"	v	typeref:struct:testcase_t
http_timed_out_request_done	test/regress_http.c	/^http_timed_out_request_done(struct evhttp_request *req, void *arg)$/;"	f	file:
http_uriencode_test	test/regress_http.c	/^http_uriencode_test(void *ptr)$/;"	f	file:
http_virtual_host_test	test/regress_http.c	/^http_virtual_host_test(void *arg)$/;"	f	file:
http_write_during_read	test/regress_http.c	/^http_write_during_read(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
http_write_during_read_test	test/regress_http.c	/^static void http_write_during_read_test(void *arg)$/;"	f	file:
http_write_during_read_test_impl	test/regress_http.c	/^http_write_during_read_test_impl(void *arg, int ssl)$/;"	f	file:
http_writecb	test/regress_http.c	/^http_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
https_basic_test	test/regress_http.c	/^static void https_basic_test(void *arg)$/;"	f	file:
https_bev	test/regress_http.c	/^https_bev(struct event_base *base, void *arg)$/;"	f	file:
https_chunk_out_test	test/regress_http.c	/^static void https_chunk_out_test(void *arg)$/;"	f	file:
https_connection_fail_test	test/regress_http.c	/^static void https_connection_fail_test(void *arg)$/;"	f	file:
https_connection_retry_conn_address_test	test/regress_http.c	/^static void https_connection_retry_conn_address_test(void *arg)$/;"	f	file:
https_connection_retry_test	test/regress_http.c	/^static void https_connection_retry_test(void *arg)$/;"	f	file:
https_connection_test	test/regress_http.c	/^static void https_connection_test(void *arg)$/;"	f	file:
https_filter_basic_test	test/regress_http.c	/^static void https_filter_basic_test(void *arg)$/;"	f	file:
https_filter_chunk_out_test	test/regress_http.c	/^static void https_filter_chunk_out_test(void *arg)$/;"	f	file:
https_incomplete_test	test/regress_http.c	/^static void https_incomplete_test(void *arg)$/;"	f	file:
https_incomplete_timeout_test	test/regress_http.c	/^static void https_incomplete_timeout_test(void *arg)$/;"	f	file:
https_persist_connection_test	test/regress_http.c	/^static void https_persist_connection_test(void *arg)$/;"	f	file:
https_simple_dirty_test	test/regress_http.c	/^static void https_simple_dirty_test(void *arg)$/;"	f	file:
https_simple_test	test/regress_http.c	/^static void https_simple_test(void *arg)$/;"	f	file:
https_stream_out_test	test/regress_http.c	/^static void https_stream_out_test(void *arg)$/;"	f	file:
https_write_during_read_test	test/regress_http.c	/^static void https_write_during_read_test(void *arg)$/;"	f	file:
i	arc4random.c	/^	unsigned char i;$/;"	m	struct:arc4_stream	file:
i	test/regress_http.c	/^	int i;$/;"	m	struct:chunk_req_state	file:
idx_info	win32select.c	/^struct idx_info {$/;"	s	file:
idxplus1	evmap.c	/^	int idxplus1; \/* this is the index +1, so that memset(0) will make it$/;"	m	struct:event_changelist_fdinfo	file:
idxplus1	poll.c	/^	int idxplus1;$/;"	m	struct:pollidx	file:
ignore_cert	sample/https-client.c	/^static int ignore_cert = 0;$/;"	v	file:
ignore_log_cb	test/regress_main.c	/^ignore_log_cb(int s, const char *msg)$/;"	f	file:
immediate_called_twice_cb	test/regress.c	/^immediate_called_twice_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
in	bufferevent-internal.h	/^		struct sockaddr_in in;$/;"	m	union:bufferevent_private::__anon10	typeref:struct:bufferevent_private::__anon10::sockaddr_in
in6	bufferevent-internal.h	/^		struct sockaddr_in6 in6;$/;"	m	union:bufferevent_private::__anon10	typeref:struct:bufferevent_private::__anon10::sockaddr_in6
in6_addr	ipv6-internal.h	/^struct in6_addr {$/;"	s
in_hooks	evrpc-internal.h	/^	struct evrpc_hook_list in_hooks;$/;"	m	struct:evrpc_hooks_	typeref:struct:evrpc_hooks_::evrpc_hook_list
in_legacy_test_wrapper	test/regress_main.c	/^int in_legacy_test_wrapper = 0;$/;"	v
in_tinytest_main	test/tinytest.c	/^static int in_tinytest_main = 0; \/**< true if we're in tinytest_main().*\/$/;"	v	file:
inbuf_cb	bufferevent_filter.c	/^	struct evbuffer_cb_entry *inbuf_cb;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::evbuffer_cb_entry	file:
include_HEADERS	Makefile	/^include_HEADERS = $(EVENT1_HDRS)$/;"	m
include_event2_HEADERS	Makefile	/^include_event2_HEADERS = $(EVENT2_EXPORT)$/;"	m
include_event2dir	Makefile	/^include_event2dir = $(includedir)\/event2$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
incr_arg_cb	test/regress.c	/^static void incr_arg_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
incref_and_lock	bufferevent_pair.c	/^incref_and_lock(struct bufferevent *b)$/;"	f	file:
infilter_calls	test/regress_zlib.c	/^static int infilter_calls;$/;"	v	file:
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
informational_phrases	http.c	/^static const char *informational_phrases[] = {$/;"	v	file:
init	event-internal.h	/^	void *(*init)(struct event_base *);$/;"	m	struct:eventop
init_bio_counts	bufferevent_openssl.c	/^init_bio_counts(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
init_extension_functions	event_iocp.c	/^init_extension_functions(struct win32_extension_fns *ext)$/;"	f	file:
init_ssl	test/regress_ssl.c	/^init_ssl(void)$/;"	f
initial_retry_timeout	http-internal.h	/^	struct timeval initial_retry_timeout; \/* Timeout for low long to wait$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::timeval
inline	util-internal.h	55;"	d
input	include/event2/bufferevent_struct.h	/^	struct evbuffer *input;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::evbuffer
input_buffer	include/event2/http_struct.h	/^	struct evbuffer *input_buffer;	\/* read data *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evbuffer
input_headers	include/event2/http_struct.h	/^	struct evkeyvalq *input_headers;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evkeyvalq
input_hooks	evrpc-internal.h	68;"	d
insert_common_timeout_inorder	event.c	/^insert_common_timeout_inorder(struct common_timeout_list *ctl,$/;"	f	file:
install_sh	Makefile	/^install_sh = ${SHELL} \/root\/rtu\/otdr\/crosstool\/cheatsheet\/ops_doc-master\/Service\/libevent\/libevent-2.1.8-stable-note\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
internal_	include/event2/buffer.h	/^    } internal_;$/;"	m	struct:evbuffer_ptr	typeref:struct:evbuffer_ptr::__anon9
internal_error_table	test/regress_dns.c	/^static struct regress_dns_server_table internal_error_table[] = {$/;"	v	typeref:struct:regress_dns_server_table	file:
io	event-internal.h	/^	struct event_io_map io;$/;"	m	struct:event_base	typeref:struct:event_base::event_io_map
iocp	event-internal.h	/^	struct event_iocp_port *iocp;$/;"	m	struct:event_base	typeref:struct:event_base::event_iocp_port
iocp_callback	iocp-internal.h	/^typedef void (*iocp_callback)(struct event_overlapped *, ev_uintptr_t, ev_ssize_t, int success);$/;"	t
iocp_listener_destroy	listener.c	/^iocp_listener_destroy(struct evconnlistener *lev)$/;"	f	file:
iocp_listener_disable	listener.c	/^iocp_listener_disable(struct evconnlistener *lev)$/;"	f	file:
iocp_listener_disable_impl	listener.c	/^iocp_listener_disable_impl(struct evconnlistener *lev, int shutdown)$/;"	f	file:
iocp_listener_enable	listener.c	/^iocp_listener_enable(struct evconnlistener *lev)$/;"	f	file:
iocp_listener_event_add	listener.c	/^iocp_listener_event_add(struct evconnlistener_iocp *lev)$/;"	f	file:
iocp_listener_event_del	listener.c	/^iocp_listener_event_del(struct evconnlistener_iocp *lev)$/;"	f	file:
iocp_listener_getbase	listener.c	/^iocp_listener_getbase(struct evconnlistener *lev)$/;"	f	file:
iocp_listener_getfd	listener.c	/^iocp_listener_getfd(struct evconnlistener *lev)$/;"	f	file:
iocp_testcases	test/regress_iocp.c	/^struct testcase_t iocp_testcases[] = {$/;"	v	typeref:struct:testcase_t
iov_base	include/event2/buffer.h	/^    void *iov_base;$/;"	m	struct:evbuffer_iovec
iov_len	include/event2/buffer.h	/^    size_t iov_len;$/;"	m	struct:evbuffer_iovec
ipv4_entries	test/regress_util.c	/^} ipv4_entries[] = {$/;"	v	typeref:struct:ipv4_entry	file:
ipv4_entry	test/regress_util.c	/^static struct ipv4_entry {$/;"	s	file:
ipv4_request	evdns.c	/^	struct getaddrinfo_subrequest ipv4_request;$/;"	m	struct:evdns_getaddrinfo_request	typeref:struct:evdns_getaddrinfo_request::getaddrinfo_subrequest	file:
ipv6_entries	test/regress_util.c	/^} ipv6_entries[] = {$/;"	v	typeref:struct:ipv6_entry	file:
ipv6_entry	test/regress_util.c	/^static struct ipv6_entry {$/;"	s	file:
ipv6_request	evdns.c	/^	struct getaddrinfo_subrequest ipv6_request;$/;"	m	struct:evdns_getaddrinfo_request	typeref:struct:evdns_getaddrinfo_request::getaddrinfo_subrequest	file:
ipv6_search_table	test/regress_http.c	/^static struct regress_dns_server_table ipv6_search_table[] = {$/;"	v	typeref:struct:regress_dns_server_table	file:
is_common_timeout	event.c	/^is_common_timeout(const struct timeval *tv,$/;"	f	file:
is_loopback	test/regress_util.c	/^	int is_loopback;$/;"	m	struct:sa_pred_ent	file:
is_mapping	evbuffer-internal.h	/^	unsigned is_mapping : 1;$/;"	m	struct:evbuffer_file_segment
is_name	evdns.c	/^	char is_name; \/* True iff data is a label *\/$/;"	m	struct:server_reply_item	file:
is_notify_pending	event-internal.h	/^	int is_notify_pending;$/;"	m	struct:event_base
is_overlapped	evbuffer-internal.h	/^	unsigned is_overlapped : 1;$/;"	m	struct:evbuffer
is_same_common_timeout	event.c	/^is_same_common_timeout(const struct timeval *tv1, const struct timeval *tv2)$/;"	f	file:
isbool	test/test-ratelim.c	/^	const char *name; int *ptr; int min; int isbool;$/;"	m	struct:option	file:
j	arc4random.c	/^	unsigned char j;$/;"	m	struct:arc4_stream	file:
kerneltimeBegin	test/test-changelist.c	/^	FILETIME kerneltimeBegin;$/;"	m	struct:cpu_usage_timer	file:
key	evrpc-internal.h	/^	char *key;$/;"	m	struct:evrpc_meta
key	include/event2/keyvalq_struct.h	/^	char *key;$/;"	m	struct:evkeyval
keys	test/regress_iocp.c	/^	uintptr_t keys[MAX_CALLS];$/;"	m	struct:dummy_overlapped	file:
kind	include/event2/http_struct.h	/^	enum evhttp_request_kind kind;$/;"	m	struct:evhttp_request	typeref:enum:evhttp_request::evhttp_request_kind
kq	kqueue.c	/^	int kq;$/;"	m	struct:kqop	file:
kq_build_changes_list	kqueue.c	/^kq_build_changes_list(const struct event_changelist *changelist,$/;"	f	file:
kq_dealloc	kqueue.c	/^kq_dealloc(struct event_base *base)$/;"	f	file:
kq_dispatch	kqueue.c	/^kq_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
kq_grow_events	kqueue.c	/^kq_grow_events(struct kqop *kqop, size_t new_size)$/;"	f	file:
kq_init	kqueue.c	/^kq_init(struct event_base *base)$/;"	f	file:
kq_setup_kevent	kqueue.c	/^kq_setup_kevent(struct kevent *out, evutil_socket_t fd, int filter, short change)$/;"	f	file:
kq_sig_add	kqueue.c	/^kq_sig_add(struct event_base *base, int nsignal, short old, short events, void *p)$/;"	f	file:
kq_sig_del	kqueue.c	/^kq_sig_del(struct event_base *base, int nsignal, short old, short events, void *p)$/;"	f	file:
kqop	kqueue.c	/^struct kqop {$/;"	s	file:
kqop_free	kqueue.c	/^kqop_free(struct kqop *kqop)$/;"	f	file:
kqops	kqueue.c	/^const struct eventop kqops = {$/;"	v	typeref:struct:eventop
kqsigops	kqueue.c	/^static const struct eventop kqsigops = {$/;"	v	typeref:struct:eventop	file:
labels	evdns.c	/^	struct dnslabel_entry labels[MAX_LABELS];$/;"	m	struct:dnslabel_table	typeref:struct:dnslabel_table::dnslabel_entry	file:
last	evbuffer-internal.h	/^	struct evbuffer_chain *last;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
last_tick_count	time-internal.h	/^	ev_uint64_t last_tick_count;$/;"	m	struct:evutil_monotonic_timer
last_time	time-internal.h	/^	struct timeval last_time;$/;"	m	struct:evutil_monotonic_timer	typeref:struct:evutil_monotonic_timer::timeval
last_updated	ratelim-internal.h	/^	ev_uint32_t last_updated;$/;"	m	struct:ev_token_bucket
last_updated_clock_diff	event-internal.h	/^	time_t last_updated_clock_diff;$/;"	m	struct:event_base
last_with_datap	evbuffer-internal.h	/^	struct evbuffer_chain **last_with_datap;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
last_write	bufferevent_openssl.c	/^	ev_ssize_t last_write;$/;"	m	struct:bufferevent_openssl	file:
last_wrote_at	test/regress_bufferevent.c	/^	struct timeval last_wrote_at;$/;"	m	struct:timeout_cb_result	typeref:struct:timeout_cb_result::timeval	file:
lasttime	sample/time-test.c	/^struct timeval lasttime;$/;"	v	typeref:struct:timeval
launch_request	test/bench_httpclient.c	/^launch_request(void)$/;"	f	file:
legacy_setup	test/regress_main.c	/^const struct testcase_setup_t legacy_setup = {$/;"	v	typeref:struct:testcase_setup_t
legacy_test_cleanup	test/regress_main.c	/^legacy_test_cleanup(const struct testcase_t *testcase, void *ptr)$/;"	f	file:
legacy_test_fn	test/regress.h	/^	void (*legacy_test_fn)(void);$/;"	m	struct:basic_test_data
legacy_test_setup	test/regress_main.c	/^legacy_test_setup(const struct testcase_t *testcase)$/;"	f	file:
len	evdns.c	/^	int len;$/;"	m	struct:search_domain	file:
length	evbuffer-internal.h	/^	ev_off_t length;$/;"	m	struct:evbuffer_file_segment
lev	listener.c	/^	struct evconnlistener_iocp *lev;$/;"	m	struct:accepting_socket	typeref:struct:accepting_socket::evconnlistener_iocp	file:
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = $(LIBEVENT_LIBS_LA)$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libevent_core_la_DEPENDENCIES	Makefile	/^libevent_core_la_DEPENDENCIES =  $(am__DEPENDENCIES_1)$/;"	m
libevent_core_la_LDFLAGS	Makefile	/^libevent_core_la_LDFLAGS = $(GENERIC_LDFLAGS)$/;"	m
libevent_core_la_LIBADD	Makefile	/^libevent_core_la_LIBADD =  $(SYS_LIBS)$/;"	m
libevent_core_la_LINK	Makefile	/^libevent_core_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
libevent_core_la_OBJECTS	Makefile	/^libevent_core_la_OBJECTS = $(am_libevent_core_la_OBJECTS)$/;"	m
libevent_core_la_SOURCES	Makefile	/^libevent_core_la_SOURCES = $(CORE_SRC)$/;"	m
libevent_extra_la_DEPENDENCIES	Makefile	/^libevent_extra_la_DEPENDENCIES = $(am__DEPENDENCIES_2) \\$/;"	m
libevent_extra_la_LDFLAGS	Makefile	/^libevent_extra_la_LDFLAGS = $(GENERIC_LDFLAGS)$/;"	m
libevent_extra_la_LIBADD	Makefile	/^libevent_extra_la_LIBADD = $(MAYBE_CORE) $(SYS_LIBS)$/;"	m
libevent_extra_la_LINK	Makefile	/^libevent_extra_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
libevent_extra_la_OBJECTS	Makefile	/^libevent_extra_la_OBJECTS = $(am_libevent_extra_la_OBJECTS)$/;"	m
libevent_extra_la_SOURCES	Makefile	/^libevent_extra_la_SOURCES = $(EXTRAS_SRC)$/;"	m
libevent_global_shutdown	event.c	/^libevent_global_shutdown(void)$/;"	f
libevent_la_DEPENDENCIES	Makefile	/^libevent_la_DEPENDENCIES =  $(am__DEPENDENCIES_1)$/;"	m
libevent_la_LDFLAGS	Makefile	/^libevent_la_LDFLAGS = $(GENERIC_LDFLAGS)$/;"	m
libevent_la_LIBADD	Makefile	/^libevent_la_LIBADD =  $(SYS_LIBS)$/;"	m
libevent_la_LINK	Makefile	/^libevent_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libevent_la_OBJECTS	Makefile	/^libevent_la_OBJECTS = $(am_libevent_la_OBJECTS)$/;"	m
libevent_la_SOURCES	Makefile	/^libevent_la_SOURCES = $(CORE_SRC) $(EXTRAS_SRC)$/;"	m
libevent_openssl_la_CPPFLAGS	Makefile	/^libevent_openssl_la_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)$/;"	m
libevent_openssl_la_DEPENDENCIES	Makefile	/^libevent_openssl_la_DEPENDENCIES =  \\$/;"	m
libevent_openssl_la_LDFLAGS	Makefile	/^libevent_openssl_la_LDFLAGS = $(GENERIC_LDFLAGS)$/;"	m
libevent_openssl_la_LIBADD	Makefile	/^libevent_openssl_la_LIBADD = $(MAYBE_CORE) $(OPENSSL_LIBS)$/;"	m
libevent_openssl_la_LINK	Makefile	/^libevent_openssl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
libevent_openssl_la_OBJECTS	Makefile	/^libevent_openssl_la_OBJECTS = $(am_libevent_openssl_la_OBJECTS)$/;"	m
libevent_openssl_la_SOURCES	Makefile	/^libevent_openssl_la_SOURCES = bufferevent_openssl.c$/;"	m
libevent_pthreads_la_DEPENDENCIES	Makefile	/^libevent_pthreads_la_DEPENDENCIES =  \\$/;"	m
libevent_pthreads_la_LDFLAGS	Makefile	/^libevent_pthreads_la_LDFLAGS = $(GENERIC_LDFLAGS)$/;"	m
libevent_pthreads_la_LIBADD	Makefile	/^libevent_pthreads_la_LIBADD = $(MAYBE_CORE)$/;"	m
libevent_pthreads_la_LINK	Makefile	/^libevent_pthreads_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
libevent_pthreads_la_OBJECTS	Makefile	/^libevent_pthreads_la_OBJECTS = $(am_libevent_pthreads_la_OBJECTS)$/;"	m
libevent_pthreads_la_SOURCES	Makefile	/^libevent_pthreads_la_SOURCES = evthread_pthread.c$/;"	m
libevent_tests_running_in_debug_mode	test/regress_main.c	/^int libevent_tests_running_in_debug_mode = 0;$/;"	v
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libtool_options_prep	libtool	/^libtool_options_prep ()$/;"	f
libtool_options_prep	ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_parse_options	libtool	/^libtool_parse_options ()$/;"	f
libtool_parse_options	ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_validate_options	libtool	/^libtool_validate_options ()$/;"	f
libtool_validate_options	ltmain.sh	/^libtool_validate_options ()$/;"	f
limit	bufferevent-internal.h	/^	struct ev_token_bucket limit;$/;"	m	struct:bufferevent_rate_limit	typeref:struct:bufferevent_rate_limit::ev_token_bucket
limit_callbacks_after_prio	event-internal.h	/^	int limit_callbacks_after_prio;$/;"	m	struct:event_base
limit_callbacks_after_prio	event-internal.h	/^	int limit_callbacks_after_prio;$/;"	m	struct:event_config
line_count	event_rpcgen.py	/^line_count = 0$/;"	v
listen_cb	test/regress_bufferevent.c	/^listen_cb(struct evconnlistener *listener, evutil_socket_t fd,$/;"	f	file:
listen_on_addr	sample/le-proxy.c	/^static struct sockaddr_storage listen_on_addr;$/;"	v	typeref:struct:sockaddr_storage	file:
listener	http-internal.h	/^	struct evconnlistener *listener;$/;"	m	struct:evhttp_bound_socket	typeref:struct:evhttp_bound_socket::evconnlistener
listener	listener.c	/^	struct event listener;$/;"	m	struct:evconnlistener_event	typeref:struct:evconnlistener_event::event	file:
listener_accept_cb	test/test-fdleak.c	/^listener_accept_cb(struct evconnlistener *listener, evutil_socket_t sock,$/;"	f	file:
listener_cb	sample/hello-world.c	/^listener_cb(struct evconnlistener *listener, evutil_socket_t fd,$/;"	f	file:
listener_decref_and_unlock	listener.c	/^listener_decref_and_unlock(struct evconnlistener *listener)$/;"	f	file:
listener_iocp_testcases	test/regress_listener.c	/^struct testcase_t listener_iocp_testcases[] = {$/;"	v	typeref:struct:testcase_t
listener_read_cb	listener.c	/^listener_read_cb(evutil_socket_t fd, short what, void *p)$/;"	f	file:
listener_testcases	test/regress_listener.c	/^struct testcase_t listener_testcases[] = {$/;"	v	typeref:struct:testcase_t
livenettests	test/regress_main.c	/^const char *livenettests[] = {$/;"	v
load_deferred_queue	test/regress_thread.c	/^load_deferred_queue(void *arg)$/;"	f	file:
load_nameservers_from_registry	evdns.c	/^load_nameservers_from_registry(struct evdns_base *base)$/;"	f	file:
load_nameservers_with_getnetworkparams	evdns.c	/^load_nameservers_with_getnetworkparams(struct evdns_base *base)$/;"	f	file:
load_threads	test/regress_thread.c	/^static THREAD_T load_threads[QUEUE_THREAD_COUNT];$/;"	v	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
location	sample/http-connect.c	/^	struct evhttp_uri *location;$/;"	m	struct:connect_base	typeref:struct:connect_base::evhttp_uri	file:
lock	bufferevent-internal.h	/^	void *lock;$/;"	m	struct:bufferevent_private
lock	bufferevent-internal.h	/^	void *lock;$/;"	m	struct:bufferevent_rate_limit_group
lock	evbuffer-internal.h	/^	void *lock; \/**< lock prevent concurrent access to refcnt *\/$/;"	m	struct:evbuffer_file_segment
lock	evbuffer-internal.h	/^	void *lock;$/;"	m	struct:evbuffer
lock	evdns.c	/^	void *lock;$/;"	m	struct:evdns_base	file:
lock	evdns.c	/^	void *lock;$/;"	m	struct:evdns_server_port	file:
lock	evthread.c	/^	void *lock; \/\/ 在pthreads下为pthread_mutex_t*类型$/;"	m	struct:debug_lock	file:
lock	evthread_win32.c	/^	CRITICAL_SECTION lock;$/;"	m	struct:evthread_win32_cond	file:
lock	include/event2/thread.h	/^	int (*lock)(unsigned mode, void *lock);$/;"	m	struct:evthread_lock_callbacks
lock	iocp-internal.h	/^	CRITICAL_SECTION lock;$/;"	m	struct:event_iocp_port
lock	listener.c	/^	CRITICAL_SECTION lock;$/;"	m	struct:accepting_socket	file:
lock	listener.c	/^	void *lock;$/;"	m	struct:evconnlistener	file:
lock	test/regress_bufferevent.c	/^	void *lock;$/;"	m	struct:__anon2	file:
lock	test/regress_iocp.c	/^	void *lock;$/;"	m	struct:dummy_overlapped	file:
lock	test/regress_thread.c	/^	void *lock;$/;"	m	struct:cond_wait	file:
lock_api_version	include/event2/thread.h	/^	int lock_api_version;$/;"	m	struct:evthread_lock_callbacks
lock_unlock_base	test/regress_bufferevent.c	/^struct lock_unlock_base$/;"	s	file:
lock_unlock_free_thread_cbs	test/regress_bufferevent.c	/^static void lock_unlock_free_thread_cbs(void)$/;"	f	file:
lock_wrapper	test/regress_bufferevent.c	/^} lock_wrapper;$/;"	t	typeref:struct:__anon2	file:
locked	test/regress_bufferevent.c	/^	size_t locked \/** allow recursive locking *\/;$/;"	m	struct:__anon2	file:
locks	test/regress_bufferevent.c	/^	lock_wrapper *locks;$/;"	m	struct:lock_unlock_base	file:
locktype	evthread.c	/^	unsigned locktype; \/\/ 锁的类型$/;"	m	struct:debug_lock	file:
log	evdns.c	463;"	d	file:
log_change_callback	test/regress_buffer.c	/^log_change_callback(struct evbuffer *buffer,$/;"	f	file:
log_fn	log.c	/^static event_log_cb log_fn = NULL;$/;"	v	file:
logfn	sample/dns-example.c	/^logfn(int is_warn, const char *msg) {$/;"	f	file:
logfn	test/regress_util.c	/^logfn(int severity, const char *msg)$/;"	f	file:
logmsg	test/regress_util.c	/^static char *logmsg = NULL;$/;"	v	file:
logsev	test/regress_util.c	/^static int logsev = 0;$/;"	v	file:
loop	event_iocp.c	/^loop(void *port_)$/;"	f	file:
loud_writecb	test/test-ratelim.c	/^loud_writecb(struct bufferevent *bev, void *ctx)$/;"	f	file:
low	include/event2/bufferevent_struct.h	/^	size_t low;$/;"	m	struct:event_watermark
lower	test/regress_testutils.h	/^	int lower;$/;"	m	struct:regress_dns_server_table
lseek	buffer.c	3274;"	d	file:
lu_base	test/regress_bufferevent.c	/^} lu_base = {$/;"	v	typeref:struct:lock_unlock_base
lu_find	test/regress_bufferevent.c	/^static lock_wrapper *lu_find(void *lock_)$/;"	f	file:
m_iData	compat/sys/sample_slist.c	/^    int m_iData;$/;"	m	struct:Data	file:
m_iValue	compat/sys/sample_simple_queue.c	/^        int m_iValue;$/;"	m	struct:Data	file:
m_iValue	compat/sys/sample_tail_queue.c	/^    int m_iValue;$/;"	m	struct:MyStruct	file:
m_value	compat/sys/sample_list.c	/^    int m_value;$/;"	m	struct:Data	file:
mach_timebase_units	time-internal.h	/^	struct mach_timebase_info mach_timebase_units;$/;"	m	struct:evutil_monotonic_timer	typeref:struct:evutil_monotonic_timer::mach_timebase_info
magic	test/regress_dns.c	/^	int magic;$/;"	m	struct:gaic_request_status	file:
main	compat/sys/sample_list.c	/^int main(int argc, char *argv[])$/;"	f
main	compat/sys/sample_queue.c	/^int main(int argc, char **argv)$/;"	f
main	compat/sys/sample_restore_queue.c	/^int main(int argc, char **argv)$/;"	f
main	compat/sys/sample_simple_queue.c	/^int main(void)$/;"	f
main	compat/sys/sample_slist.c	/^int main()$/;"	f
main	compat/sys/sample_tail_queue.c	/^int main(void)$/;"	f
main	sample/connect_test.c	/^int main(void)$/;"	f
main	sample/dns-example.c	/^main(int c, char **v) {$/;"	f
main	sample/echo.c	/^main(int argc, char **argv)$/;"	f
main	sample/event-read-fifo.c	/^main(int argc, char **argv)$/;"	f
main	sample/hello-world.c	/^main(int argc, char **argv){$/;"	f
main	sample/http-connect.c	/^int main(int argc, const char **argv)$/;"	f
main	sample/http-server.c	/^main(int argc, char **argv)$/;"	f
main	sample/https-client.c	/^main(int argc, char **argv)$/;"	f
main	sample/le-proxy.c	/^main(int argc, char **argv)$/;"	f
main	sample/signal-test.c	/^main(int argc, char **argv)$/;"	f
main	sample/time-test.c	/^main(int argc, char **argv)$/;"	f
main	test/bench.c	/^main(int argc, char **argv)$/;"	f
main	test/bench_cascade.c	/^main(int argc, char **argv)$/;"	f
main	test/bench_http.c	/^main(int argc, char **argv)$/;"	f
main	test/bench_httpclient.c	/^main(int argc, char **argv)$/;"	f
main	test/regress_main.c	/^main(int argc, const char **argv)$/;"	f
main	test/test-changelist.c	/^main(int argc, char **argv)$/;"	f
main	test/test-closed.c	/^main(int argc, char **argv)$/;"	f
main	test/test-dumpevents.c	/^main(int argc, char **argv)$/;"	f
main	test/test-eof.c	/^main(int argc, char **argv)$/;"	f
main	test/test-fdleak.c	/^main(int argc, char **argv)$/;"	f
main	test/test-init.c	/^main(int argc, char **argv)$/;"	f
main	test/test-ratelim.c	/^main(int argc, char **argv)$/;"	f
main	test/test-time.c	/^main(int argc, char **argv)$/;"	f
main	test/test-weof.c	/^main(int argc, char **argv)$/;"	f
main	test/test.sh	/^main()$/;"	f
main_callback	sample/dns-example.c	/^main_callback(int result, char type, int count, int ttl,$/;"	f	file:
main_testcases	test/regress.c	/^struct testcase_t main_testcases[] = {$/;"	v	typeref:struct:testcase_t
major	include/event2/http_struct.h	/^	char major;			\/* HTTP Major number *\/$/;"	m	struct:evhttp_request
make_addrinfo	http.c	/^make_addrinfo(const char *address, ev_uint16_t port)$/;"	f	file:
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
many_event_cb	test/regress.c	/^many_event_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
mapping	evbuffer-internal.h	/^	void *mapping;$/;"	m	struct:evbuffer_file_segment
mapping_handle	evbuffer-internal.h	/^	HANDLE mapping_handle;$/;"	m	struct:evbuffer_file_segment
master_refill_event	bufferevent-internal.h	/^	struct event master_refill_event;$/;"	m	struct:bufferevent_rate_limit_group	typeref:struct:bufferevent_rate_limit_group::event
matches_common_name	sample/openssl_hostname_validation.c	/^static HostnameValidationResult matches_common_name(const char *hostname, const X509 *server_cert) {$/;"	f	file:
matches_subject_alternative_name	sample/openssl_hostname_validation.c	/^static HostnameValidationResult matches_subject_alternative_name(const char *hostname, const X509 *server_cert) {$/;"	f	file:
math	test/check-dumpevents.py	/^import math$/;"	i
max_body_size	http-internal.h	/^	ev_uint64_t max_body_size;$/;"	m	struct:evhttp_connection
max_bucket_level	test/test-ratelim.c	/^static ev_int64_t max_bucket_level=EV_INT64_MIN;$/;"	v	file:
max_dispatch_callbacks	event-internal.h	/^	int max_dispatch_callbacks;$/;"	m	struct:event_base
max_dispatch_callbacks	event-internal.h	/^	int max_dispatch_callbacks;$/;"	m	struct:event_config
max_dispatch_interval	event-internal.h	/^	struct timeval max_dispatch_interval;$/;"	m	struct:event_config	typeref:struct:event_config::timeval
max_dispatch_time	event-internal.h	/^	struct timeval max_dispatch_time;$/;"	m	struct:event_base	typeref:struct:event_base::timeval
max_headers_size	http-internal.h	/^	size_t max_headers_size;$/;"	m	struct:evhttp_connection
max_single_read	bufferevent-internal.h	/^	ev_ssize_t max_single_read;$/;"	m	struct:bufferevent_private
max_single_write	bufferevent-internal.h	/^	ev_ssize_t max_single_write;$/;"	m	struct:bufferevent_private
mem_offset	bufferevent-internal.h	/^	off_t mem_offset;$/;"	m	struct:bufferevent_ops
members	bufferevent-internal.h	/^	LIST_HEAD(rlim_group_member_list, bufferevent_private) members;$/;"	m	struct:bufferevent_rate_limit_group
message_read_status	http-internal.h	/^enum message_read_status {$/;"	g
meta_data	evrpc-internal.h	/^	struct evrpc_meta_list meta_data;$/;"	m	struct:evrpc_hook_meta	typeref:struct:evrpc_hook_meta::evrpc_meta_list
methodname_to_envvar	test/regress.c	/^methodname_to_envvar(const char *mname, char *buf, size_t buflen)$/;"	f	file:
methods_bufferevent	bufferevent_openssl.c	/^static BIO_METHOD *methods_bufferevent;$/;"	v	file:
methods_rwcount	test/regress_ssl.c	/^static BIO_METHOD *methods_rwcount;$/;"	v	file:
min	test/test-ratelim.c	/^	const char *name; int *ptr; int min; int isbool;$/;"	m	struct:option	file:
min_bucket_level	test/test-ratelim.c	/^static ev_int64_t min_bucket_level=EV_INT64_MAX;$/;"	v	file:
min_heap	minheap-internal.h	/^typedef struct min_heap$/;"	s
min_heap_adjust_	minheap-internal.h	/^int min_heap_adjust_(min_heap_t *s, struct event *e)$/;"	f
min_heap_ctor_	minheap-internal.h	/^void min_heap_ctor_(min_heap_t* s) { s->p = 0; s->n = 0; s->a = 0; }$/;"	f
min_heap_dtor_	minheap-internal.h	/^void min_heap_dtor_(min_heap_t* s) { if (s->p) mm_free(s->p); }$/;"	f
min_heap_elem_greater	minheap-internal.h	66;"	d
min_heap_elem_init_	minheap-internal.h	/^void min_heap_elem_init_(struct event* e) { e->ev_timeout_pos.min_heap_idx = -1; }$/;"	f
min_heap_elt_is_top_	minheap-internal.h	/^int min_heap_elt_is_top_(const struct event *e)$/;"	f
min_heap_empty_	minheap-internal.h	/^int min_heap_empty_(min_heap_t* s) { return 0u == s->n; }$/;"	f
min_heap_erase_	minheap-internal.h	/^int min_heap_erase_(min_heap_t* s, struct event* e)$/;"	f
min_heap_idx	include/event2/event_struct.h	/^		int min_heap_idx;$/;"	m	union:event::__anon5
min_heap_pop_	minheap-internal.h	/^struct event* min_heap_pop_(min_heap_t* s)$/;"	f
min_heap_push_	minheap-internal.h	/^int min_heap_push_(min_heap_t* s, struct event* e)$/;"	f
min_heap_reserve_	minheap-internal.h	/^int min_heap_reserve_(min_heap_t* s, unsigned n)$/;"	f
min_heap_shift_down_	minheap-internal.h	/^void min_heap_shift_down_(min_heap_t* s, unsigned hole_index, struct event* e)$/;"	f
min_heap_shift_up_	minheap-internal.h	/^void min_heap_shift_up_(min_heap_t* s, unsigned hole_index, struct event* e)$/;"	f
min_heap_shift_up_unconditional_	minheap-internal.h	/^void min_heap_shift_up_unconditional_(min_heap_t* s, unsigned hole_index, struct event* e)$/;"	f
min_heap_size_	minheap-internal.h	/^unsigned min_heap_size_(min_heap_t* s) { return s->n; }$/;"	f
min_heap_t	minheap-internal.h	/^} min_heap_t;$/;"	t	typeref:struct:min_heap
min_heap_top_	minheap-internal.h	/^struct event* min_heap_top_(min_heap_t* s) { return s->n ? *s->p : 0; }$/;"	f
min_share	bufferevent-internal.h	/^	ev_ssize_t min_share;$/;"	m	struct:bufferevent_rate_limit_group
minheap_testcases	test/regress_minheap.c	/^struct testcase_t minheap_testcases[] = {$/;"	v	typeref:struct:testcase_t
minor	include/event2/http_struct.h	/^	char minor;			\/* HTTP Minor number *\/$/;"	m	struct:evhttp_request
misalign	evbuffer-internal.h	/^	ev_misalign_t misalign;$/;"	m	struct:evbuffer_chain
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mm_calloc	mm-internal.h	73;"	d
mm_calloc	mm-internal.h	81;"	d
mm_free	mm-internal.h	76;"	d
mm_free	mm-internal.h	90;"	d
mm_free_fn_	event.c	/^static void (*mm_free_fn_)(void *p) = NULL;$/;"	v	file:
mm_malloc	mm-internal.h	72;"	d
mm_malloc	mm-internal.h	79;"	d
mm_malloc_fn_	event.c	/^static void *(*mm_malloc_fn_)(size_t sz) = NULL;$/;"	v	file:
mm_realloc	mm-internal.h	75;"	d
mm_realloc	mm-internal.h	89;"	d
mm_realloc_fn_	event.c	/^static void *(*mm_realloc_fn_)(void *p, size_t sz) = NULL;$/;"	v	file:
mm_strdup	mm-internal.h	74;"	d
mm_strdup	mm-internal.h	83;"	d
mmap_offset	evbuffer-internal.h	/^	ev_off_t mmap_offset;$/;"	m	struct:evbuffer_file_segment
mode_t	evutil.c	101;"	d	file:
monotonic_clock	time-internal.h	/^	int monotonic_clock;$/;"	m	struct:evutil_monotonic_timer
monotonic_timer	event-internal.h	/^	struct evutil_monotonic_timer monotonic_timer;$/;"	m	struct:event_base	typeref:struct:event_base::evutil_monotonic_timer
ms	iocp-internal.h	/^	long ms;$/;"	m	struct:event_iocp_port
ms100_common	test/test-ratelim.c	/^static const struct timeval *ms100_common=NULL;$/;"	v	typeref:struct:timeval	file:
msec_per_tick	ratelim-internal.h	/^	unsigned msec_per_tick;$/;"	m	struct:ev_token_bucket_cfg
msg	evutil.c	/^	char *msg; \/* allocated with LocalAlloc; free with LocalFree *\/$/;"	m	struct:cached_sock_errs_entry	file:
multiple_read_cb	test/regress.c	/^multiple_read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
multiple_write_cb	test/regress.c	/^multiple_write_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
my_perror	test/test-fdleak.c	/^my_perror(const char *s)$/;"	f	file:
n	minheap-internal.h	/^    unsigned n, a;$/;"	m	struct:min_heap
n	test/regress.c	/^	int n;$/;"	m	struct:persist_active_timeout_called	file:
n_accepting	listener.c	/^	short n_accepting;$/;"	m	struct:evconnlistener_iocp	file:
n_activate_other_event_cb	test/regress.c	/^static int n_activate_other_event_cb=0;$/;"	v	file:
n_add_for_cb	evbuffer-internal.h	/^	size_t n_add_for_cb;$/;"	m	struct:evbuffer
n_added	include/event2/buffer.h	/^    size_t n_added;$/;"	m	struct:evbuffer_cb_info
n_additional	evdns.c	/^	int n_additional; \/* how many additional RRs have been set? *\/$/;"	m	struct:server_request	file:
n_answer	evdns.c	/^	int n_answer; \/* how many answer RRs have been set? *\/$/;"	m	struct:server_request	file:
n_authority	evdns.c	/^	int n_authority; \/* how many authority RRs have been set? *\/$/;"	m	struct:server_request	file:
n_bad	test/tinytest.c	/^static int n_bad = 0; \/**< Number of tests that have failed. *\/$/;"	v	file:
n_buffers	buffer_iocp.c	/^	int n_buffers;$/;"	m	struct:evbuffer_overlapped	file:
n_changes	event-internal.h	/^	int n_changes;$/;"	m	struct:event_changelist
n_common_timeouts	event-internal.h	/^	int n_common_timeouts;$/;"	m	struct:event_base
n_common_timeouts_allocated	event-internal.h	/^	int n_common_timeouts_allocated;$/;"	m	struct:event_base
n_connected	test/regress_ssl.c	/^static int n_connected = 0;$/;"	v	file:
n_cpus_hint	event-internal.h	/^	int n_cpus_hint;$/;"	m	struct:event_config
n_deferreds_queued	event-internal.h	/^	int n_deferreds_queued;$/;"	m	struct:event_base
n_del_for_cb	evbuffer-internal.h	/^	size_t n_del_for_cb;$/;"	m	struct:evbuffer
n_deleted	include/event2/buffer.h	/^    size_t n_deleted;$/;"	m	struct:evbuffer_cb_info
n_echo_conns_open	test/test-ratelim.c	/^static int n_echo_conns_open = 0;$/;"	v	file:
n_errors	bufferevent_openssl.c	/^	unsigned n_errors : 2;$/;"	m	struct:bufferevent_openssl	file:
n_errors	test/bench_httpclient.c	/^int n_errors = 0;$/;"	v
n_events_invoked	test/regress_bufferevent.c	/^static int n_events_invoked = 0;$/;"	v	file:
n_gai_results_pending	test/regress_dns.c	/^static int n_gai_results_pending = 0;$/;"	v	file:
n_labels	evdns.c	/^	int n_labels; \/* number of current entries *\/$/;"	m	struct:dnslabel_table	file:
n_live_threads	iocp-internal.h	/^	short n_live_threads;$/;"	m	struct:event_iocp_port
n_members	bufferevent-internal.h	/^	int n_members;$/;"	m	struct:bufferevent_rate_limit_group
n_ok	test/tinytest.c	/^static int n_ok = 0; \/**< Number of tests that have passed *\/$/;"	v	file:
n_pai_calls	test/regress.c	/^static int n_pai_calls = 0;$/;"	v	file:
n_read	bufferevent_openssl.c	/^	unsigned long n_read;$/;"	m	struct:bio_data_counts	file:
n_read	test/bench_httpclient.c	/^	size_t n_read;$/;"	m	struct:request_info	file:
n_read_and_drain_cb	test/regress.c	/^static int n_read_and_drain_cb=0;$/;"	v	file:
n_read_timeouts	test/regress_bufferevent.c	/^	int n_read_timeouts;$/;"	m	struct:timeout_cb_result	file:
n_reads_invoked	test/regress_bufferevent.c	/^static int n_reads_invoked = 0;$/;"	v	file:
n_replies_left	test/regress_dns.c	/^static int n_replies_left;$/;"	v	file:
n_req_heads	evdns.c	/^	int n_req_heads;$/;"	m	struct:evdns_base	file:
n_server_responses	test/regress_dns.c	/^static int n_server_responses = 0;$/;"	v	file:
n_skipped	test/tinytest.c	/^static int n_skipped = 0; \/**< Number of tests that have been skipped. *\/$/;"	v	file:
n_strings_read	test/regress_bufferevent.c	/^static int n_strings_read = 0;$/;"	v	file:
n_threads	iocp-internal.h	/^	short n_threads;$/;"	m	struct:event_iocp_port
n_to_wake	evthread_win32.c	/^	int n_to_wake;$/;"	m	struct:evthread_win32_cond	file:
n_waiting	evthread_win32.c	/^	int n_waiting;$/;"	m	struct:evthread_win32_cond	file:
n_write_a_byte_cb	test/regress.c	/^static int n_write_a_byte_cb=0;$/;"	v	file:
n_write_timeouts	test/regress_bufferevent.c	/^	int n_write_timeouts;$/;"	m	struct:timeout_cb_result	file:
n_written	bufferevent_openssl.c	/^	unsigned long n_written;$/;"	m	struct:bio_data_counts	file:
nactivequeues	event-internal.h	/^	int nactivequeues;$/;"	m	struct:event_base
name	evdns.c	/^			char name[HOST_NAME_MAX];$/;"	m	struct:reply::__anon12::__anon15	file:
name	evdns.c	/^	char *name; \/* name part of the RR *\/$/;"	m	struct:server_reply_item	file:
name	event-internal.h	/^	const char *name;$/;"	m	struct:eventop
name	evrpc-internal.h	/^	char *name;$/;"	m	struct:evrpc_request_wrapper
name	http.c	/^	const char *name;$/;"	m	struct:response_class	file:
name	include/event2/dns_struct.h	/^	char name[1];$/;"	m	struct:evdns_server_question
name	test/test-ratelim.c	/^	const char *name; int *ptr; int min; int isbool;$/;"	m	struct:option	file:
name	test/tinytest.h	/^	const char *name; \/**< An identifier for this case. *\/$/;"	m	struct:testcase_t
name	test/tinytest.h	/^	const char *name;$/;"	m	struct:testlist_alias_t
name_from_addr	http.c	/^name_from_addr(struct sockaddr *sa, ev_socklen_t salen,$/;"	f	file:
name_parse	evdns.c	/^name_parse(u8 *packet, int length, int *idx, char *name_out, int name_out_len) {$/;"	f	file:
nameserver	evdns.c	/^struct nameserver {$/;"	s	file:
nameserver_failed	evdns.c	/^nameserver_failed(struct nameserver *const ns, const char *msg) {$/;"	f	file:
nameserver_pick	evdns.c	/^nameserver_pick(struct evdns_base *base) {$/;"	f	file:
nameserver_probe_callback	evdns.c	/^nameserver_probe_callback(int result, char type, int count, int ttl, void *addresses, void *arg) {$/;"	f	file:
nameserver_probe_failed	evdns.c	/^nameserver_probe_failed(struct nameserver *const ns) {$/;"	f	file:
nameserver_prod_callback	evdns.c	/^nameserver_prod_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
nameserver_read	evdns.c	/^nameserver_read(struct nameserver *ns) {$/;"	f	file:
nameserver_ready_callback	evdns.c	/^nameserver_ready_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
nameserver_send_probe	evdns.c	/^nameserver_send_probe(struct nameserver *const ns) {$/;"	f	file:
nameserver_up	evdns.c	/^nameserver_up(struct nameserver *const ns)$/;"	f	file:
nameserver_write_waiting	evdns.c	/^nameserver_write_waiting(struct nameserver *ns, char waiting) {$/;"	f	file:
nchanges	devpoll.c	/^	int nchanges;$/;"	m	struct:devpollop	file:
nclose	evmap.c	/^	ev_uint16_t nclose;$/;"	m	struct:evmap_io	file:
ndots	evdns.c	/^	int ndots;$/;"	m	struct:search_state	file:
need_input_hook	test/regress_rpc.c	/^static int need_input_hook = 0;$/;"	v	file:
need_numeric_port_hack	evutil.c	/^need_numeric_port_hack(void)$/;"	f	file:
need_numeric_port_hack_	evutil.c	/^static int need_numeric_port_hack_=0;$/;"	v	file:
need_output_hook	test/regress_rpc.c	/^static int need_output_hook = 0;$/;"	v	file:
need_reinit	event-internal.h	/^	int need_reinit;$/;"	m	struct:eventop
need_socktype_protocol_hack	evutil.c	/^need_socktype_protocol_hack(void)$/;"	f	file:
need_socktype_protocol_hack_	evutil.c	/^static int need_socktype_protocol_hack_=0;$/;"	v	file:
nentries	event-internal.h	/^    int nentries;$/;"	m	struct:event_signal_map
nevents	devpoll.c	/^	int nevents;$/;"	m	struct:devpollop	file:
nevents	epoll.c	/^	int nevents;$/;"	m	struct:epollop	file:
new_accepting_socket	listener.c	/^new_accepting_socket(struct evconnlistener_iocp *lev, int family)$/;"	f	file:
next	evbuffer-internal.h	/^	LIST_ENTRY(evbuffer_cb_entry) next;$/;"	m	struct:evbuffer_cb_entry
next	evbuffer-internal.h	/^	struct evbuffer_chain *next;$/;"	m	struct:evbuffer_chain	typeref:struct:evbuffer_chain::evbuffer_chain
next	evdns.c	/^	struct nameserver *next, *prev;$/;"	m	struct:nameserver	typeref:struct:nameserver::nameserver	file:
next	evdns.c	/^	struct request *next, *prev;$/;"	m	struct:request	typeref:struct:request::request	file:
next	evdns.c	/^	struct search_domain *next;$/;"	m	struct:search_domain	typeref:struct:search_domain::search_domain	file:
next	evdns.c	/^	struct server_reply_item *next; \/* next item in sequence. *\/$/;"	m	struct:server_reply_item	typeref:struct:server_reply_item::server_reply_item	file:
next	event-internal.h	/^	TAILQ_ENTRY(event_config_entry) next;$/;"	m	struct:event_config_entry
next	evrpc-internal.h	/^	TAILQ_ENTRY(evrpc_hook) next;$/;"	m	struct:evrpc_hook
next	evrpc-internal.h	/^	TAILQ_ENTRY(evrpc_hook_ctx) next;$/;"	m	struct:evrpc_hook_ctx
next	evrpc-internal.h	/^	TAILQ_ENTRY(evrpc_meta) next;$/;"	m	struct:evrpc_meta
next	evrpc-internal.h	/^	TAILQ_ENTRY(evrpc_request_wrapper) next;$/;"	m	struct:evrpc_request_wrapper
next	http-internal.h	/^	TAILQ_ENTRY(evhttp_bound_socket) next;$/;"	m	struct:evhttp_bound_socket
next	http-internal.h	/^	TAILQ_ENTRY(evhttp_cb) next;$/;"	m	struct:evhttp_cb
next	http-internal.h	/^	TAILQ_ENTRY(evhttp_connection) next;$/;"	m	struct:evhttp_connection
next	http-internal.h	/^	TAILQ_ENTRY(evhttp_server_alias) next;$/;"	m	struct:evhttp_server_alias
next	include/event2/http_struct.h	/^	TAILQ_ENTRY(evhttp_request) next;$/;"	m	struct:evhttp_request
next	include/event2/keyvalq_struct.h	/^	TAILQ_ENTRY(evkeyval) next;$/;"	m	struct:evkeyval
next	include/event2/rpc_struct.h	/^	TAILQ_ENTRY(evrpc) next;$/;"	m	struct:evrpc
next_in_group	bufferevent-internal.h	/^	LIST_ENTRY(bufferevent_private) next_in_group;$/;"	m	struct:bufferevent_rate_limit
next_once	event-internal.h	/^	LIST_ENTRY(event_once) next_once;$/;"	m	struct:event_once
next_pending	evdns.c	/^	struct server_request *next_pending;$/;"	m	struct:server_request	typeref:struct:server_request::server_request	file:
next_vhost	http-internal.h	/^	TAILQ_ENTRY(evhttp) next_vhost;$/;"	m	struct:evhttp
nfds	poll.c	/^	int nfds;			\/* Highest number used *\/$/;"	m	struct:pollop	file:
nil_accept_cb	test/regress_dns.c	/^nil_accept_cb(struct evconnlistener *l, evutil_socket_t fd, struct sockaddr *s,$/;"	f	file:
nil_backend_del	event.c	/^nil_backend_del(struct event_base *b, evutil_socket_t fd, short old,$/;"	f	file:
nil_eventop	event.c	/^const struct eventop nil_eventop = {$/;"	v	typeref:struct:eventop
nil_setup	test/regress_buffer.c	/^static const struct testcase_setup_t nil_setup = {$/;"	v	typeref:struct:testcase_setup_t	file:
no_cleanup	test/regress_buffer.c	/^no_cleanup(const void *data, size_t datalen, void *extra)$/;"	f	file:
nodist_include_event2_HEADERS	Makefile	/^nodist_include_event2_HEADERS = include\/event2\/event-config.h$/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = $(am__append_5) $(am__append_7) test\/regress.h \\$/;"	m
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = $(am__EXEEXT_4) $(am__EXEEXT_6)$/;"	m
nonident	event_rpcgen.py	/^nonident = re.compile(r'[^a-zA-Z0-9_]')$/;"	v
note_time_cb	test/regress_thread.c	/^note_time_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
notification_fd_used	test/regress_thread.c	/^static int notification_fd_used = 0;$/;"	v	file:
notify_event_added	kqueue.c	/^	int notify_event_added;$/;"	m	struct:kqop	file:
notify_fd_cb	test/regress_thread.c	/^notify_fd_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
nquestions	include/event2/dns_struct.h	/^	int nquestions;$/;"	m	struct:evdns_server_request
nr_locks	test/regress_bufferevent.c	/^	size_t nr_locks;$/;"	m	struct:lock_unlock_base	file:
nread	evmap.c	/^	ev_uint16_t nread;$/;"	m	struct:evmap_io	file:
nread	test/regress.c	/^	int nread;$/;"	m	struct:both	file:
ns	evdns.c	/^	struct nameserver *ns;	\/* the server which we last sent it *\/$/;"	m	struct:request	typeref:struct:request::nameserver	file:
ntoread	include/event2/http_struct.h	/^	ev_int64_t ntoread;$/;"	m	struct:evhttp_request
num_active	test/bench.c	/^static int num_pipes, num_active, num_writes;$/;"	v	file:
num_domains	evdns.c	/^	int num_domains;$/;"	m	struct:search_state	file:
num_fds_in_fd_sets	win32select.c	/^	unsigned num_fds_in_fd_sets;$/;"	m	struct:win32op	file:
num_pipes	test/bench.c	/^static int num_pipes, num_active, num_writes;$/;"	v	file:
num_requests	test/test-fdleak.c	/^static int num_requests;$/;"	v	file:
num_responses	http.c	/^	size_t num_responses;$/;"	m	struct:response_class	file:
num_writes	test/bench.c	/^static int num_pipes, num_active, num_writes;$/;"	v	file:
nwrite	evmap.c	/^	ev_uint16_t nwrite;$/;"	m	struct:evmap_io	file:
off	evbuffer-internal.h	/^	size_t off;$/;"	m	struct:evbuffer_chain
off64_t	test/regress_zlib.c	78;"	d	file:
ok	bufferevent_async.c	/^	unsigned ok : 1;$/;"	m	struct:bufferevent_async	file:
old_events	changelist-internal.h	/^	short old_events;$/;"	m	struct:event_change
old_state	bufferevent_openssl.c	/^	unsigned old_state : 2;$/;"	m	struct:bufferevent_openssl	file:
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
on_complete_cb	include/event2/http_struct.h	/^	void (*on_complete_cb)(struct evhttp_request *, void *);$/;"	m	struct:evhttp_request
on_complete_cb_arg	include/event2/http_struct.h	/^	void *on_complete_cb_arg;$/;"	m	struct:evhttp_request
once_events	event-internal.h	/^	LIST_HEAD(once_event_list, event_once) once_events;$/;"	m	struct:event_base
oneshot	test/regress_http.c	/^	int oneshot: 1;$/;"	m	struct:terminate_state	file:
op	epolltable-internal.h	/^	int op;$/;"	m	struct:operation
open	evutil.c	92;"	d	file:
open	sample/http-server.c	58;"	d	file:
open_ssl_bufevs	test/regress_ssl.c	/^open_ssl_bufevs(struct bufferevent **bev1_out, struct bufferevent **bev2_out,$/;"	f	file:
operation	epolltable-internal.h	/^static const struct operation {$/;"	s
ops	listener.c	/^	const struct evconnlistener_ops *ops;$/;"	m	struct:evconnlistener	typeref:struct:evconnlistener::evconnlistener_ops	file:
opt_forked	test/tinytest.c	/^static int opt_forked = 0; \/**< True iff we're called from inside a win32 fork*\/$/;"	v	file:
opt_nofork	test/tinytest.c	/^static int opt_nofork = 0; \/**< Suppress calls to fork() for debugging. *\/$/;"	v	file:
opt_verbosity	test/tinytest.c	/^static int opt_verbosity = 1; \/**< -==quiet,0==terse,1==normal,2==verbose *\/$/;"	v	file:
option	test/test-ratelim.c	/^static struct option {$/;"	s	file:
options	bufferevent-internal.h	/^	enum bufferevent_options options;$/;"	m	struct:bufferevent_private	typeref:enum:bufferevent_private::bufferevent_options
options	test/test-ratelim.c	/^} options[] = {$/;"	v	typeref:struct:option	file:
orig_size	include/event2/buffer.h	/^    size_t orig_size;$/;"	m	struct:evbuffer_cb_info
original_cond_fns_	evthread.c	/^static struct evthread_condition_callbacks original_cond_fns_ = {$/;"	v	typeref:struct:evthread_condition_callbacks	file:
original_lock_fns_	evthread.c	/^static struct evthread_lock_callbacks original_lock_fns_ = {$/;"	v	typeref:struct:evthread_lock_callbacks	file:
out_hooks	evrpc-internal.h	/^	struct evrpc_hook_list out_hooks;$/;"	m	struct:evrpc_hooks_	typeref:struct:evrpc_hooks_::evrpc_hook_list
outbuf_cb	bufferevent_filter.c	/^	struct evbuffer_cb_entry *outbuf_cb;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::evbuffer_cb_entry	file:
outbuf_cb	bufferevent_openssl.c	/^	struct evbuffer_cb_entry *outbuf_cb;$/;"	m	struct:bufferevent_openssl	typeref:struct:bufferevent_openssl::evbuffer_cb_entry	file:
outcome	test/tinytest.c	/^enum outcome { SKIP=2, OK=1, FAIL=0 };$/;"	g	file:
outfilter_calls	test/regress_zlib.c	/^static int outfilter_calls;$/;"	v	file:
output	include/event2/bufferevent_struct.h	/^	struct evbuffer *output;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::evbuffer
output_buffer	include/event2/http_struct.h	/^	struct evbuffer *output_buffer;	\/* outgoing post or data *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evbuffer
output_headers	include/event2/http_struct.h	/^	struct evkeyvalq *output_headers;$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evkeyvalq
output_hooks	evrpc-internal.h	69;"	d
overlapped	iocp-internal.h	/^	OVERLAPPED overlapped;$/;"	m	struct:event_overlapped
overlapped	listener.c	/^	struct event_overlapped overlapped;$/;"	m	struct:accepting_socket	typeref:struct:accepting_socket::event_overlapped	file:
own_lock	bufferevent-internal.h	/^	unsigned own_lock : 1;$/;"	m	struct:bufferevent_private
own_lock	evbuffer-internal.h	/^	unsigned own_lock : 1;$/;"	m	struct:evbuffer
p	minheap-internal.h	/^    struct event** p;$/;"	m	struct:min_heap	typeref:struct:min_heap::event
pai_events	test/regress.c	/^static struct event pai_events[3];$/;"	v	typeref:struct:event	file:
pair	test/regress.c	/^evutil_socket_t pair[2];$/;"	v
pair	test/regress.h	/^	evutil_socket_t pair[2];$/;"	m	struct:basic_test_data
pair	test/test-weof.c	/^evutil_socket_t pair[2];$/;"	v
pair_flush_eventcb	test/regress_bufferevent.c	/^pair_flush_eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
pair_is_in	test/regress_iocp.c	/^pair_is_in(struct dummy_overlapped *o, uintptr_t key, ev_ssize_t n)$/;"	f	file:
parent	evbuffer-internal.h	/^	struct bufferevent *parent;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::bufferevent
parent	evbuffer-internal.h	/^	struct evbuffer_chain *parent;$/;"	m	struct:evbuffer_multicast_parent	typeref:struct:evbuffer_multicast_parent::evbuffer_chain
parse	test/regress_util.c	/^	const char *parse;$/;"	m	struct:sa_port_ent	file:
parse	test/regress_util.c	/^	const char *parse;$/;"	m	struct:sa_pred_ent	file:
parse_authority	http.c	/^parse_authority(struct evhttp_uri *uri, char *s, char *eos)$/;"	f	file:
parse_numeric_servname	evutil.c	/^parse_numeric_servname(const char *servname)$/;"	f	file:
parse_port	http.c	/^parse_port(const char *s, const char *eos)$/;"	f	file:
partner	bufferevent_pair.c	/^	struct bufferevent_pair *partner;$/;"	m	struct:bufferevent_pair	typeref:struct:bufferevent_pair::bufferevent_pair	file:
pat	test/check-dumpevents.py	/^pat = re.compile(r'Timeout=([0-9\\.]+)')$/;"	v
path	http.c	/^	char *path; \/* path, or "". *\/$/;"	m	struct:evhttp_uri	file:
path_matches_noscheme	http.c	/^path_matches_noscheme(const char *cp)$/;"	f	file:
pause_requests	evrpc-internal.h	/^	struct evrpc_pause_list pause_requests;$/;"	m	struct:evrpc_hooks_	typeref:struct:evrpc_hooks_::evrpc_pause_list
paused_requests	evrpc-internal.h	70;"	d
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pending	test/regress_dns.c	/^static int pending = 0;$/;"	v	file:
pending_cb	evdns.c	/^	int pending_cb; \/* Waiting for its callback to be invoked; not$/;"	m	struct:evdns_request	file:
pending_connect_events	test/regress_ssl.c	/^static int pending_connect_events = 0;$/;"	v	file:
pending_error	evdns.c	/^	int pending_error;$/;"	m	struct:evdns_getaddrinfo_request	file:
pending_idx_plus_1	evport.c	/^	int pending_idx_plus_1;$/;"	m	struct:fd_info	file:
pending_replies	evdns.c	/^	struct server_request *pending_replies;$/;"	m	struct:evdns_server_port	typeref:struct:evdns_server_port::server_request	file:
pending_result	evdns.c	/^	struct evutil_addrinfo *pending_result;$/;"	m	struct:evdns_getaddrinfo_request	typeref:struct:evdns_getaddrinfo_request::evutil_addrinfo	file:
pending_unsuspend_read	bufferevent-internal.h	/^	unsigned pending_unsuspend_read : 1;$/;"	m	struct:bufferevent_rate_limit_group
pending_unsuspend_write	bufferevent-internal.h	/^	unsigned pending_unsuspend_write : 1;$/;"	m	struct:bufferevent_rate_limit_group
periodic_timeout_cb	test/regress.c	/^periodic_timeout_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
persist_active_timeout_called	test/regress.c	/^struct persist_active_timeout_called {$/;"	s	file:
persist_active_timeout_cb	test/regress.c	/^persist_active_timeout_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
pid	kqueue.c	/^	pid_t pid;$/;"	m	struct:kqop	file:
pid_t	arc4random.c	85;"	d	file:
pin_release	buffer_iocp.c	/^pin_release(struct evbuffer_overlapped *eo, unsigned flag)$/;"	f	file:
pipes	test/bench.c	/^static evutil_socket_t *pipes;$/;"	v	file:
pipes	test/bench_cascade.c	/^static evutil_socket_t *pipes;$/;"	v	file:
pkgconfig_DATA	Makefile	/^pkgconfig_DATA = $(LIBEVENT_PKGCONFIG)$/;"	m
pkgconfigdir	Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/libevent$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/libevent$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/libevent$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/libevent$/;"	m
poll_add	poll.c	/^poll_add(struct event_base *base, int fd, short old, short events, void *idx_)$/;"	f	file:
poll_check_ok	poll.c	/^poll_check_ok(struct pollop *pop)$/;"	f	file:
poll_check_ok	poll.c	121;"	d	file:
poll_dealloc	poll.c	/^poll_dealloc(struct event_base *base)$/;"	f	file:
poll_del	poll.c	/^poll_del(struct event_base *base, int fd, short old, short events, void *idx_)$/;"	f	file:
poll_dispatch	poll.c	/^poll_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
poll_init	poll.c	/^poll_init(struct event_base *base)$/;"	f	file:
pollidx	poll.c	/^struct pollidx {$/;"	s	file:
pollop	poll.c	/^struct pollop {$/;"	s	file:
pollops	poll.c	/^const struct eventop pollops = {$/;"	v	typeref:struct:eventop
pool	evrpc-internal.h	/^	struct evrpc_pool *pool;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evrpc_pool
port	evdns.c	/^	ev_uint16_t port;$/;"	m	struct:evdns_getaddrinfo_request	file:
port	evdns.c	/^	struct evdns_server_port *port; \/* Which port received this request on? *\/$/;"	m	struct:server_request	typeref:struct:server_request::evdns_server_port	file:
port	http-internal.h	/^	ev_uint16_t port;$/;"	m	struct:evhttp_connection
port	http.c	/^	int port; \/* port, or zero *\/$/;"	m	struct:evhttp_uri	file:
port	iocp-internal.h	/^	HANDLE port;$/;"	m	struct:event_iocp_port
port	listener.c	/^	struct event_iocp_port *port;$/;"	m	struct:evconnlistener_iocp	typeref:struct:evconnlistener_iocp::event_iocp_port	file:
port	test/regress_http.c	/^	ev_uint16_t port;$/;"	m	struct:http_server	file:
port	test/regress_util.c	/^	int port;$/;"	m	struct:sa_port_ent	file:
pos	evdns.c	/^struct dnslabel_entry { char *v; off_t pos; };$/;"	m	struct:dnslabel_entry	file:
pos	include/event2/buffer.h	/^    ev_ssize_t pos;$/;"	m	struct:evbuffer_ptr
pos_in_chain	include/event2/buffer.h	/^        size_t pos_in_chain;$/;"	m	struct:evbuffer_ptr::__anon9
prefix	Makefile	/^prefix = \/usr$/;"	m
prefix	test/tinytest.h	/^	const char *prefix; \/**< Prefix to prepend to testnames. *\/$/;"	m	struct:testgroup_t
prefix_suffix_match	http.c	/^prefix_suffix_match(const char *pattern, const char *name, int ignorecase)$/;"	f	file:
premature_event	test/regress.c	/^static int premature_event = 0;$/;"	v	file:
prev	evdns.c	/^	struct nameserver *next, *prev;$/;"	m	struct:nameserver	typeref:struct:nameserver::	file:
prev	evdns.c	/^	struct request *next, *prev;$/;"	m	struct:request	typeref:struct:request::	file:
prev_pending	evdns.c	/^	struct server_request *prev_pending;$/;"	m	struct:server_request	typeref:struct:server_request::server_request	file:
print_err	bufferevent_openssl.c	106;"	d	file:
prio_active_inversion_cb	test/regress.c	/^prio_active_inversion_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
probe_request	evdns.c	/^	struct evdns_request *probe_request;$/;"	m	struct:nameserver	typeref:struct:nameserver::evdns_request	file:
process	evrpc-internal.h	/^	int (*process)(void *, struct evhttp_request *,$/;"	m	struct:evrpc_hook
process_arg	evrpc-internal.h	/^	void *process_arg;$/;"	m	struct:evrpc_hook
process_in	bufferevent_filter.c	/^	bufferevent_filter_cb process_in;$/;"	m	struct:bufferevent_filtered	file:
process_out	bufferevent_filter.c	/^	bufferevent_filter_cb process_out;$/;"	m	struct:bufferevent_filtered	file:
process_test_alias	test/tinytest.c	/^process_test_alias(struct testgroup_t *groups, const char *test)$/;"	f	file:
process_test_option	test/tinytest.c	/^process_test_option(struct testgroup_t *groups, const char *test)$/;"	f	file:
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
ptr	bufferevent-internal.h	/^	void *ptr;$/;"	m	union:bufferevent_ctrl_data
ptr	evdns.c	/^		} ptr;$/;"	m	union:reply::__anon12	typeref:struct:reply::__anon12::__anon15	file:
ptr	event.c	/^    const struct event *ptr;$/;"	m	struct:event_debug_entry	typeref:struct:event_debug_entry::event	file:
ptr	test/test-ratelim.c	/^	const char *name; int *ptr; int min; int isbool;$/;"	m	struct:option	file:
put_cname_in_ptr	evdns.c	/^	char **put_cname_in_ptr; \/* store the cname here if we get one. *\/$/;"	m	struct:request	file:
put_error	bufferevent_openssl.c	/^put_error(struct bufferevent_openssl *bev_ssl, unsigned long err)$/;"	f	file:
q	test/regress_testutils.h	/^	const char *q;$/;"	m	struct:regress_dns_server_table
query	http.c	/^	char *query; \/* query, or NULL *\/$/;"	m	struct:evhttp_uri	file:
questions	include/event2/dns_struct.h	/^	struct evdns_server_question **questions;$/;"	m	struct:evdns_server_request	typeref:struct:evdns_server_request::evdns_server_question
queue	test/regress_thread.c	/^	struct event_base *queue;$/;"	m	struct:deferred_test_data	typeref:struct:deferred_test_data::event_base	file:
queue_entry_t	compat/sys/sample_queue.c	/^struct queue_entry_t$/;"	s	file:
queue_entry_t	compat/sys/sample_restore_queue.c	/^struct queue_entry_t$/;"	s	file:
queue_head_t	compat/sys/sample_restore_queue.c	/^struct queue_head_t$/;"	s	file:
queued	test/test-ratelim.c	/^	size_t queued;$/;"	m	struct:client_state	file:
r	evdns.c	/^	struct evdns_request *r;$/;"	m	struct:getaddrinfo_subrequest	typeref:struct:getaddrinfo_subrequest::evdns_request	file:
r	test/regress_dns.c	/^	struct generic_dns_callback_result r;$/;"	m	struct:testleak_env_t	typeref:struct:testleak_env_t::generic_dns_callback_result	file:
rand_int	test/test-time.c	/^rand_int(int n)$/;"	f	file:
rate_limit	bufferevent-internal.h	/^	struct ev_token_bucket rate_limit;$/;"	m	struct:bufferevent_rate_limit_group	typeref:struct:bufferevent_rate_limit_group::ev_token_bucket
rate_limit_cfg	bufferevent-internal.h	/^	struct ev_token_bucket_cfg rate_limit_cfg;$/;"	m	struct:bufferevent_rate_limit_group	typeref:struct:bufferevent_rate_limit_group::ev_token_bucket_cfg
rate_limiting	bufferevent-internal.h	/^	struct bufferevent_rate_limit *rate_limiting;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::bufferevent_rate_limit
ratelim_group	test/test-ratelim.c	/^struct bufferevent_rate_limit_group *ratelim_group = NULL;$/;"	v	typeref:struct:bufferevent_rate_limit_group
rbuf	test/regress.c	/^static char rbuf[4096];$/;"	v	file:
rbuf	test/regress_iocp.c	/^static struct evbuffer *rbuf = NULL, *wbuf = NULL;$/;"	v	typeref:struct:evbuffer	file:
rcsid	strlcpy.c	/^static char *rcsid = "$OpenBSD: strlcpy.c,v 1.5 2001\/05\/13 15:40:16 deraadt Exp $";$/;"	v	file:
re	event_rpcgen.py	/^import re$/;"	i
re	test/check-dumpevents.py	/^import re$/;"	i
re_add_read_cb	test/regress.c	/^re_add_read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
read	evutil.c	93;"	d	file:
read	test/regress.c	98;"	d	file:
read	test/regress_ssl.c	/^	size_t read;$/;"	m	struct:rwcount	file:
read	test/regress_ssl.c	64;"	d	file:
read_added	bufferevent_async.c	/^	unsigned read_added : 1;$/;"	m	struct:bufferevent_async	file:
read_all	arc4random.c	/^read_all(int fd, unsigned char *buf, size_t count)$/;"	f	file:
read_and_drain_cb	test/regress.c	/^read_and_drain_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
read_blocked_on_write	bufferevent_openssl.c	/^	unsigned read_blocked_on_write : 1;$/;"	m	struct:bufferevent_openssl	file:
read_called_once_cb	test/regress.c	/^read_called_once_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
read_cb	test/bench.c	/^read_cb(evutil_socket_t fd, short which, void *arg)$/;"	f	file:
read_cb	test/bench_cascade.c	/^read_cb(evutil_socket_t fd, short which, void *arg)$/;"	f	file:
read_cb	test/regress_et.c	/^read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
read_cb	test/test-eof.c	/^read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
read_change	changelist-internal.h	/^	ev_uint8_t read_change;$/;"	m	struct:event_change
read_complete	bufferevent_async.c	/^read_complete(struct event_overlapped *eo, ev_uintptr_t key,$/;"	f	file:
read_complete	test/regress_iocp.c	/^read_complete(struct event_overlapped *eo, uintptr_t key,$/;"	f	file:
read_in_progress	buffer_iocp.c	/^	unsigned read_in_progress : 1;$/;"	m	struct:evbuffer_overlapped	file:
read_in_progress	bufferevent_async.c	/^	size_t read_in_progress;$/;"	m	struct:bufferevent_async	file:
read_limit	ratelim-internal.h	/^	ev_ssize_t read_limit, write_limit;$/;"	m	struct:ev_token_bucket
read_maximum	ratelim-internal.h	/^	size_t read_maximum;$/;"	m	struct:ev_token_bucket_cfg
read_more_deferred_cb	http-internal.h	/^	struct event_callback read_more_deferred_cb;$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::event_callback
read_not_timeout_cb	test/regress.c	/^static void read_not_timeout_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
read_not_timeout_param	test/regress.c	/^struct read_not_timeout_param$/;"	s	file:
read_once_cb	test/regress.c	/^read_once_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
read_overlapped	bufferevent_async.c	/^	struct event_overlapped read_overlapped;$/;"	m	struct:bufferevent_async	typeref:struct:bufferevent_async::event_overlapped	file:
read_pos_plus1	win32select.c	/^	int read_pos_plus1;$/;"	m	struct:idx_info	file:
read_rate	ratelim-internal.h	/^	size_t read_rate;$/;"	m	struct:ev_token_bucket_cfg
read_suspended	bufferevent-internal.h	/^	bufferevent_suspend_flags read_suspended;$/;"	m	struct:bufferevent_private
read_suspended	bufferevent-internal.h	/^	unsigned read_suspended : 1;$/;"	m	struct:bufferevent_rate_limit_group
read_timeout_at	test/regress_bufferevent.c	/^	struct timeval read_timeout_at;$/;"	m	struct:timeout_cb_result	typeref:struct:timeout_cb_result::timeval	file:
read_watermarks_cb	bufferevent-internal.h	/^	struct evbuffer_cb_entry *read_watermarks_cb;$/;"	m	struct:bufferevent_private	typeref:struct:bufferevent_private::evbuffer_cb_entry
readcb	include/event2/bufferevent_struct.h	/^	bufferevent_data_cb readcb;$/;"	m	struct:bufferevent
readcb	sample/le-proxy.c	/^readcb(struct bufferevent *bev, void *ctx)$/;"	f	file:
readcb	test/bench_httpclient.c	/^readcb(struct bufferevent *b, void *arg)$/;"	f	file:
readcb	test/regress_bufferevent.c	/^readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
readcb	test/regress_zlib.c	/^readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
readcb_finished	test/regress_zlib.c	/^static int readcb_finished;$/;"	v	file:
readcb_pending	bufferevent-internal.h	/^	unsigned readcb_pending : 1;$/;"	m	struct:bufferevent_private
readd_test_event_last_added	test/regress.c	/^static struct event *readd_test_event_last_added = NULL;$/;"	v	typeref:struct:event	file:
reader_eventcb	test/regress_bufferevent.c	/^reader_eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
reader_eventcb_simple	test/regress_bufferevent.c	/^reader_eventcb_simple(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
reader_readcb	test/regress_bufferevent.c	/^reader_readcb(struct bufferevent *bev, void *ctx)$/;"	f	file:
readset_in	win32select.c	/^	struct win_fd_set *readset_in;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
readset_out	win32select.c	/^	struct win_fd_set *readset_out;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
realloc_copy	poll.c	/^	int realloc_copy;		\/* True iff we must realloc$/;"	m	struct:pollop	file:
reassociate	evport.c	/^reassociate(struct evport_data *epdp, struct fd_info *fdip, int fd)$/;"	f	file:
received	test/test-ratelim.c	/^	ev_uint64_t received;$/;"	m	struct:client_state	file:
record_event_cb	test/regress.c	/^record_event_cb(evutil_socket_t s, short what, void *ptr)$/;"	f	file:
redirection_phrases	http.c	/^static const char *redirection_phrases[] = {$/;"	v	file:
reentrant_cb_run	test/regress.c	/^static int reentrant_cb_run = 0;$/;"	v	file:
ref_done_cb	test/regress_buffer.c	/^static void ref_done_cb(const void *data, size_t len, void *info)$/;"	f	file:
ref_done_cb_called_count	test/regress_buffer.c	/^static int ref_done_cb_called_count = 0;$/;"	v	file:
ref_done_cb_called_with	test/regress_buffer.c	/^static void *ref_done_cb_called_with = NULL;$/;"	v	file:
ref_done_cb_called_with_data	test/regress_buffer.c	/^static const void *ref_done_cb_called_with_data = NULL;$/;"	v	file:
ref_done_cb_called_with_len	test/regress_buffer.c	/^static size_t ref_done_cb_called_with_len = 0;$/;"	v	file:
refcnt	bufferevent-internal.h	/^	int refcnt;$/;"	m	struct:bufferevent_private
refcnt	evbuffer-internal.h	/^	int refcnt; \/**< Reference count for this file segment *\/$/;"	m	struct:evbuffer_file_segment
refcnt	evbuffer-internal.h	/^	int refcnt;$/;"	m	struct:evbuffer
refcnt	evbuffer-internal.h	/^	int refcnt;$/;"	m	struct:evbuffer_chain
refcnt	evdns.c	/^	int refcnt; \/* reference count. *\/$/;"	m	struct:evdns_server_port	file:
refcnt	listener.c	/^	short refcnt;$/;"	m	struct:evconnlistener	file:
refcount	evdns.c	/^	int refcount;$/;"	m	struct:search_state	file:
reference_cb	test/regress_buffer.c	/^reference_cb(const void *data, size_t len, void *extra)$/;"	f	file:
reference_cb_called	test/regress_buffer.c	/^static int reference_cb_called;$/;"	v	file:
refill_bucket_event	bufferevent-internal.h	/^	struct event refill_bucket_event;$/;"	m	struct:bufferevent_rate_limit	typeref:struct:bufferevent_rate_limit::event
register_events_subthread	test/regress_thread.c	/^register_events_subthread(void *arg)$/;"	f	file:
registered_rpcs	evrpc-internal.h	/^	TAILQ_HEAD(evrpc_list, evrpc) registered_rpcs;$/;"	m	struct:evrpc_base
regname_ok	http.c	/^regname_ok(const char *s, const char *eos)$/;"	f	file:
regress_CPPFLAGS	Makefile	/^regress_CPPFLAGS = -DTINYTEST_LOCAL$/;"	m
regress_bufferevent_openssl	test/regress_ssl.c	/^regress_bufferevent_openssl(void *arg)$/;"	f	file:
regress_bufferevent_openssl_connect	test/regress_ssl.c	/^regress_bufferevent_openssl_connect(void *arg)$/;"	f	file:
regress_clean_dnsserver	test/regress_testutils.c	/^regress_clean_dnsserver(void)$/;"	f
regress_dns_server_cb	test/regress_testutils.c	/^regress_dns_server_cb(struct evdns_server_request *req, void *data)$/;"	f
regress_dns_server_table	test/regress_testutils.h	/^struct regress_dns_server_table {$/;"	s
regress_dnsserver	test/regress_testutils.c	/^regress_dnsserver(struct event_base *base, ev_uint16_t *port,$/;"	f
regress_fork	test/regress_main.c	/^regress_fork(void)$/;"	f
regress_get_dnsserver	test/regress_testutils.c	/^regress_get_dnsserver(struct event_base *base,$/;"	f
regress_get_listener_addr	test/regress_testutils.c	/^regress_get_listener_addr(struct evconnlistener *lev,$/;"	f
regress_get_socket_port	test/regress_testutils.c	/^regress_get_socket_port(evutil_socket_t fd)$/;"	f
regress_ipv4_parse	test/regress_util.c	/^regress_ipv4_parse(void *ptr)$/;"	f	file:
regress_ipv6_parse	test/regress_util.c	/^regress_ipv6_parse(void *ptr)$/;"	f	file:
regress_listener_error	test/regress_listener.c	/^regress_listener_error(void *arg)$/;"	f	file:
regress_listener_error_unlock	test/regress_listener.c	/^regress_listener_error_unlock(void *arg)$/;"	f	file:
regress_make_tmpfile	test/regress_main.c	/^regress_make_tmpfile(const void *data, size_t datalen, char **filename_out)$/;"	f
regress_openssl_type	test/regress_ssl.c	/^enum regress_openssl_type$/;"	g	file:
regress_pick_a_port	test/regress_listener.c	/^regress_pick_a_port(void *arg)$/;"	f	file:
regress_sockaddr_port_format	test/regress_util.c	/^regress_sockaddr_port_format(void *ptr)$/;"	f	file:
regress_sockaddr_port_parse	test/regress_util.c	/^regress_sockaddr_port_parse(void *ptr)$/;"	f	file:
regress_thread_SOURCES	Makefile	/^regress_thread_SOURCES = test\/regress_thread.c$/;"	m
regress_zlib_SOURCES	Makefile	/^regress_zlib_SOURCES = test\/regress_zlib.c$/;"	m
reissue_count	evdns.c	/^	int reissue_count;$/;"	m	struct:request	file:
reissue_table	test/regress_dns.c	/^static struct regress_dns_server_table reissue_table[] = {$/;"	v	typeref:struct:regress_dns_server_table	file:
remote_host	include/event2/http_struct.h	/^	char *remote_host;$/;"	m	struct:evhttp_request
remote_port	include/event2/http_struct.h	/^	ev_uint16_t remote_port;$/;"	m	struct:evhttp_request
remove_timers_cb	test/regress.c	/^static void remove_timers_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
renegotiate_at	test/regress_ssl.c	/^static int renegotiate_at = -1;$/;"	v	file:
replace_time	test/check-dumpevents.py	/^def replace_time(m):$/;"	f
reply	evdns.c	/^	struct reply reply;$/;"	m	struct:deferred_reply_callback	typeref:struct:deferred_reply_callback::reply	file:
reply	evdns.c	/^struct reply {$/;"	s	file:
reply	evrpc-internal.h	/^	void *reply;$/;"	m	struct:evrpc_req_generic
reply	evrpc-internal.h	/^	void *reply;$/;"	m	struct:evrpc_request_wrapper
reply_clear	evrpc-internal.h	/^	void (*reply_clear)(void *);$/;"	m	struct:evrpc_request_wrapper
reply_complete	include/event2/rpc_struct.h	/^	int (*reply_complete)(void *);$/;"	m	struct:evrpc
reply_free	include/event2/rpc_struct.h	/^	void (*reply_free)(void *);$/;"	m	struct:evrpc
reply_handle	evdns.c	/^reply_handle(struct request *const req, u16 flags, u32 ttl, struct reply *reply) {$/;"	f	file:
reply_marshal	include/event2/rpc_struct.h	/^	void (*reply_marshal)(struct evbuffer*, void *);$/;"	m	struct:evrpc
reply_new	include/event2/rpc_struct.h	/^	void *(*reply_new)(void *);$/;"	m	struct:evrpc
reply_new_arg	include/event2/rpc_struct.h	/^	void *reply_new_arg;$/;"	m	struct:evrpc
reply_parse	evdns.c	/^reply_parse(struct evdns_base *base, u8 *packet, int length) {$/;"	f	file:
reply_run_callback	evdns.c	/^reply_run_callback(struct event_callback *d, void *user_pointer)$/;"	f	file:
reply_schedule_callback	evdns.c	/^reply_schedule_callback(struct request *const req, u32 ttl, u32 err, struct reply *reply)$/;"	f	file:
reply_unmarshal	evrpc-internal.h	/^	int (*reply_unmarshal)(void *, struct evbuffer*);$/;"	m	struct:evrpc_request_wrapper
req	evrpc-internal.h	/^	struct evhttp_request *req;$/;"	m	struct:evrpc_request_wrapper	typeref:struct:evrpc_request_wrapper::evhttp_request
req	test/regress_dns.c	/^	struct evdns_request *req;$/;"	m	struct:testleak_env_t	typeref:struct:testleak_env_t::evdns_request	file:
req	test/regress_http.c	/^	struct evhttp_request *req;$/;"	m	struct:chunk_req_state	typeref:struct:chunk_req_state::evhttp_request	file:
req	test/regress_http.c	/^	struct evhttp_request *req;$/;"	m	struct:terminate_state	typeref:struct:terminate_state::evhttp_request	file:
req_heads	evdns.c	/^	struct request **req_heads;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::request	file:
req_waiting_head	evdns.c	/^	struct request *req_waiting_head;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::request	file:
request	evdns.c	/^	u8 *request;  \/* the dns packet data *\/$/;"	m	struct:request	file:
request	evdns.c	/^struct request {$/;"	s	file:
request	evrpc-internal.h	/^	void *request;$/;"	m	struct:evrpc_req_generic
request	evrpc-internal.h	/^	void *request;$/;"	m	struct:evrpc_request_wrapper
request	test/regress_dns.c	/^	struct evdns_getaddrinfo_request *request;$/;"	m	struct:gaic_request_status	typeref:struct:gaic_request_status::evdns_getaddrinfo_request	file:
request_appended	evdns.c	/^	unsigned request_appended :1;	\/* true if the request pointer is data which follows this struct *\/$/;"	m	struct:request	file:
request_count	test/regress_dns.c	/^static int request_count = 0;$/;"	v	file:
request_done	evdns.c	/^	unsigned request_done : 1;$/;"	m	struct:evdns_getaddrinfo_request	file:
request_find_from_trans_id	evdns.c	/^request_find_from_trans_id(struct evdns_base *base, u16 trans_id) {$/;"	f	file:
request_finished	evdns.c	/^request_finished(struct request *const req, struct request **head, int free_handle) {$/;"	f	file:
request_free	include/event2/rpc_struct.h	/^	void (*request_free)(void *);$/;"	m	struct:evrpc
request_info	test/bench_httpclient.c	/^struct request_info {$/;"	s	file:
request_len	evdns.c	/^	unsigned int request_len;$/;"	m	struct:request	file:
request_marshal	evrpc-internal.h	/^	void (*request_marshal)(struct evbuffer *, void *);$/;"	m	struct:evrpc_request_wrapper
request_new	evdns.c	/^request_new(struct evdns_base *base, struct evdns_request *handle, int type,$/;"	f	file:
request_new	include/event2/rpc_struct.h	/^	void *(*request_new)(void *);$/;"	m	struct:evrpc
request_new_arg	include/event2/rpc_struct.h	/^	void *request_new_arg;$/;"	m	struct:evrpc
request_parse	evdns.c	/^request_parse(u8 *packet, int length, struct evdns_server_port *port, struct sockaddr *addr, ev_socklen_t addrlen)$/;"	f	file:
request_reissue	evdns.c	/^request_reissue(struct request *req) {$/;"	f	file:
request_submit	evdns.c	/^request_submit(struct request *const req) {$/;"	f	file:
request_swap_ns	evdns.c	/^request_swap_ns(struct request *req, struct nameserver *ns) {$/;"	f	file:
request_trans_id_set	evdns.c	/^request_trans_id_set(struct request *const req, const u16 trans_id) {$/;"	f	file:
request_type	evdns.c	/^	u8 request_type; \/* TYPE_PTR or TYPE_A or TYPE_AAAA *\/$/;"	m	struct:request	file:
request_type	evdns.c	/^	u8 request_type;$/;"	m	struct:deferred_reply_callback	file:
request_unmarshal	include/event2/rpc_struct.h	/^	int (*request_unmarshal)(void *, struct evbuffer *);$/;"	m	struct:evrpc
requests	http-internal.h	/^	TAILQ_HEAD(evcon_requestq, evhttp_request) requests;$/;"	m	struct:evhttp_connection
requests_inflight	evdns.c	/^	int requests_inflight;$/;"	m	struct:nameserver	file:
require_features	event-internal.h	/^	enum event_method_feature require_features;$/;"	m	struct:event_config	typeref:enum:event_config::event_method_feature
res	test/regress_util.c	/^	ev_uint32_t res;$/;"	m	struct:ipv4_entry	file:
res	test/regress_util.c	/^	ev_uint32_t res[4];$/;"	m	struct:ipv6_entry	file:
resize_out_sets	select.c	/^	int resize_out_sets;$/;"	m	struct:selectop	file:
resize_out_sets	win32select.c	/^	int resize_out_sets;$/;"	m	struct:win32op	file:
resolv_conf_parse_line	evdns.c	/^resolv_conf_parse_line(struct evdns_base *base, char *const start, int flags) {$/;"	f	file:
resource	test/bench_httpclient.c	/^const char *resource = NULL;$/;"	v
respond_to_number	test/regress_ssl.c	/^respond_to_number(struct bufferevent *bev, void *ctx)$/;"	f	file:
response	evdns.c	/^	char *response;$/;"	m	struct:server_request	file:
response_class	http.c	/^struct response_class {$/;"	s	file:
response_classes	http.c	/^static const struct response_class response_classes[] = {$/;"	v	typeref:struct:response_class	file:
response_code	include/event2/http_struct.h	/^	int response_code;		\/* HTTP Response code *\/$/;"	m	struct:evhttp_request
response_code_line	include/event2/http_struct.h	/^	char *response_code_line;	\/* Readable response *\/$/;"	m	struct:evhttp_request
response_len	evdns.c	/^	size_t response_len;$/;"	m	struct:server_request	file:
responses	http.c	/^	const char **responses;$/;"	m	struct:response_class	file:
result	test/regress_dns.c	/^	int result;$/;"	m	struct:generic_dns_callback_result	file:
retry_cnt	http-internal.h	/^	int retry_cnt;			\/* retry count *\/$/;"	m	struct:evhttp_connection
retry_ev	http-internal.h	/^	struct event retry_ev;		\/* for retrying connects *\/$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::event
retry_max	http-internal.h	/^	int retry_max;			\/* maximum number of retries *\/$/;"	m	struct:evhttp_connection
roff	test/regress.c	/^static int roff;$/;"	v	file:
rpc	evrpc-internal.h	/^	struct evrpc *rpc;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evrpc
rpc_basic_client	test/regress_rpc.c	/^rpc_basic_client(void)$/;"	f	file:
rpc_basic_client_with_pause	test/regress_rpc.c	/^rpc_basic_client_with_pause(void)$/;"	f	file:
rpc_basic_message	test/regress_rpc.c	/^rpc_basic_message(void)$/;"	f	file:
rpc_basic_queued_client	test/regress_rpc.c	/^rpc_basic_queued_client(void)$/;"	f	file:
rpc_basic_test	test/regress_rpc.c	/^rpc_basic_test(void)$/;"	f	file:
rpc_client_timeout	test/regress_rpc.c	/^rpc_client_timeout(void)$/;"	f	file:
rpc_data	evrpc-internal.h	/^	struct evbuffer* rpc_data;$/;"	m	struct:evrpc_req_generic	typeref:struct:evrpc_req_generic::evbuffer
rpc_hook_add_header	test/regress_rpc.c	/^rpc_hook_add_header(void *ctx, struct evhttp_request *req,$/;"	f	file:
rpc_hook_add_meta	test/regress_rpc.c	/^rpc_hook_add_meta(void *ctx, struct evhttp_request *req,$/;"	f	file:
rpc_hook_ctx_	test/regress_rpc.c	/^struct rpc_hook_ctx_ {$/;"	s	file:
rpc_hook_pause	test/regress_rpc.c	/^rpc_hook_pause(void *ctx, struct evhttp_request *req, struct evbuffer *evbuf,$/;"	f	file:
rpc_hook_pause_cb	test/regress_rpc.c	/^rpc_hook_pause_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
rpc_hook_remove_header	test/regress_rpc.c	/^rpc_hook_remove_header(void *ctx, struct evhttp_request *req,$/;"	f	file:
rpc_pool_with_connection	test/regress_rpc.c	/^rpc_pool_with_connection(ev_uint16_t port)$/;"	f	file:
rpc_postrequest_done	test/regress_rpc.c	/^rpc_postrequest_done(struct evhttp_request *req, void *arg)$/;"	f	file:
rpc_postrequest_failure	test/regress_rpc.c	/^rpc_postrequest_failure(struct evhttp_request *req, void *arg)$/;"	f	file:
rpc_setup	test/regress_rpc.c	/^rpc_setup(struct evhttp **phttp, ev_uint16_t *pport, struct evrpc_base **pbase)$/;"	f	file:
rpc_teardown	test/regress_rpc.c	/^rpc_teardown(struct evrpc_base *base)$/;"	f	file:
rpc_test	test/regress_rpc.c	/^rpc_test(void)$/;"	f	file:
rpc_testcases	test/regress_rpc.c	/^struct testcase_t rpc_testcases[] = {$/;"	v	typeref:struct:testcase_t
rs	arc4random.c	/^static struct arc4_stream rs;$/;"	v	typeref:struct:arc4_stream	file:
rs_initialized	arc4random.c	/^static int rs_initialized;$/;"	v	file:
run	event_rpcgen.py	/^    def run(self):$/;"	m	class:CommandLine
run_legacy_test_fn	test/regress_main.c	/^run_legacy_test_fn(void *ptr)$/;"	f
run_once	test/bench.c	/^run_once(void)$/;"	f	file:
run_once	test/bench_cascade.c	/^run_once(int num_pipes)$/;"	f	file:
run_tests	test/test.sh	/^run_tests () {$/;"	f
running_loop	event-internal.h	/^	int running_loop;$/;"	m	struct:event_base
runstatedir	Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
rwcount	test/regress_ssl.c	/^struct rwcount$/;"	s	file:
s	arc4random.c	/^	unsigned char s[256];$/;"	m	struct:arc4_stream	file:
s	listener.c	/^	SOCKET s;$/;"	m	struct:accepting_socket	file:
s6_addr	ipv6-internal.h	/^	ev_uint8_t s6_addr[16];$/;"	m	struct:in6_addr
sa	evdns.c	/^		struct sockaddr sa;$/;"	m	union:hosts_entry::__anon16	typeref:struct:hosts_entry::__anon16::sockaddr	file:
sa_family_t	ipv6-internal.h	/^typedef int sa_family_t;$/;"	t
sa_port_ent	test/regress_util.c	/^static struct sa_port_ent {$/;"	s	file:
sa_port_ents	test/regress_util.c	/^} sa_port_ents[] = {$/;"	v	typeref:struct:sa_port_ent	file:
sa_pred_ent	test/regress_util.c	/^static struct sa_pred_ent {$/;"	s	file:
sa_pred_entries	test/regress_util.c	/^} sa_pred_entries[] = {$/;"	v	typeref:struct:sa_pred_ent	file:
saddr	test/test-fdleak.c	/^static struct sockaddr_in saddr;$/;"	v	typeref:struct:sockaddr_in	file:
safamily	test/regress_util.c	/^	int safamily;$/;"	m	struct:sa_port_ent	file:
sample_dns_example_DEPENDENCIES	Makefile	/^sample_dns_example_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
sample_dns_example_LDADD	Makefile	/^sample_dns_example_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_dns_example_OBJECTS	Makefile	/^sample_dns_example_OBJECTS = $(am_sample_dns_example_OBJECTS)$/;"	m
sample_dns_example_SOURCES	Makefile	/^sample_dns_example_SOURCES = sample\/dns-example.c$/;"	m
sample_event_read_fifo_DEPENDENCIES	Makefile	/^sample_event_read_fifo_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
sample_event_read_fifo_LDADD	Makefile	/^sample_event_read_fifo_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_event_read_fifo_OBJECTS	Makefile	/^sample_event_read_fifo_OBJECTS = $(am_sample_event_read_fifo_OBJECTS)$/;"	m
sample_event_read_fifo_SOURCES	Makefile	/^sample_event_read_fifo_SOURCES = sample\/event-read-fifo.c$/;"	m
sample_hello_world_DEPENDENCIES	Makefile	/^sample_hello_world_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
sample_hello_world_LDADD	Makefile	/^sample_hello_world_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_hello_world_OBJECTS	Makefile	/^sample_hello_world_OBJECTS = $(am_sample_hello_world_OBJECTS)$/;"	m
sample_hello_world_SOURCES	Makefile	/^sample_hello_world_SOURCES = sample\/hello-world.c$/;"	m
sample_http_connect_DEPENDENCIES	Makefile	/^sample_http_connect_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
sample_http_connect_LDADD	Makefile	/^sample_http_connect_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_http_connect_OBJECTS	Makefile	/^sample_http_connect_OBJECTS = $(am_sample_http_connect_OBJECTS)$/;"	m
sample_http_connect_SOURCES	Makefile	/^sample_http_connect_SOURCES = sample\/http-connect.c$/;"	m
sample_http_server_DEPENDENCIES	Makefile	/^sample_http_server_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
sample_http_server_LDADD	Makefile	/^sample_http_server_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_http_server_OBJECTS	Makefile	/^sample_http_server_OBJECTS = $(am_sample_http_server_OBJECTS)$/;"	m
sample_http_server_SOURCES	Makefile	/^sample_http_server_SOURCES = sample\/http-server.c$/;"	m
sample_https_client_DEPENDENCIES	Makefile	/^sample_https_client_DEPENDENCIES = libevent.la \\$/;"	m
sample_https_client_INCLUDES	Makefile	/^sample_https_client_INCLUDES = $(OPENSSL_INCS)$/;"	m
sample_https_client_LDADD	Makefile	/^sample_https_client_LDADD = libevent.la libevent_openssl.la ${OPENSSL_LIBS} ${OPENSSL_LIBADD}$/;"	m
sample_https_client_OBJECTS	Makefile	/^sample_https_client_OBJECTS = $(am_sample_https_client_OBJECTS)$/;"	m
sample_https_client_SOURCES	Makefile	/^sample_https_client_SOURCES = \\$/;"	m
sample_le_proxy_DEPENDENCIES	Makefile	/^sample_le_proxy_DEPENDENCIES = libevent.la \\$/;"	m
sample_le_proxy_INCLUDES	Makefile	/^sample_le_proxy_INCLUDES = $(OPENSSL_INCS)$/;"	m
sample_le_proxy_LDADD	Makefile	/^sample_le_proxy_LDADD = libevent.la libevent_openssl.la ${OPENSSL_LIBS} ${OPENSSL_LIBADD}$/;"	m
sample_le_proxy_OBJECTS	Makefile	/^sample_le_proxy_OBJECTS = $(am_sample_le_proxy_OBJECTS)$/;"	m
sample_le_proxy_SOURCES	Makefile	/^sample_le_proxy_SOURCES = sample\/le-proxy.c$/;"	m
sample_signal_test_DEPENDENCIES	Makefile	/^sample_signal_test_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
sample_signal_test_LDADD	Makefile	/^sample_signal_test_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_signal_test_OBJECTS	Makefile	/^sample_signal_test_OBJECTS = $(am_sample_signal_test_OBJECTS)$/;"	m
sample_signal_test_SOURCES	Makefile	/^sample_signal_test_SOURCES = sample\/signal-test.c$/;"	m
sample_time_test_DEPENDENCIES	Makefile	/^sample_time_test_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
sample_time_test_LDADD	Makefile	/^sample_time_test_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
sample_time_test_OBJECTS	Makefile	/^sample_time_test_OBJECTS = $(am_sample_time_test_OBJECTS)$/;"	m
sample_time_test_SOURCES	Makefile	/^sample_time_test_SOURCES = sample\/time-test.c$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scheme	http.c	/^	char *scheme; \/* scheme; e.g http, ftp etc *\/$/;"	m	struct:evhttp_uri	file:
scheme_ok	http.c	/^scheme_ok(const char *s, const char *eos)$/;"	f	file:
search_cancel_server_cb	test/regress_dns.c	/^search_cancel_server_cb(struct evdns_server_request *req, void *data)$/;"	f	file:
search_domain	evdns.c	/^struct search_domain {$/;"	s	file:
search_flags	evdns.c	/^	int search_flags;$/;"	m	struct:evdns_request	file:
search_index	evdns.c	/^	int search_index;$/;"	m	struct:evdns_request	file:
search_make_new	evdns.c	/^search_make_new(const struct search_state *const state, int n, const char *const base_name) {$/;"	f	file:
search_origname	evdns.c	/^	char *search_origname;	\/* needs to be free()ed *\/$/;"	m	struct:evdns_request	file:
search_postfix_add	evdns.c	/^search_postfix_add(struct evdns_base *base, const char *domain) {$/;"	f	file:
search_postfix_clear	evdns.c	/^search_postfix_clear(struct evdns_base *base) {$/;"	f	file:
search_request_finished	evdns.c	/^search_request_finished(struct evdns_request *const handle) {$/;"	f	file:
search_request_new	evdns.c	/^search_request_new(struct evdns_base *base, struct evdns_request *handle,$/;"	f	file:
search_reverse	evdns.c	/^search_reverse(struct evdns_base *base) {$/;"	f	file:
search_set_from_hostname	evdns.c	/^search_set_from_hostname(struct evdns_base *base) {$/;"	f	file:
search_state	evdns.c	/^	struct search_state *search_state;$/;"	m	struct:evdns_request	typeref:struct:evdns_request::search_state	file:
search_state	evdns.c	/^struct search_state {$/;"	s	file:
search_state_decref	evdns.c	/^search_state_decref(struct search_state *const state) {$/;"	f	file:
search_state_new	evdns.c	/^search_state_new(void) {$/;"	f	file:
search_table	test/regress_dns.c	/^static struct regress_dns_server_table search_table[] = {$/;"	v	typeref:struct:regress_dns_server_table	file:
search_table	test/regress_http.c	/^static struct regress_dns_server_table search_table[] = {$/;"	v	typeref:struct:regress_dns_server_table	file:
search_try_next	evdns.c	/^search_try_next(struct evdns_request *const handle) {$/;"	f	file:
seconds_per_tick	test/test-ratelim.c	/^static double seconds_per_tick = 0.0;$/;"	v	file:
seed	util-internal.h	/^	ev_uint32_t seed;$/;"	m	struct:evutil_weakrand_state
seen	test/regress_testutils.h	/^	int seen;$/;"	m	struct:regress_dns_server_table
segment	evbuffer-internal.h	/^	struct evbuffer_file_segment *segment;$/;"	m	struct:evbuffer_chain_file_segment	typeref:struct:evbuffer_chain_file_segment::evbuffer_file_segment
select_add	select.c	/^select_add(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
select_dealloc	select.c	/^select_dealloc(struct event_base *base)$/;"	f	file:
select_del	select.c	/^select_del(struct event_base *base, int fd, short old, short events, void *p)$/;"	f	file:
select_dispatch	select.c	/^select_dispatch(struct event_base *base, struct timeval *tv)$/;"	f	file:
select_free_selectop	select.c	/^select_free_selectop(struct selectop *sop)$/;"	f	file:
select_init	select.c	/^select_init(struct event_base *base)$/;"	f	file:
select_resize	select.c	/^select_resize(struct selectop *sop, int fdsz)$/;"	f	file:
selectop	select.c	/^struct selectop {$/;"	s	file:
selectops	select.c	/^const struct eventop selectops = {$/;"	v	typeref:struct:eventop
self_draining_callback	test/regress_buffer.c	/^self_draining_callback(struct evbuffer *evbuffer, size_t old_len,$/;"	f	file:
send_a_byte_cb	test/regress.c	/^static void send_a_byte_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
send_document_cb	sample/http-server.c	/^send_document_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
sender_errorcb	test/regress_bufferevent.c	/^sender_errorcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
sender_writecb	test/regress_bufferevent.c	/^sender_writecb(struct bufferevent *bev, void *ctx)$/;"	f	file:
server_error_phrases	http.c	/^static const char *server_error_phrases[] = {$/;"	v	file:
server_event_cb	test/test-fdleak.c	/^server_event_cb(struct bufferevent *bev, short events, void *ctx)$/;"	f	file:
server_head	evdns.c	/^	struct nameserver *server_head;$/;"	m	struct:evdns_base	typeref:struct:evdns_base::nameserver	file:
server_port_flush	evdns.c	/^server_port_flush(struct evdns_server_port *port)$/;"	f	file:
server_port_free	evdns.c	/^server_port_free(struct evdns_server_port *port)$/;"	f	file:
server_port_read	evdns.c	/^server_port_read(struct evdns_server_port *s) {$/;"	f	file:
server_port_ready_callback	evdns.c	/^server_port_ready_callback(evutil_socket_t fd, short events, void *arg) {$/;"	f	file:
server_read_cb	test/test-fdleak.c	/^server_read_cb(struct bufferevent *bev, void *ctx)$/;"	f	file:
server_reply_item	evdns.c	/^struct server_reply_item {$/;"	s	file:
server_request	evdns.c	/^struct server_request {$/;"	s	file:
server_request_free	evdns.c	/^server_request_free(struct server_request *req)$/;"	f	file:
server_request_free_answers	evdns.c	/^server_request_free_answers(struct server_request *req)$/;"	f	file:
set_handshake_callbacks	bufferevent_openssl.c	/^set_handshake_callbacks(struct bufferevent_openssl *bev_ssl, evutil_socket_t fd)$/;"	f	file:
set_open_callbacks	bufferevent_openssl.c	/^set_open_callbacks(struct bufferevent_openssl *bev_ssl, evutil_socket_t fd)$/;"	f	file:
set_random_timeout	test/regress_minheap.c	/^set_random_timeout(struct event *ev)$/;"	f	file:
set_rbow	bufferevent_openssl.c	/^set_rbow(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
set_wbor	bufferevent_openssl.c	/^set_wbor(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
setenv	test/regress.c	/^static void setenv(const char *k, const char *v, int o_)$/;"	f	file:
setup	test/test.sh	/^setup () {$/;"	f
setup	test/tinytest.h	/^	const struct testcase_setup_t *setup; \/**< Optional setup\/cleanup fns*\/$/;"	m	struct:testcase_t	typeref:struct:testcase_t::testcase_setup_t
setup_data	test/regress.h	/^	void *setup_data;$/;"	m	struct:basic_test_data
setup_data	test/tinytest.h	/^	void *setup_data; \/**< Extra data usable by setup function *\/$/;"	m	struct:testcase_t
setup_fn	test/tinytest.h	/^	void *(*setup_fn)(const struct testcase_t *);$/;"	m	struct:testcase_setup_t
setup_passthrough	test/regress_buffer.c	/^setup_passthrough(const struct testcase_t *testcase)$/;"	f	file:
setup_test	test/regress.c	289;"	d	file:
sh_old	evsignal-internal.h	/^	ev_sighandler_t **sh_old;$/;"	m	struct:evsig_info
sh_old	evsignal-internal.h	/^	struct sigaction **sh_old;$/;"	m	struct:evsig_info	typeref:struct:evsig_info::sigaction
sh_old_max	evsignal-internal.h	/^	int sh_old_max;$/;"	m	struct:evsig_info
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shutdown	iocp-internal.h	/^	short shutdown;$/;"	m	struct:event_iocp_port
shutdown	listener.c	/^	void (*shutdown)(struct evconnlistener *);$/;"	m	struct:evconnlistener_ops	file:
shutdownSemaphore	iocp-internal.h	/^	HANDLE *shutdownSemaphore;$/;"	m	struct:event_iocp_port
shutting_down	listener.c	/^	unsigned shutting_down : 1;$/;"	m	struct:evconnlistener_iocp	file:
sig	event-internal.h	/^	struct evsig_info sig;$/;"	m	struct:event_base	typeref:struct:event_base::evsig_info
sigchld_cb	test/regress_thread.c	/^sigchld_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
sigmap	event-internal.h	/^	struct event_signal_map sigmap;$/;"	m	struct:event_base	typeref:struct:event_base::event_signal_map
signal_add	include/event2/event_compat.h	212;"	d
signal_cb	sample/event-read-fifo.c	/^signal_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
signal_cb	sample/hello-world.c	/^signal_cb(evutil_socket_t sig, short events, void *user_data)$/;"	f	file:
signal_cb	sample/signal-test.c	/^signal_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
signal_cb	test/regress.c	/^signal_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
signal_cb_sa	test/regress.c	/^signal_cb_sa(int sig)$/;"	f	file:
signal_cb_swp	test/regress.c	/^signal_cb_swp(int sig, short event, void *arg)$/;"	f	file:
signal_condition	include/event2/thread.h	/^	int (*signal_condition)(void *cond, int broadcast);$/;"	m	struct:evthread_condition_callbacks
signal_del	include/event2/event_compat.h	215;"	d
signal_initialized	include/event2/event_compat.h	217;"	d
signal_pending	include/event2/event_compat.h	216;"	d
signal_set	include/event2/event_compat.h	213;"	d
signal_testcases	test/regress.c	/^struct testcase_t signal_testcases[] = {$/;"	v	typeref:struct:testcase_t
signals_are_broken	win32select.c	/^	unsigned signals_are_broken : 1;$/;"	m	struct:win32op	file:
signature	evthread.c	/^	unsigned signature;$/;"	m	struct:debug_lock	file:
simple_callback	test/regress_finalize.c	/^simple_callback(struct event_callback *evcb, void *arg)$/;"	f	file:
simple_child_read_cb	test/regress.c	/^simple_child_read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
simple_read_cb	test/regress.c	/^simple_read_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
simple_write_cb	test/regress.c	/^simple_write_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
simpleclose_close_fd_cb	test/regress.c	/^simpleclose_close_fd_cb(evutil_socket_t s, short what, void *ptr)$/;"	f	file:
simpleread_multiple_cb	test/regress.c	/^simpleread_multiple_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
sin	evdns.c	/^		struct sockaddr_in sin;$/;"	m	union:hosts_entry::__anon16	typeref:struct:hosts_entry::__anon16::sockaddr_in	file:
sin6	evdns.c	/^		struct sockaddr_in6 sin6;$/;"	m	union:hosts_entry::__anon16	typeref:struct:hosts_entry::__anon16::sockaddr_in6	file:
sin6_addr	ipv6-internal.h	/^	struct in6_addr sin6_addr;$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr
sin6_family	ipv6-internal.h	/^	sa_family_t sin6_family;$/;"	m	struct:sockaddr_in6
sin6_port	ipv6-internal.h	/^	ev_uint16_t sin6_port;$/;"	m	struct:sockaddr_in6
sizes	test/regress_iocp.c	/^	ev_ssize_t sizes[MAX_CALLS];$/;"	m	struct:dummy_overlapped	file:
snprintf	sample/https-client.c	28;"	d	file:
snprintf	test/tinytest_local.h	10;"	d
snprintf	test/tinytest_local.h	12;"	d
sock_err_fn	test/regress_util.c	/^sock_err_fn(void)$/;"	f	file:
sock_perror	test/test-dumpevents.c	/^sock_perror(const char *s)$/;"	f	file:
sockaddr_getport	evdns.c	/^sockaddr_getport(struct sockaddr *sa)$/;"	f	file:
sockaddr_in6	ipv6-internal.h	/^struct sockaddr_in6 {$/;"	s
sockaddr_setport	evdns.c	/^sockaddr_setport(struct sockaddr *sa, ev_uint16_t port)$/;"	f	file:
sockaddr_storage	util-internal.h	/^struct sockaddr_storage {$/;"	s
socket	evdns.c	/^	evutil_socket_t socket;	 \/* a connected UDP socket *\/$/;"	m	struct:nameserver	file:
socket	evdns.c	/^	evutil_socket_t socket; \/* socket we use to read queries and write replies. *\/$/;"	m	struct:evdns_server_port	file:
sockets	http-internal.h	/^	TAILQ_HEAD(boundq, evhttp_bound_socket) sockets;$/;"	m	struct:evhttp
source	evbuffer-internal.h	/^	struct evbuffer *source;$/;"	m	struct:evbuffer_multicast_parent	typeref:struct:evbuffer_multicast_parent::evbuffer
srcdir	Makefile	/^srcdir = .$/;"	m
ss_family	include/event2/util.h	306;"	d
ss_family	util-internal.h	348;"	d
ss_padding	util-internal.h	/^		char ss_padding[128];$/;"	m	union:sockaddr_storage::__anon11
ss_sa	util-internal.h	/^		struct sockaddr ss_sa;$/;"	m	union:sockaddr_storage::__anon11	typeref:struct:sockaddr_storage::__anon11::sockaddr
ss_sin	util-internal.h	/^		struct sockaddr_in ss_sin;$/;"	m	union:sockaddr_storage::__anon11	typeref:struct:sockaddr_storage::__anon11::sockaddr_in
ss_sin6	util-internal.h	/^		struct sockaddr_in6 ss_sin6;$/;"	m	union:sockaddr_storage::__anon11	typeref:struct:sockaddr_storage::__anon11::sockaddr_in6
ss_union	util-internal.h	/^	} ss_union;$/;"	m	struct:sockaddr_storage	typeref:union:sockaddr_storage::__anon11
ssize_t	evutil_rand.c	120;"	d	file:
ssl	bufferevent_openssl.c	/^	SSL *ssl;$/;"	m	struct:bufferevent_openssl	file:
ssl	test/regress_http.c	/^	int ssl;$/;"	m	struct:http_server	file:
ssl_ctx	sample/le-proxy.c	/^static SSL_CTX *ssl_ctx = NULL;$/;"	v	file:
ssl_getcert	test/regress_ssl.c	/^ssl_getcert(void)$/;"	f
ssl_getkey	test/regress_ssl.c	/^ssl_getkey(void)$/;"	f
ssl_testcases	test/regress_ssl.c	/^struct testcase_t ssl_testcases[] = {$/;"	v	typeref:struct:testcase_t
start_accepting	listener.c	/^start_accepting(struct accepting_socket *as)$/;"	f	file:
start_client	test/test-fdleak.c	/^start_client(struct event_base *base)$/;"	f	file:
start_cpu_usage_timer	test/test-changelist.c	/^start_cpu_usage_timer(struct cpu_usage_timer *timer)$/;"	f	file:
start_loop	test/test-fdleak.c	/^start_loop(void)$/;"	f	file:
start_reading	bufferevent_openssl.c	/^start_reading(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
start_threads_callback	test/regress_thread.c	/^start_threads_callback(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
start_writing	bufferevent_openssl.c	/^start_writing(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
started	test/bench_httpclient.c	/^	struct timeval started;$/;"	m	struct:request_info	typeref:struct:request_info::timeval	file:
stat	buffer.c	3280;"	d	file:
stat	evutil.c	99;"	d	file:
stat	sample/http-server.c	52;"	d	file:
state	bufferevent_openssl.c	/^	unsigned state : 2;$/;"	m	struct:bufferevent_openssl	file:
state	evdns.c	/^	char state;  \/* zero if we think that this server is down *\/$/;"	m	struct:nameserver	file:
state	http-internal.h	/^	enum evhttp_connection_state state;$/;"	m	struct:evhttp_connection	typeref:enum:evhttp_connection::evhttp_connection_state
states	test/test-ratelim.c	/^struct client_state *states;$/;"	v	typeref:struct:client_state
status	test/regress_bufferevent.c	/^	} status;$/;"	m	struct:__anon2	typeref:enum:__anon2::__anon3	file:
status	test/regress_util.c	/^	enum entry_status status;$/;"	m	struct:ipv4_entry	typeref:enum:ipv4_entry::entry_status	file:
status	test/regress_util.c	/^	enum entry_status status;$/;"	m	struct:ipv6_entry	typeref:enum:ipv6_entry::entry_status	file:
stop_accepting	listener.c	/^stop_accepting(struct accepting_socket *as)$/;"	f	file:
stop_reading	bufferevent_openssl.c	/^stop_reading(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
stop_when_connected	test/regress_ssl.c	/^static int stop_when_connected = 0;$/;"	v	file:
stop_writing	bufferevent_openssl.c	/^stop_writing(struct bufferevent_openssl *bev_ssl)$/;"	f	file:
str_matches_option	evdns.c	/^str_matches_option(const char *s1, const char *optionname)$/;"	f	file:
strcasecmp	sample/https-client.c	29;"	d	file:
string_num_dots	evdns.c	/^string_num_dots(const char *s) {$/;"	f	file:
strlcpy	strlcpy-internal.h	14;"	d
strsep	http.c	/^strsep(char **s, const char *del)$/;"	f	file:
strtoint	evdns.c	/^strtoint(const char *const str)$/;"	f	file:
strtoint_clipped	evdns.c	/^strtoint_clipped(const char *const str, int min, int max)$/;"	f	file:
strtok_r	evdns.c	/^strtok_r(char *s, const char *delim, char **state) {$/;"	f	file:
strtolower	test/regress_testutils.c	/^static void strtolower(char *s)$/;"	f	file:
structdef	event_rpcgen.py	/^structdef = re.compile(r'^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$')$/;"	v
structref	event_rpcgen.py	/^structref = re.compile(r'^struct\\[([a-zA-Z_][a-zA-Z0-9_]*)\\]$')$/;"	v
subdir	Makefile	/^subdir = .$/;"	m
success_phrases	http.c	/^static const char *success_phrases[] = {$/;"	v	file:
supported_locktypes	include/event2/thread.h	/^	unsigned supported_locktypes;$/;"	m	struct:evthread_lock_callbacks
syntax	sample/http-server.c	/^syntax(void)$/;"	f	file:
syntax	sample/https-client.c	/^syntax(void)$/;"	f	file:
syntax	sample/le-proxy.c	/^syntax(void)$/;"	f	file:
sys	event_rpcgen.py	/^import sys$/;"	i
sys	test/check-dumpevents.py	/^import sys$/;"	i
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
t	test/regress_util.c	/^	time_t t;$/;"	m	struct:date_rfc1123_case	file:
tabf_cb	test/regress.c	/^tabf_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
table_entry	sample/http-server.c	/^static const struct table_entry {$/;"	s	file:
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
tcalled	test/regress.c	/^static struct timeval tcalled;$/;"	v	typeref:struct:timeval	file:
terminate_chunked_cb	test/regress_http.c	/^terminate_chunked_cb(struct evhttp_request *req, void *arg)$/;"	f	file:
terminate_chunked_client	test/regress_http.c	/^terminate_chunked_client(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
terminate_chunked_close_cb	test/regress_http.c	/^terminate_chunked_close_cb(struct evhttp_connection *evcon, void *arg)$/;"	f	file:
terminate_chunked_trickle_cb	test/regress_http.c	/^terminate_chunked_trickle_cb(evutil_socket_t fd, short events, void *arg)$/;"	f	file:
terminate_readcb	test/regress_http.c	/^terminate_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
terminate_state	test/regress_http.c	/^struct terminate_state {$/;"	s	file:
test_active_by_fd	test/regress.c	/^test_active_by_fd(void *arg)$/;"	f	file:
test_active_later	test/regress.c	/^test_active_later(void *ptr)$/;"	f	file:
test_ai_eq	test/regress.h	115;"	d
test_ai_eq_	test/regress_util.c	/^test_ai_eq_(const struct evutil_addrinfo *ai, const char *sockaddr_port,$/;"	f
test_bad_assign	test/regress.c	/^test_bad_assign(void *ptr)$/;"	f	file:
test_bad_reentrant	test/regress.c	/^test_bad_reentrant(void *ptr)$/;"	f	file:
test_base_environ	test/regress.c	/^test_base_environ(void *arg)$/;"	f	file:
test_base_features	test/regress.c	/^test_base_features(void *arg)$/;"	f	file:
test_bench_DEPENDENCIES	Makefile	/^test_bench_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
test_bench_LDADD	Makefile	/^test_bench_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
test_bench_OBJECTS	Makefile	/^test_bench_OBJECTS = $(am_test_bench_OBJECTS)$/;"	m
test_bench_SOURCES	Makefile	/^test_bench_SOURCES = test\/bench.c$/;"	m
test_bench_cascade_DEPENDENCIES	Makefile	/^test_bench_cascade_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
test_bench_cascade_LDADD	Makefile	/^test_bench_cascade_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
test_bench_cascade_OBJECTS	Makefile	/^test_bench_cascade_OBJECTS = $(am_test_bench_cascade_OBJECTS)$/;"	m
test_bench_cascade_SOURCES	Makefile	/^test_bench_cascade_SOURCES = test\/bench_cascade.c$/;"	m
test_bench_http_DEPENDENCIES	Makefile	/^test_bench_http_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la$/;"	m
test_bench_http_LDADD	Makefile	/^test_bench_http_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la$/;"	m
test_bench_http_OBJECTS	Makefile	/^test_bench_http_OBJECTS = $(am_test_bench_http_OBJECTS)$/;"	m
test_bench_http_SOURCES	Makefile	/^test_bench_http_SOURCES = test\/bench_http.c$/;"	m
test_bench_httpclient_DEPENDENCIES	Makefile	/^test_bench_httpclient_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
test_bench_httpclient_LDADD	Makefile	/^test_bench_httpclient_LDADD = $(LIBEVENT_GC_SECTIONS) libevent_core.la$/;"	m
test_bench_httpclient_OBJECTS	Makefile	/^test_bench_httpclient_OBJECTS = $(am_test_bench_httpclient_OBJECTS)$/;"	m
test_bench_httpclient_SOURCES	Makefile	/^test_bench_httpclient_SOURCES = test\/bench_httpclient.c$/;"	m
test_bufferevent	test/regress_bufferevent.c	/^static void test_bufferevent(void) { test_bufferevent_impl(0, -1); }$/;"	f	file:
test_bufferevent_connect	test/regress_bufferevent.c	/^test_bufferevent_connect(void *arg)$/;"	f	file:
test_bufferevent_connect_fail	test/regress_bufferevent.c	/^test_bufferevent_connect_fail(void *arg)$/;"	f	file:
test_bufferevent_connect_fail_eventcb	test/regress_bufferevent.c	/^test_bufferevent_connect_fail_eventcb(void *arg)$/;"	f	file:
test_bufferevent_connect_hostname	test/regress_dns.c	/^test_bufferevent_connect_hostname(void *arg)$/;"	f	file:
test_bufferevent_filter_data_stuck	test/regress_bufferevent.c	/^test_bufferevent_filter_data_stuck(void *arg)$/;"	f	file:
test_bufferevent_filters	test/regress_bufferevent.c	/^static void test_bufferevent_filters(void)$/;"	f	file:
test_bufferevent_filters_disable	test/regress_bufferevent.c	/^static void test_bufferevent_filters_disable(void)$/;"	f	file:
test_bufferevent_filters_impl	test/regress_bufferevent.c	/^test_bufferevent_filters_impl(int use_pair, int disable)$/;"	f	file:
test_bufferevent_flush_finished	test/regress_bufferevent.c	/^static void test_bufferevent_flush_finished(void) { test_bufferevent_impl(0, BEV_FINISHED); }$/;"	f	file:
test_bufferevent_flush_flush	test/regress_bufferevent.c	/^static void test_bufferevent_flush_flush(void) { test_bufferevent_impl(0, BEV_FLUSH); }$/;"	f	file:
test_bufferevent_flush_normal	test/regress_bufferevent.c	/^static void test_bufferevent_flush_normal(void) { test_bufferevent_impl(0, BEV_NORMAL); }$/;"	f	file:
test_bufferevent_impl	test/regress_bufferevent.c	/^test_bufferevent_impl(int use_pair, int flush)$/;"	f	file:
test_bufferevent_pair	test/regress_bufferevent.c	/^static void test_bufferevent_pair(void) { test_bufferevent_impl(1, -1); }$/;"	f	file:
test_bufferevent_pair_filters	test/regress_bufferevent.c	/^static void test_bufferevent_pair_filters(void)$/;"	f	file:
test_bufferevent_pair_filters_disable	test/regress_bufferevent.c	/^static void test_bufferevent_pair_filters_disable(void)$/;"	f	file:
test_bufferevent_pair_flush	test/regress_bufferevent.c	/^test_bufferevent_pair_flush(void *arg)$/;"	f	file:
test_bufferevent_pair_flush_finished	test/regress_bufferevent.c	/^static void test_bufferevent_pair_flush_finished(void) { test_bufferevent_impl(1, BEV_FINISHED); }$/;"	f	file:
test_bufferevent_pair_flush_flush	test/regress_bufferevent.c	/^static void test_bufferevent_pair_flush_flush(void) { test_bufferevent_impl(1, BEV_FLUSH); }$/;"	f	file:
test_bufferevent_pair_flush_normal	test/regress_bufferevent.c	/^static void test_bufferevent_pair_flush_normal(void) { test_bufferevent_impl(1, BEV_NORMAL); }$/;"	f	file:
test_bufferevent_pair_release_lock	test/regress_bufferevent.c	/^static void test_bufferevent_pair_release_lock(void *arg)$/;"	f	file:
test_bufferevent_pair_watermarks	test/regress_bufferevent.c	/^test_bufferevent_pair_watermarks(void)$/;"	f	file:
test_bufferevent_socket_filter_inactive	test/regress_bufferevent.c	/^test_bufferevent_socket_filter_inactive(void *arg)$/;"	f	file:
test_bufferevent_timeouts	test/regress_bufferevent.c	/^test_bufferevent_timeouts(void *arg)$/;"	f	file:
test_bufferevent_trigger	test/regress_bufferevent.c	/^test_bufferevent_trigger(void *arg)$/;"	f	file:
test_bufferevent_watermarks	test/regress_bufferevent.c	/^test_bufferevent_watermarks(void)$/;"	f	file:
test_bufferevent_watermarks_impl	test/regress_bufferevent.c	/^test_bufferevent_watermarks_impl(int use_pair)$/;"	f	file:
test_bufferevent_zlib	test/regress_zlib.c	/^test_bufferevent_zlib(void *arg)$/;"	f
test_combined	test/regress.c	/^test_combined(void)$/;"	f	file:
test_common_timeout	test/regress.c	/^test_common_timeout(void *ptr)$/;"	f	file:
test_dbg_leak_cancel	test/regress_dns.c	/^test_dbg_leak_cancel(void *env_)$/;"	f	file:
test_dbg_leak_shutdown	test/regress_dns.c	/^test_dbg_leak_shutdown(void *env_)$/;"	f	file:
test_del_wait	test/regress.c	/^test_del_wait(void)$/;"	f	file:
test_dup_fd	test/regress.c	/^test_dup_fd(void *arg)$/;"	f	file:
test_edgetriggered	test/regress_et.c	/^test_edgetriggered(void *et)$/;"	f	file:
test_edgetriggered_mix_error	test/regress_et.c	/^test_edgetriggered_mix_error(void *data_)$/;"	f	file:
test_evbuffer	test/regress_buffer.c	/^test_evbuffer(void *ptr)$/;"	f	file:
test_evbuffer_add1	test/regress_buffer.c	/^test_evbuffer_add1(void *ptr)$/;"	f	file:
test_evbuffer_add2	test/regress_buffer.c	/^test_evbuffer_add2(void *ptr)$/;"	f	file:
test_evbuffer_add_buffer_with_empty	test/regress_buffer.c	/^test_evbuffer_add_buffer_with_empty(void *ptr)$/;"	f	file:
test_evbuffer_add_buffer_with_empty2	test/regress_buffer.c	/^test_evbuffer_add_buffer_with_empty2(void *ptr)$/;"	f	file:
test_evbuffer_add_file	test/regress_buffer.c	/^test_evbuffer_add_file(void *ptr)$/;"	f	file:
test_evbuffer_add_iovec	test/regress_buffer.c	/^test_evbuffer_add_iovec(void * ptr)$/;"	f	file:
test_evbuffer_add_reference	test/regress_buffer.c	/^test_evbuffer_add_reference(void *ptr)$/;"	f	file:
test_evbuffer_callbacks	test/regress_buffer.c	/^test_evbuffer_callbacks(void *ptr)$/;"	f	file:
test_evbuffer_copyout	test/regress_buffer.c	/^test_evbuffer_copyout(void *dummy)$/;"	f	file:
test_evbuffer_expand	test/regress_buffer.c	/^test_evbuffer_expand(void *ptr)$/;"	f	file:
test_evbuffer_expand_overflow	test/regress_buffer.c	/^test_evbuffer_expand_overflow(void *ptr)$/;"	f	file:
test_evbuffer_file_segment_add_cleanup_cb	test/regress_buffer.c	/^test_evbuffer_file_segment_add_cleanup_cb(void* ptr)$/;"	f	file:
test_evbuffer_find	test/regress_buffer.c	/^test_evbuffer_find(void *ptr)$/;"	f	file:
test_evbuffer_freeze	test/regress_buffer.c	/^test_evbuffer_freeze(void *ptr)$/;"	f	file:
test_evbuffer_iterative	test/regress_buffer.c	/^test_evbuffer_iterative(void *ptr)$/;"	f	file:
test_evbuffer_multicast	test/regress_buffer.c	/^test_evbuffer_multicast(void *ptr)$/;"	f	file:
test_evbuffer_multicast_drain	test/regress_buffer.c	/^test_evbuffer_multicast_drain(void *ptr)$/;"	f	file:
test_evbuffer_peek	test/regress_buffer.c	/^test_evbuffer_peek(void *info)$/;"	f	file:
test_evbuffer_peek_first_gt	test/regress_buffer.c	/^test_evbuffer_peek_first_gt(void *info)$/;"	f	file:
test_evbuffer_prepend	test/regress_buffer.c	/^test_evbuffer_prepend(void *ptr)$/;"	f	file:
test_evbuffer_ptr_set	test/regress_buffer.c	/^test_evbuffer_ptr_set(void *ptr)$/;"	f	file:
test_evbuffer_readln	test/regress_buffer.c	/^test_evbuffer_readln(void *ptr)$/;"	f	file:
test_evbuffer_reference	test/regress_buffer.c	/^test_evbuffer_reference(void *ptr)$/;"	f	file:
test_evbuffer_reference2	test/regress_buffer.c	/^test_evbuffer_reference2(void *ptr)$/;"	f	file:
test_evbuffer_remove_buffer_with_empty	test/regress_buffer.c	/^test_evbuffer_remove_buffer_with_empty(void *ptr)$/;"	f	file:
test_evbuffer_remove_buffer_with_empty2	test/regress_buffer.c	/^test_evbuffer_remove_buffer_with_empty2(void *ptr)$/;"	f	file:
test_evbuffer_remove_buffer_with_empty3	test/regress_buffer.c	/^test_evbuffer_remove_buffer_with_empty3(void *ptr)$/;"	f	file:
test_evbuffer_reserve2	test/regress_buffer.c	/^test_evbuffer_reserve2(void *ptr)$/;"	f	file:
test_evbuffer_reserve_many	test/regress_buffer.c	/^test_evbuffer_reserve_many(void *ptr)$/;"	f	file:
test_evbuffer_search	test/regress_buffer.c	/^test_evbuffer_search(void *ptr)$/;"	f	file:
test_evbuffer_search_eol	test/regress_buffer.c	/^test_evbuffer_search_eol(void *ptr)$/;"	f	file:
test_event_assign_selfarg	test/regress.c	/^test_event_assign_selfarg(void *ptr)$/;"	f	file:
test_event_base_get_max_events	test/regress.c	/^test_event_base_get_max_events(void *ptr)$/;"	f	file:
test_event_base_get_num_events	test/regress.c	/^test_event_base_get_num_events(void *ptr)$/;"	f	file:
test_event_base_new	test/regress.c	/^test_event_base_new(void *ptr)$/;"	f	file:
test_event_calloc	test/regress_util.c	/^test_event_calloc(void *arg)$/;"	f	file:
test_event_closed_fd_poll	test/regress.c	/^test_event_closed_fd_poll(void *arg)$/;"	f	file:
test_event_foreach	test/regress.c	/^test_event_foreach(void *arg)$/;"	f	file:
test_event_malloc	test/regress_util.c	/^test_event_malloc(void *arg)$/;"	f	file:
test_event_new_selfarg	test/regress.c	/^test_event_new_selfarg(void *ptr)$/;"	f	file:
test_event_once	test/regress.c	/^test_event_once(void *ptr)$/;"	f	file:
test_event_once_never	test/regress.c	/^test_event_once_never(void *ptr)$/;"	f	file:
test_event_pending	test/regress.c	/^test_event_pending(void *ptr)$/;"	f	file:
test_event_remove_timeout	test/regress.c	/^test_event_remove_timeout(void *ptr)$/;"	f	file:
test_event_strdup	test/regress_util.c	/^test_event_strdup(void *arg)$/;"	f	file:
test_evutil_casecmp	test/regress_util.c	/^test_evutil_casecmp(void *ptr)$/;"	f	file:
test_evutil_date_rfc1123	test/regress_util.c	/^test_evutil_date_rfc1123(void *arg)$/;"	f	file:
test_evutil_getaddrinfo	test/regress_util.c	/^test_evutil_getaddrinfo(void *arg)$/;"	f	file:
test_evutil_getaddrinfo_live	test/regress_util.c	/^test_evutil_getaddrinfo_live(void *arg)$/;"	f	file:
test_evutil_integers	test/regress_util.c	/^test_evutil_integers(void *arg)$/;"	f	file:
test_evutil_loadsyslib	test/regress_util.c	/^test_evutil_loadsyslib(void *arg)$/;"	f	file:
test_evutil_log	test/regress_util.c	/^test_evutil_log(void *ptr)$/;"	f	file:
test_evutil_monotonic_prc	test/regress_util.c	/^test_evutil_monotonic_prc(void *data_)$/;"	f	file:
test_evutil_monotonic_res	test/regress_util.c	/^test_evutil_monotonic_res(void *data_)$/;"	f	file:
test_evutil_rand	test/regress_util.c	/^test_evutil_rand(void *arg)$/;"	f	file:
test_evutil_rtrim	test/regress_util.c	/^test_evutil_rtrim(void *ptr)$/;"	f	file:
test_evutil_snprintf	test/regress_util.c	/^test_evutil_snprintf(void *ptr)$/;"	f	file:
test_evutil_sockaddr_predicates	test/regress_util.c	/^test_evutil_sockaddr_predicates(void *ptr)$/;"	f	file:
test_evutil_strlcpy	test/regress_util.c	/^test_evutil_strlcpy(void *arg)$/;"	f	file:
test_evutil_strtoll	test/regress_util.c	/^test_evutil_strtoll(void *ptr)$/;"	f	file:
test_evutil_upcast	test/regress_util.c	/^test_evutil_upcast(void *arg)$/;"	f	file:
test_evutil_usleep	test/regress_util.c	/^test_evutil_usleep(void *arg)$/;"	f	file:
test_fin_cb_invoked	test/regress_finalize.c	/^test_fin_cb_invoked(void *arg)$/;"	f	file:
test_fin_free_finalize	test/regress_finalize.c	/^test_fin_free_finalize(void *arg)$/;"	f	file:
test_fin_within_cb	test/regress_finalize.c	/^test_fin_within_cb(void *arg)$/;"	f	file:
test_for_getaddrinfo_hacks	evutil.c	/^test_for_getaddrinfo_hacks(void)$/;"	f	file:
test_fork	test/regress.c	/^test_fork(void)$/;"	f	file:
test_free_active_base	test/regress.c	/^test_free_active_base(void *ptr)$/;"	f	file:
test_get_assignment	test/regress.c	/^test_get_assignment(void *arg)$/;"	f	file:
test_getaddrinfo_async	test/regress_dns.c	/^test_getaddrinfo_async(void *arg)$/;"	f	file:
test_getaddrinfo_async_cancel_stress	test/regress_dns.c	/^test_getaddrinfo_async_cancel_stress(void *ptr)$/;"	f	file:
test_gettimeofday_cached	test/regress.c	/^test_gettimeofday_cached(void *arg)$/;"	f	file:
test_heap_randomized	test/regress_minheap.c	/^test_heap_randomized(void *ptr)$/;"	f	file:
test_immediatesignal	test/regress.c	/^test_immediatesignal(void)$/;"	f	file:
test_iocp_bufferevent_async	test/regress_iocp.c	/^test_iocp_bufferevent_async(void *ptr)$/;"	f	file:
test_iocp_evbuffer	test/regress_iocp.c	/^test_iocp_evbuffer(void *ptr)$/;"	f	file:
test_iocp_port	test/regress_iocp.c	/^test_iocp_port(void *ptr)$/;"	f	file:
test_is_done	test/regress_ssl.c	/^static int test_is_done = 0;$/;"	v	file:
test_loopbreak	test/regress.c	/^test_loopbreak(void)$/;"	f	file:
test_loopexit	test/regress.c	/^test_loopexit(void)$/;"	f	file:
test_loopexit_multiple	test/regress.c	/^test_loopexit_multiple(void)$/;"	f	file:
test_manipulate_active_events	test/regress.c	/^test_manipulate_active_events(void *ptr)$/;"	f	file:
test_many_events	test/regress.c	/^test_many_events(void *arg)$/;"	f	file:
test_methods	test/regress.c	/^test_methods(void *ptr)$/;"	f	file:
test_mm_functions	test/regress.c	/^test_mm_functions(void *arg)$/;"	f	file:
test_multiple	test/regress.c	/^test_multiple(void)$/;"	f	file:
test_multiple_cb	test/regress.c	/^test_multiple_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
test_multiple_events_for_same_fd	test/regress.c	/^test_multiple_events_for_same_fd(void)$/;"	f	file:
test_multiplesignal	test/regress.c	/^test_multiplesignal(void)$/;"	f	file:
test_nonpersist_readd	test/regress.c	/^test_nonpersist_readd(void)$/;"	f	file:
test_ok	test/regress.c	/^int test_ok;$/;"	v
test_okay	test/test-eof.c	/^int test_okay = 1;$/;"	v
test_okay	test/test-weof.c	/^int test_okay = 1;$/;"	v
test_persistent	test/regress.c	/^test_persistent(void)$/;"	f	file:
test_persistent_active_timeout	test/regress.c	/^test_persistent_active_timeout(void *ptr)$/;"	f	file:
test_persistent_timeout	test/regress.c	/^test_persistent_timeout(void)$/;"	f	file:
test_persistent_timeout_jump	test/regress.c	/^test_persistent_timeout_jump(void *ptr)$/;"	f	file:
test_pri_event	test/regress.c	/^struct test_pri_event {$/;"	s	file:
test_priorities	test/regress.c	/^test_priorities(void)$/;"	f	file:
test_priorities_cb	test/regress.c	/^test_priorities_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
test_priorities_impl	test/regress.c	/^test_priorities_impl(int npriorities)$/;"	f	file:
test_priority_active_inversion	test/regress.c	/^test_priority_active_inversion(void *data_)$/;"	f	file:
test_ratelimiting	test/test-ratelim.c	/^test_ratelimiting(void)$/;"	f	file:
test_regress_CPPFLAGS	Makefile	/^test_regress_CPPFLAGS = $(AM_CPPFLAGS) $(PTHREAD_CFLAGS) \\$/;"	m
test_regress_DEPENDENCIES	Makefile	/^test_regress_DEPENDENCIES = $(am__DEPENDENCIES_1) libevent.la \\$/;"	m
test_regress_LDADD	Makefile	/^test_regress_LDADD = $(LIBEVENT_GC_SECTIONS) libevent.la \\$/;"	m
test_regress_LDFLAGS	Makefile	/^test_regress_LDFLAGS = $(PTHREAD_CFLAGS)$/;"	m
test_regress_LINK	Makefile	/^test_regress_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
test_regress_OBJECTS	Makefile	/^test_regress_OBJECTS = $(am_test_regress_OBJECTS)$/;"	m
test_regress_SOURCES	Makefile	/^test_regress_SOURCES = test\/regress.c test\/regress.gen.c \\$/;"	m
test_signal_assert	test/regress.c	/^test_signal_assert(void)$/;"	f	file:
test_signal_dealloc	test/regress.c	/^test_signal_dealloc(void)$/;"	f	file:
test_signal_pipeloss	test/regress.c	/^test_signal_pipeloss(void)$/;"	f	file:
test_signal_restore	test/regress.c	/^test_signal_restore(void)$/;"	f	file:
test_signal_switchbase	test/regress.c	/^test_signal_switchbase(void)$/;"	f	file:
test_signal_while_processing	test/regress.c	/^test_signal_while_processing(void)$/;"	f	file:
test_simpleclose	test/regress.c	/^test_simpleclose(void *ptr)$/;"	f	file:
test_simpleread	test/regress.c	/^test_simpleread(void)$/;"	f	file:
test_simpleread_multiple	test/regress.c	/^test_simpleread_multiple(void)$/;"	f	file:
test_simplesignal	test/regress.c	/^test_simplesignal(void)$/;"	f	file:
test_simplesignal_impl	test/regress.c	/^test_simplesignal_impl(int find_reorder)$/;"	f	file:
test_simplestsignal	test/regress.c	/^test_simplestsignal(void)$/;"	f	file:
test_simpletimeout	test/regress.c	/^test_simpletimeout(void)$/;"	f	file:
test_simplewrite	test/regress.c	/^test_simplewrite(void)$/;"	f	file:
test_struct_event_size	test/regress.c	/^test_struct_event_size(void *arg)$/;"	f	file:
test_test_changelist_DEPENDENCIES	Makefile	/^test_test_changelist_DEPENDENCIES = libevent_core.la$/;"	m
test_test_changelist_LDADD	Makefile	/^test_test_changelist_LDADD = libevent_core.la$/;"	m
test_test_changelist_OBJECTS	Makefile	/^test_test_changelist_OBJECTS = $(am_test_test_changelist_OBJECTS)$/;"	m
test_test_changelist_SOURCES	Makefile	/^test_test_changelist_SOURCES = test\/test-changelist.c$/;"	m
test_test_closed_DEPENDENCIES	Makefile	/^test_test_closed_DEPENDENCIES = libevent_core.la$/;"	m
test_test_closed_LDADD	Makefile	/^test_test_closed_LDADD = libevent_core.la$/;"	m
test_test_closed_OBJECTS	Makefile	/^test_test_closed_OBJECTS = $(am_test_test_closed_OBJECTS)$/;"	m
test_test_closed_SOURCES	Makefile	/^test_test_closed_SOURCES = test\/test-closed.c$/;"	m
test_test_dumpevents_DEPENDENCIES	Makefile	/^test_test_dumpevents_DEPENDENCIES = libevent_core.la$/;"	m
test_test_dumpevents_LDADD	Makefile	/^test_test_dumpevents_LDADD = libevent_core.la$/;"	m
test_test_dumpevents_OBJECTS	Makefile	/^test_test_dumpevents_OBJECTS = $(am_test_test_dumpevents_OBJECTS)$/;"	m
test_test_dumpevents_SOURCES	Makefile	/^test_test_dumpevents_SOURCES = test\/test-dumpevents.c$/;"	m
test_test_eof_DEPENDENCIES	Makefile	/^test_test_eof_DEPENDENCIES = libevent_core.la$/;"	m
test_test_eof_LDADD	Makefile	/^test_test_eof_LDADD = libevent_core.la$/;"	m
test_test_eof_OBJECTS	Makefile	/^test_test_eof_OBJECTS = $(am_test_test_eof_OBJECTS)$/;"	m
test_test_eof_SOURCES	Makefile	/^test_test_eof_SOURCES = test\/test-eof.c$/;"	m
test_test_fdleak_DEPENDENCIES	Makefile	/^test_test_fdleak_DEPENDENCIES = libevent_core.la$/;"	m
test_test_fdleak_LDADD	Makefile	/^test_test_fdleak_LDADD = libevent_core.la$/;"	m
test_test_fdleak_OBJECTS	Makefile	/^test_test_fdleak_OBJECTS = $(am_test_test_fdleak_OBJECTS)$/;"	m
test_test_fdleak_SOURCES	Makefile	/^test_test_fdleak_SOURCES = test\/test-fdleak.c$/;"	m
test_test_init_DEPENDENCIES	Makefile	/^test_test_init_DEPENDENCIES = libevent_core.la$/;"	m
test_test_init_LDADD	Makefile	/^test_test_init_LDADD = libevent_core.la$/;"	m
test_test_init_OBJECTS	Makefile	/^test_test_init_OBJECTS = $(am_test_test_init_OBJECTS)$/;"	m
test_test_init_SOURCES	Makefile	/^test_test_init_SOURCES = test\/test-init.c$/;"	m
test_test_ratelim_DEPENDENCIES	Makefile	/^test_test_ratelim_DEPENDENCIES = libevent_core.la$/;"	m
test_test_ratelim_LDADD	Makefile	/^test_test_ratelim_LDADD = libevent_core.la -lm$/;"	m
test_test_ratelim_OBJECTS	Makefile	/^test_test_ratelim_OBJECTS = $(am_test_test_ratelim_OBJECTS)$/;"	m
test_test_ratelim_SOURCES	Makefile	/^test_test_ratelim_SOURCES = test\/test-ratelim.c$/;"	m
test_test_time_DEPENDENCIES	Makefile	/^test_test_time_DEPENDENCIES = libevent_core.la$/;"	m
test_test_time_LDADD	Makefile	/^test_test_time_LDADD = libevent_core.la$/;"	m
test_test_time_OBJECTS	Makefile	/^test_test_time_OBJECTS = $(am_test_test_time_OBJECTS)$/;"	m
test_test_time_SOURCES	Makefile	/^test_test_time_SOURCES = test\/test-time.c$/;"	m
test_test_weof_DEPENDENCIES	Makefile	/^test_test_weof_DEPENDENCIES = libevent_core.la$/;"	m
test_test_weof_LDADD	Makefile	/^test_test_weof_LDADD = libevent_core.la$/;"	m
test_test_weof_OBJECTS	Makefile	/^test_test_weof_OBJECTS = $(am_test_test_weof_OBJECTS)$/;"	m
test_test_weof_SOURCES	Makefile	/^test_test_weof_SOURCES = test\/test-weof.c$/;"	m
test_timeval_diff_eq	test/regress.h	123;"	d
test_timeval_diff_leq	test/regress.h	120;"	d
test_version	test/regress.c	/^test_version(void *arg)$/;"	f	file:
test_want_only_once	test/regress.c	/^test_want_only_once(void)$/;"	f	file:
test_weakrand	test/regress.h	58;"	d
test_weakrand_state	test/regress_main.c	/^struct evutil_weakrand_state test_weakrand_state;$/;"	v	typeref:struct:evutil_weakrand_state
testaliases	test/regress_main.c	/^struct testlist_alias_t testaliases[] = {$/;"	v	typeref:struct:testlist_alias_t
testcase_fn	test/tinytest.h	/^typedef void (*testcase_fn)(void *);$/;"	t
testcase_run_bare_	test/tinytest.c	/^testcase_run_bare_(const struct testcase_t *testcase)$/;"	f	file:
testcase_run_forked_	test/tinytest.c	/^testcase_run_forked_(const struct testgroup_t *group,$/;"	f	file:
testcase_run_one	test/tinytest.c	/^testcase_run_one(const struct testgroup_t *group,$/;"	f
testcase_setup_t	test/tinytest.h	/^struct testcase_setup_t {$/;"	s
testcase_t	test/tinytest.h	/^struct testcase_t {$/;"	s
tested_for_getaddrinfo_hacks	evutil.c	/^static int tested_for_getaddrinfo_hacks=0;$/;"	v	file:
testgroup_t	test/tinytest.h	/^struct testgroup_t {$/;"	s
testgroups	test/regress_main.c	/^struct testgroup_t testgroups[] = {$/;"	v	typeref:struct:testgroup_t
testleak_cleanup	test/regress_dns.c	/^testleak_cleanup(const struct testcase_t *testcase, void *env_)$/;"	f	file:
testleak_env_t	test/regress_dns.c	/^struct testleak_env_t {$/;"	s	file:
testleak_funcs	test/regress_dns.c	/^static struct testcase_setup_t testleak_funcs = {$/;"	v	typeref:struct:testcase_setup_t	file:
testleak_setup	test/regress_dns.c	/^testleak_setup(const struct testcase_t *testcase)$/;"	f	file:
testlist_alias_t	test/tinytest.h	/^struct testlist_alias_t {$/;"	s
tests	test/tinytest.h	/^	const char **tests;$/;"	m	struct:testlist_alias_t
text	test/check-dumpevents.py	/^text = sys.stdin.readlines()$/;"	v
tfff_free	test/regress_finalize.c	/^tfff_free(void *p)$/;"	f	file:
tfff_malloc	test/regress_finalize.c	/^tfff_malloc(size_t n)$/;"	f	file:
tfff_p1	test/regress_finalize.c	/^static void *tfff_p1=NULL, *tfff_p2=NULL;$/;"	v	file:
tfff_p1_freed	test/regress_finalize.c	/^static int tfff_p1_freed=0, tfff_p2_freed=0;$/;"	v	file:
tfff_p2	test/regress_finalize.c	/^static void *tfff_p1=NULL, *tfff_p2=NULL;$/;"	v	file:
tfff_p2_freed	test/regress_finalize.c	/^static int tfff_p1_freed=0, tfff_p2_freed=0;$/;"	v	file:
tfff_realloc	test/regress_finalize.c	/^tfff_realloc(void *p, size_t sz)$/;"	f	file:
th_base_lock	event-internal.h	/^	void *th_base_lock;$/;"	m	struct:event_base
th_notify	event-internal.h	/^	struct event th_notify;$/;"	m	struct:event_base	typeref:struct:event_base::event
th_notify_fd	event-internal.h	/^	evutil_socket_t th_notify_fd[2];$/;"	m	struct:event_base
th_notify_fn	event-internal.h	/^	int (*th_notify_fn)(struct event_base *base);$/;"	m	struct:event_base
th_owner_id	event-internal.h	/^	unsigned long th_owner_id;$/;"	m	struct:event_base
the_extension_fns	event_iocp.c	/^static struct win32_extension_fns the_extension_fns;$/;"	v	typeref:struct:win32_extension_fns	file:
the_ssl_ctx	test/regress_ssl.c	/^static SSL_CTX *the_ssl_ctx = NULL;$/;"	v	file:
thread	test/test-changelist.c	/^	HANDLE thread;$/;"	m	struct:cpu_usage_timer	file:
thread_basic	test/regress_thread.c	/^thread_basic(void *arg)$/;"	f	file:
thread_conditions_simple	test/regress_thread.c	/^thread_conditions_simple(void *arg)$/;"	f	file:
thread_deferred_cb_skew	test/regress_thread.c	/^thread_deferred_cb_skew(void *arg)$/;"	f	file:
thread_no_events	test/regress_thread.c	/^thread_no_events(void *arg)$/;"	f	file:
thread_testcases	test/regress_main.c	/^struct testcase_t thread_testcases[] = {$/;"	v	typeref:struct:testcase_t
thread_testcases	test/regress_thread.c	/^struct testcase_t thread_testcases[] = {$/;"	v	typeref:struct:testcase_t
threads	iocp-internal.h	/^	HANDLE *threads;$/;"	m	struct:event_iocp_port
tick_timeout	ratelim-internal.h	/^	struct timeval tick_timeout;$/;"	m	struct:ev_token_bucket_cfg	typeref:struct:ev_token_bucket_cfg::timeval
timeBegin	test/test-changelist.c	/^	struct timeval timeBegin;$/;"	m	struct:cpu_usage_timer	typeref:struct:cpu_usage_timer::timeval	file:
time_cb	test/test-time.c	/^time_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
time_events	test/regress_thread.c	/^static struct event time_events[5];$/;"	v	typeref:struct:event	file:
timed_out	test/regress_thread.c	/^	int timed_out;$/;"	m	struct:alerted_record	file:
timedout	evdns.c	/^	int timedout;  \/* number of times in a row a request has timed out *\/$/;"	m	struct:nameserver	file:
timeheap	event-internal.h	/^	struct min_heap timeheap;$/;"	m	struct:event_base	typeref:struct:event_base::min_heap
timeout	evdns.c	/^	struct event timeout;$/;"	m	struct:evdns_getaddrinfo_request	typeref:struct:evdns_getaddrinfo_request::event	file:
timeout	evrpc-internal.h	/^	int timeout;$/;"	m	struct:evrpc_pool
timeout	http-internal.h	/^	struct timeval timeout;		\/* timeout for events *\/$/;"	m	struct:evhttp_connection	typeref:struct:evhttp_connection::timeval
timeout	http-internal.h	/^	struct timeval timeout;$/;"	m	struct:evhttp	typeref:struct:evhttp::timeval
timeout	test/test-closed.c	/^struct timeval timeout = {3, 0};$/;"	v	typeref:struct:timeval
timeout	test/test-eof.c	/^struct timeval timeout = {60, 0};$/;"	v	typeref:struct:timeval
timeout_add	include/event2/event_compat.h	198;"	d
timeout_called_once_cb	test/regress.c	/^timeout_called_once_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
timeout_cb	sample/time-test.c	/^timeout_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
timeout_cb	test/regress.c	/^timeout_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
timeout_cb	test/test-changelist.c	/^timeout_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
timeout_cb_result	test/regress_bufferevent.c	/^struct timeout_cb_result {$/;"	s	file:
timeout_cb_swp	test/regress.c	/^timeout_cb_swp(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
timeout_del	include/event2/event_compat.h	200;"	d
timeout_event	evdns.c	/^	struct event timeout_event;  \/* used to keep the timeout for *\/$/;"	m	struct:nameserver	typeref:struct:nameserver::event	file:
timeout_event	evdns.c	/^	struct event timeout_event;$/;"	m	struct:request	typeref:struct:request::event	file:
timeout_event	event-internal.h	/^	struct event timeout_event;$/;"	m	struct:common_timeout_list	typeref:struct:common_timeout_list::event
timeout_initialized	http.c	91;"	d	file:
timeout_initialized	include/event2/event_compat.h	202;"	d
timeout_next	event.c	/^timeout_next(struct event_base *base, struct timeval **tv_p)$/;"	f	file:
timeout_pending	http.c	90;"	d	file:
timeout_pending	include/event2/event_compat.h	201;"	d
timeout_process	event.c	/^timeout_process(struct event_base *base)$/;"	f	file:
timeout_read	include/event2/bufferevent_struct.h	/^	struct timeval timeout_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::timeval
timeout_set	include/event2/event_compat.h	199;"	d
timeout_write	include/event2/bufferevent_struct.h	/^	struct timeval timeout_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::timeval
timer_callback	test/regress_finalize.c	/^timer_callback(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
timer_callback	test/regress_thread.c	/^timer_callback(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
timer_callback_2	test/regress_finalize.c	/^timer_callback_2(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
timer_end	test/regress_thread.c	/^static struct timeval timer_end = {0,0};$/;"	v	typeref:struct:timeval	file:
timer_start	test/regress_thread.c	/^static struct timeval timer_start = {0,0};$/;"	v	typeref:struct:timeval	file:
timerfd	epoll.c	/^	int timerfd;$/;"	m	struct:epollop	file:
times	test/regress_thread.c	/^static struct timeval times[5];$/;"	v	typeref:struct:timeval	file:
timeval_msec_diff	test/regress_main.c	/^timeval_msec_diff(const struct timeval *start, const struct timeval *end)$/;"	f
tinytest_format_hex_	test/tinytest.c	/^tinytest_format_hex_(const void *val_, unsigned long len)$/;"	f
tinytest_get_verbosity_	test/tinytest.c	/^tinytest_get_verbosity_(void)$/;"	f
tinytest_main	test/tinytest.c	/^tinytest_main(int c, const char **v, struct testgroup_t *groups)$/;"	f
tinytest_set_aliases	test/tinytest.c	/^tinytest_set_aliases(const struct testlist_alias_t *aliases)$/;"	f
tinytest_set_flag_	test/tinytest.c	/^tinytest_set_flag_(struct testgroup_t *groups, const char *arg, int set, unsigned long flag)$/;"	f
tinytest_set_test_failed_	test/tinytest.c	/^tinytest_set_test_failed_(void)$/;"	f
tinytest_set_test_skipped_	test/tinytest.c	/^tinytest_set_test_skipped_(void)$/;"	f
tinytest_skip	test/tinytest.h	88;"	d
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
total_calls	test/regress_bufferevent.c	/^	int total_calls;$/;"	m	struct:timeout_cb_result	file:
total_connected_or_failed	test/regress_dns.c	/^static int total_connected_or_failed = 0;$/;"	v	file:
total_group_rbucket_level	test/test-ratelim.c	/^static ev_int64_t total_group_rbucket_level = 0;$/;"	v	file:
total_group_wbucket_level	test/test-ratelim.c	/^static ev_int64_t total_group_wbucket_level = 0;$/;"	v	file:
total_len	evbuffer-internal.h	/^	size_t total_len;$/;"	m	struct:evbuffer
total_max_to_read	test/test-ratelim.c	/^static ev_int64_t total_max_to_read=0;$/;"	v	file:
total_max_to_write	test/test-ratelim.c	/^static ev_int64_t total_max_to_write=0;$/;"	v	file:
total_n_accepted	test/regress_dns.c	/^static int total_n_accepted = 0;$/;"	v	file:
total_n_bev_checks	test/test-ratelim.c	/^static int total_n_bev_checks = 0;$/;"	v	file:
total_n_bytes	test/bench_httpclient.c	/^size_t total_n_bytes = 0;$/;"	v
total_n_errors	test/bench_httpclient.c	/^int total_n_errors = 0;$/;"	v
total_n_group_bev_checks	test/test-ratelim.c	/^static int total_n_group_bev_checks = 0;$/;"	v	file:
total_n_handled	test/bench_httpclient.c	/^int total_n_handled = 0;$/;"	v
total_n_launched	test/bench_httpclient.c	/^int total_n_launched = 0;$/;"	v
total_rbucket_level	test/test-ratelim.c	/^static ev_int64_t total_rbucket_level=0;$/;"	v	file:
total_read	bufferevent-internal.h	/^	ev_uint64_t total_read;$/;"	m	struct:bufferevent_rate_limit_group
total_read	test/regress_bufferevent.c	/^	size_t total_read;$/;"	m	struct:bufferevent_filter_data_stuck	file:
total_time	test/bench_httpclient.c	/^struct timeval total_time = {0,0};$/;"	v	typeref:struct:timeval
total_wbucket_level	test/test-ratelim.c	/^static ev_int64_t total_wbucket_level=0;$/;"	v	file:
total_written	bufferevent-internal.h	/^	ev_uint64_t total_written;$/;"	m	struct:bufferevent_rate_limit_group
tqe_next	compat/sys/sample_restore_queue.c	/^        struct queue_entry_t *tqe_next;$/;"	m	struct:queue_entry_t::__anon17	typeref:struct:queue_entry_t::__anon17::queue_entry_t	file:
tqe_prev	compat/sys/sample_restore_queue.c	/^        struct queue_entry_t **tqe_prev;$/;"	m	struct:queue_entry_t::__anon17	typeref:struct:queue_entry_t::__anon17::queue_entry_t	file:
tqh_first	compat/sys/sample_restore_queue.c	/^    struct queue_entry_t *tqh_first;$/;"	m	struct:queue_head_t	typeref:struct:queue_head_t::queue_entry_t	file:
tqh_last	compat/sys/sample_restore_queue.c	/^    struct queue_entry_t **tqh_last;$/;"	m	struct:queue_head_t	typeref:struct:queue_head_t::queue_entry_t	file:
trace_lock_alloc	test/regress_bufferevent.c	/^static void *trace_lock_alloc(unsigned locktype)$/;"	f	file:
trace_lock_free	test/regress_bufferevent.c	/^static void trace_lock_free(void *lock_, unsigned locktype)$/;"	f	file:
trace_lock_lock	test/regress_bufferevent.c	/^static int trace_lock_lock(unsigned mode, void *lock_)$/;"	f	file:
trace_lock_unlock	test/regress_bufferevent.c	/^static int trace_lock_unlock(unsigned mode, void *lock_)$/;"	f	file:
trans_id	evdns.c	/^	u16 trans_id;  \/* the transaction id *\/$/;"	m	struct:request	file:
trans_id	evdns.c	/^	u16 trans_id; \/* Transaction id. *\/$/;"	m	struct:server_request	file:
transaction_id_pick	evdns.c	/^transaction_id_pick(struct evdns_base *base) {$/;"	f	file:
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transmit_me	evdns.c	/^	unsigned transmit_me :1;  \/* needs to be transmitted *\/$/;"	m	struct:request	file:
trigger_eventcb	test/regress_bufferevent.c	/^trigger_eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
trigger_failure_cb	test/regress_bufferevent.c	/^trigger_failure_cb(evutil_socket_t fd, short what, void *ctx)$/;"	f	file:
trigger_readcb	test/regress_bufferevent.c	/^trigger_readcb(struct bufferevent *bev, void *ctx)$/;"	f	file:
trigger_readcb_triggered	test/regress_bufferevent.c	/^trigger_readcb_triggered(struct bufferevent *bev, void *ctx)$/;"	f	file:
tset	test/regress.c	/^static struct timeval tset;$/;"	v	typeref:struct:timeval	file:
tt_abort	test/tinytest_macros.h	74;"	d
tt_abort_msg	test/tinytest_macros.h	73;"	d
tt_abort_perror	test/tinytest_macros.h	72;"	d
tt_abort_printf	test/tinytest_macros.h	71;"	d
tt_assert	test/tinytest_macros.h	111;"	d
tt_assert_msg	test/tinytest_macros.h	105;"	d
tt_assert_op_type	test/tinytest_macros.h	153;"	d
tt_assert_test_fmt_type	test/tinytest_macros.h	113;"	d
tt_assert_test_type	test/tinytest_macros.h	143;"	d
tt_assert_test_type_opt	test/tinytest_macros.h	147;"	d
tt_fail	test/tinytest_macros.h	80;"	d
tt_fail_msg	test/tinytest_macros.h	79;"	d
tt_fail_perror	test/tinytest_macros.h	78;"	d
tt_failprint_f	test/tinytest_macros.h	77;"	d
tt_int_op	test/tinytest_macros.h	157;"	d
tt_iov_eq	test/regress_buffer.c	2167;"	d	file:
tt_line_eq	test/regress_buffer.c	1207;"	d	file:
tt_mem_op	test/tinytest_macros.h	180;"	d
tt_nstr_op	test/tinytest_macros.h	170;"	d
tt_ptr_op	test/tinytest_macros.h	165;"	d
tt_skip	test/tinytest_macros.h	83;"	d
tt_str_op	test/tinytest_macros.h	175;"	d
tt_uint_op	test/tinytest_macros.h	161;"	d
tt_want	test/tinytest_macros.h	109;"	d
tt_want_	test/tinytest_macros.h	89;"	d
tt_want_int_op	test/tinytest_macros.h	190;"	d
tt_want_msg	test/tinytest_macros.h	101;"	d
tt_want_ptr_op	test/tinytest_macros.h	197;"	d
tt_want_str_op	test/tinytest_macros.h	201;"	d
tt_want_uint_op	test/tinytest_macros.h	193;"	d
ttl	evdns.c	/^	u32 ttl; \/* The RR TTL *\/$/;"	m	struct:server_reply_item	file:
ttl	evdns.c	/^	u32 ttl;$/;"	m	struct:deferred_reply_callback	file:
ttl	test/regress_dns.c	/^	int ttl;$/;"	m	struct:generic_dns_callback_result	file:
tv_cache	event-internal.h	/^	struct timeval tv_cache;$/;"	m	struct:event_base	typeref:struct:event_base::timeval
tv_clock_diff	event-internal.h	/^	struct timeval tv_clock_diff;$/;"	m	struct:event_base	typeref:struct:event_base::timeval
tvs	test/regress.c	/^	struct timeval tvs[16];$/;"	m	struct:persist_active_timeout_called	typeref:struct:persist_active_timeout_called::timeval	file:
tx_count	evdns.c	/^	int tx_count;  \/* the number of times that this packet has been sent *\/$/;"	m	struct:request	file:
type	bufferevent-internal.h	/^	const char *type;$/;"	m	struct:bufferevent_ops
type	evdns.c	/^	ev_uint32_t type;$/;"	m	struct:getaddrinfo_subrequest	file:
type	evdns.c	/^	u16 type; \/* The RR type *\/$/;"	m	struct:server_reply_item	file:
type	evdns.c	/^	unsigned int type;$/;"	m	struct:reply	file:
type	include/event2/dns_struct.h	/^	int type;$/;"	m	struct:evdns_server_question
type	include/event2/http_struct.h	/^	enum evhttp_cmd_type type;$/;"	m	struct:evhttp_request	typeref:enum:evhttp_request::evhttp_cmd_type
type	test/regress_dns.c	/^	char type;$/;"	m	struct:generic_dns_callback_result	file:
u16	evdns.c	136;"	d	file:
u32	evdns.c	135;"	d	file:
u32	sample/dns-example.c	42;"	d	file:
u64	evdns.c	134;"	d	file:
u8	evdns.c	137;"	d	file:
u8	sample/dns-example.c	43;"	d	file:
underlying	bufferevent_filter.c	/^	struct bufferevent *underlying;$/;"	m	struct:bufferevent_filtered	typeref:struct:bufferevent_filtered::bufferevent	file:
underlying	bufferevent_openssl.c	/^	struct bufferevent *underlying;$/;"	m	struct:bufferevent_openssl	typeref:struct:bufferevent_openssl::bufferevent	file:
unlink	bufferevent-internal.h	/^	void (*unlink)(struct bufferevent *);$/;"	m	struct:bufferevent_ops
unlinked_partner	bufferevent_pair.c	/^	struct bufferevent_pair *unlinked_partner;$/;"	m	struct:bufferevent_pair	typeref:struct:bufferevent_pair::bufferevent_pair	file:
unlock	include/event2/thread.h	/^	int (*unlock)(unsigned mode, void *lock);$/;"	m	struct:evthread_lock_callbacks
unsetenv	test/regress.c	/^static void unsetenv(const char *k)$/;"	f	file:
upcast	bufferevent_async.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast	bufferevent_filter.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast	bufferevent_openssl.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast	bufferevent_pair.c	/^upcast(struct bufferevent *bev)$/;"	f	file:
upcast_connect	bufferevent_async.c	/^upcast_connect(struct event_overlapped *eo)$/;"	f	file:
upcast_evbuffer	buffer_iocp.c	/^upcast_evbuffer(struct evbuffer *buf)$/;"	f	file:
upcast_read	bufferevent_async.c	/^upcast_read(struct event_overlapped *eo)$/;"	f	file:
upcast_write	bufferevent_async.c	/^upcast_write(struct event_overlapped *eo)$/;"	f	file:
update_time_cache	event.c	/^update_time_cache(struct event_base *base)$/;"	f	file:
uri	include/event2/http_struct.h	/^	char *uri;			\/* uri after HTTP request was parsed *\/$/;"	m	struct:evhttp_request
uri	include/event2/rpc_struct.h	/^	const char* uri;$/;"	m	struct:evrpc
uri_chars	http.c	/^static const char uri_chars[256] = {$/;"	v	file:
uri_elems	include/event2/http_struct.h	/^	struct evhttp_uri *uri_elems;	\/* uri elements *\/$/;"	m	struct:evhttp_request	typeref:struct:evhttp_request::evhttp_uri
uri_part	http.c	/^enum uri_part {$/;"	g	file:
uri_root	sample/http-server.c	/^char uri_root[512];$/;"	v
usage	test/test-ratelim.c	/^usage(void)$/;"	f	file:
usage	test/test.sh	/^usage()$/;"	f
usage	test/tinytest.c	/^usage(struct testgroup_t *groups, int list_groups)$/;"	f	file:
use_lock_unlock_profiler	test/regress_bufferevent.c	/^static int use_lock_unlock_profiler(void)$/;"	f	file:
use_performance_counter	time-internal.h	/^	int use_performance_counter;$/;"	m	struct:evutil_monotonic_timer
use_wrapper	sample/le-proxy.c	/^static int use_wrapper = 1;$/;"	v	file:
usec_per_count	time-internal.h	/^	double usec_per_count;$/;"	m	struct:evutil_monotonic_timer
usepersist	test/regress.c	/^static int usepersist;$/;"	v	file:
user_callback	evdns.c	/^	evdns_callback_type user_callback;$/;"	m	struct:deferred_reply_callback	file:
user_callback	evdns.c	/^	evdns_callback_type user_callback;$/;"	m	struct:request	file:
user_callback	evdns.c	/^	evdns_request_callback_fn_type user_callback; \/* Fn to handle requests *\/$/;"	m	struct:evdns_server_port	file:
user_canceled	evdns.c	/^	unsigned user_canceled : 1;$/;"	m	struct:evdns_getaddrinfo_request	file:
user_cb	evdns.c	/^	evdns_getaddrinfo_cb user_cb;$/;"	m	struct:evdns_getaddrinfo_request	file:
user_data	evdns.c	/^	void *user_data; \/* Opaque pointer passed to user_callback *\/$/;"	m	struct:evdns_server_port	file:
user_data	evdns.c	/^	void *user_data;$/;"	m	struct:evdns_getaddrinfo_request	file:
user_data	listener.c	/^	void *user_data;$/;"	m	struct:evconnlistener	file:
user_pointer	evdns.c	/^	void *user_pointer;  \/* the pointer given to us for this request *\/$/;"	m	struct:request	file:
userdone	include/event2/http_struct.h	/^	    userdone:1;			\/* the user has sent all data *\/$/;"	m	struct:evhttp_request
userinfo	http.c	/^	char *userinfo; \/* userinfo (typically username:pass), or NULL *\/$/;"	m	struct:evhttp_uri	file:
userinfo_ok	http.c	/^userinfo_ok(const char *s, const char *eos)$/;"	f	file:
usertimeBegin	test/test-changelist.c	/^	FILETIME usertimeBegin;$/;"	m	struct:cpu_usage_timer	file:
util_testcases	test/regress_util.c	/^struct testcase_t util_testcases[] = {$/;"	v	typeref:struct:testcase_t
v	evdns.c	/^struct dnslabel_entry { char *v; off_t pos; };$/;"	m	struct:dnslabel_entry	file:
va_copy	buffer.c	3165;"	d	file:
validate_header	test/regress_http.c	/^static int validate_header($/;"	f	file:
validate_hostname	sample/openssl_hostname_validation.c	/^HostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {$/;"	f
value	compat/sys/sample_queue.c	/^    int value;$/;"	m	struct:queue_entry_t	file:
value	compat/sys/sample_restore_queue.c	/^    int value;$/;"	m	struct:queue_entry_t	file:
value	include/event2/keyvalq_struct.h	/^	char *value;$/;"	m	struct:evkeyval
vbase	test/regress_rpc.c	/^	void *vbase;$/;"	m	struct:rpc_hook_ctx_	file:
verbose	sample/dns-example.c	/^static int verbose = 0;$/;"	v	file:
verbosity_flag	test/tinytest.c	/^const char *verbosity_flag = "";$/;"	v
vhost_pattern	http-internal.h	/^	char *vhost_pattern;$/;"	m	struct:evhttp
view_handle	evbuffer-internal.h	/^	HANDLE view_handle;$/;"	m	struct:evbuffer_chain_file_segment
virtual_event_count	event-internal.h	/^	int virtual_event_count;$/;"	m	struct:event_base
virtual_event_count_max	event-internal.h	/^	int virtual_event_count_max;$/;"	m	struct:event_base
virtualhosts	http-internal.h	/^	TAILQ_HEAD(vhostsq, evhttp) virtualhosts;$/;"	m	struct:evhttp
wait_condition	include/event2/thread.h	/^	int (*wait_condition)(void *cond, void *lock,$/;"	m	struct:evthread_condition_callbacks
wait_for_condition	test/regress_thread.c	/^wait_for_condition(void *arg)$/;"	f	file:
wake_all_timeout	test/regress_thread.c	/^wake_all_timeout(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
wake_one_timeout	test/regress_thread.c	/^wake_one_timeout(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
want_active	test/check-dumpevents.py	/^want_active = set(text[expect_active_pos+1:got_inserted_pos-1])$/;"	v
want_fail_eventcb	test/regress_bufferevent.c	/^want_fail_eventcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
want_inserted	test/check-dumpevents.py	/^want_inserted = set(text[expect_inserted_pos+1:expect_active_pos])$/;"	v
was_et	test/regress_et.c	/^static int was_et = 0;$/;"	v	file:
wbuf	test/regress.c	/^static char wbuf[4096];$/;"	v	file:
wbuf	test/regress_iocp.c	/^static struct evbuffer *rbuf = NULL, *wbuf = NULL;$/;"	v	typeref:struct:	file:
weakrand_seed	bufferevent-internal.h	/^	struct evutil_weakrand_state weakrand_seed;$/;"	m	struct:bufferevent_rate_limit_group	typeref:struct:bufferevent_rate_limit_group::evutil_weakrand_state
weakrand_seed	event-internal.h	/^	struct evutil_weakrand_state weakrand_seed;$/;"	m	struct:event_base	typeref:struct:event_base::evutil_weakrand_state
weakrand_state	test/test-ratelim.c	/^static struct evutil_weakrand_state weakrand_state;$/;"	v	typeref:struct:evutil_weakrand_state	file:
weakrand_state	test/test-time.c	/^struct evutil_weakrand_state weakrand_state;$/;"	v	typeref:struct:evutil_weakrand_state
what	http-internal.h	/^	char *what;$/;"	m	struct:evhttp_cb
what	test/regress_dns.c	/^	int what;$/;"	m	struct:be_conn_hostname_result	file:
which	test/regress.c	/^	int which;$/;"	m	struct:common_timeout_info	file:
white	event_rpcgen.py	/^white = re.compile(r'\\s+')$/;"	v
win32_add	win32select.c	/^win32_add(struct event_base *base, evutil_socket_t fd,$/;"	f
win32_dealloc	win32select.c	/^win32_dealloc(struct event_base *base)$/;"	f
win32_del	win32select.c	/^win32_del(struct event_base *base, evutil_socket_t fd, short old, short events,$/;"	f
win32_dispatch	win32select.c	/^win32_dispatch(struct event_base *base, struct timeval *tv)$/;"	f
win32_extension_fns	iocp-internal.h	/^struct win32_extension_fns {$/;"	s
win32_init	win32select.c	/^win32_init(struct event_base *base)$/;"	f
win32op	win32select.c	/^struct win32op {$/;"	s	file:
win32ops	win32select.c	/^struct eventop win32ops = {$/;"	v	typeref:struct:eventop
win_fd_set	win32select.c	/^struct win_fd_set {$/;"	s	file:
windows_socket_errors_lock_	evutil.c	/^static void *windows_socket_errors_lock_ = NULL;$/;"	v	file:
wm_errorcb	test/regress_bufferevent.c	/^wm_errorcb(struct bufferevent *bev, short what, void *arg)$/;"	f	file:
wm_read	include/event2/bufferevent_struct.h	/^	struct event_watermark wm_read;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_watermark
wm_readcb	test/regress_bufferevent.c	/^wm_readcb(struct bufferevent *bev, void *arg)$/;"	f	file:
wm_write	include/event2/bufferevent_struct.h	/^	struct event_watermark wm_write;$/;"	m	struct:bufferevent	typeref:struct:bufferevent::event_watermark
wm_writecb	test/regress_bufferevent.c	/^wm_writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
woff	test/regress.c	/^static int woff;$/;"	v	file:
write	test/regress.c	97;"	d	file:
write	test/regress_ssl.c	/^	size_t write;$/;"	m	struct:rwcount	file:
write	test/regress_ssl.c	65;"	d	file:
write_a_byte_cb	test/regress.c	/^write_a_byte_cb(evutil_socket_t fd, short what, void *arg)$/;"	f	file:
write_added	bufferevent_async.c	/^	unsigned write_added : 1;$/;"	m	struct:bufferevent_async	file:
write_blocked_on_read	bufferevent_openssl.c	/^	unsigned write_blocked_on_read : 1;$/;"	m	struct:bufferevent_openssl	file:
write_cb	test/test-changelist.c	/^write_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
write_cb	test/test-weof.c	/^write_cb(evutil_socket_t fd, short event, void *arg)$/;"	f	file:
write_change	changelist-internal.h	/^	ev_uint8_t write_change;$/;"	m	struct:event_change
write_complete	bufferevent_async.c	/^write_complete(struct event_overlapped *eo, ev_uintptr_t key,$/;"	f	file:
write_complete	test/regress_iocp.c	/^write_complete(struct event_overlapped *eo, uintptr_t key,$/;"	f	file:
write_in_progress	buffer_iocp.c	/^	unsigned write_in_progress : 1;$/;"	m	struct:evbuffer_overlapped	file:
write_in_progress	bufferevent_async.c	/^	size_t write_in_progress;$/;"	m	struct:bufferevent_async	file:
write_limit	ratelim-internal.h	/^	ev_ssize_t read_limit, write_limit;$/;"	m	struct:ev_token_bucket
write_maximum	ratelim-internal.h	/^	size_t write_maximum;$/;"	m	struct:ev_token_bucket_cfg
write_on_connectedcb	test/test-ratelim.c	/^write_on_connectedcb(struct bufferevent *bev, short what, void *ctx)$/;"	f	file:
write_overlapped	bufferevent_async.c	/^	struct event_overlapped write_overlapped;$/;"	m	struct:bufferevent_async	typeref:struct:bufferevent_async::event_overlapped	file:
write_pos_plus1	win32select.c	/^	int write_pos_plus1;$/;"	m	struct:idx_info	file:
write_rate	ratelim-internal.h	/^	size_t write_rate;$/;"	m	struct:ev_token_bucket_cfg
write_suspended	bufferevent-internal.h	/^	bufferevent_suspend_flags write_suspended;$/;"	m	struct:bufferevent_private
write_suspended	bufferevent-internal.h	/^	unsigned write_suspended : 1;$/;"	m	struct:bufferevent_rate_limit_group
write_timeout_at	test/regress_bufferevent.c	/^	struct timeval write_timeout_at;$/;"	m	struct:timeout_cb_result	typeref:struct:timeout_cb_result::timeval	file:
write_waiting	evdns.c	/^	char write_waiting;  \/* true if we are waiting for EV_WRITE events *\/$/;"	m	struct:nameserver	file:
writecb	include/event2/bufferevent_struct.h	/^	bufferevent_data_cb writecb;$/;"	m	struct:bufferevent
writecb	test/regress_bufferevent.c	/^writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
writecb	test/regress_zlib.c	/^writecb(struct bufferevent *bev, void *arg)$/;"	f	file:
writecb_finished	test/regress_zlib.c	/^static int writecb_finished;$/;"	v	file:
writecb_pending	bufferevent-internal.h	/^	unsigned writecb_pending : 1;$/;"	m	struct:bufferevent_private
writes	test/bench.c	/^static int count, writes, fired, failures;$/;"	v	file:
writeset_in	win32select.c	/^	struct win_fd_set *writeset_in;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
writeset_out	win32select.c	/^	struct win_fd_set *writeset_out;$/;"	m	struct:win32op	typeref:struct:win32op::win_fd_set	file:
zlib_deflate_free	test/regress_zlib.c	/^zlib_deflate_free(void *ctx)$/;"	f	file:
zlib_inflate_free	test/regress_zlib.c	/^zlib_inflate_free(void *ctx)$/;"	f	file:
zlib_input_filter	test/regress_zlib.c	/^zlib_input_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:
zlib_output_filter	test/regress_zlib.c	/^zlib_output_filter(struct evbuffer *src, struct evbuffer *dst,$/;"	f	file:

1. 我现在要做一个限流功能, 怎么做?
     令牌桶
2. 这个限流要做成分布式的, 怎么做?
     令牌桶维护到 Redis 里，每个实例起一个线程抢锁，抢到锁的负责定时放令牌
3. 怎么抢锁?
     Redis setnx
4. 锁怎么释放?
     抢到锁后设置过期时间，线程本身退出时主动释放锁，假如线程卡住了，锁过期那么其它线程可以继续抢占
5. 加了超时之后有没有可能在没有释放的情况下, 被人抢走锁
     有可能，单次处理时间过长，锁泄露
6. 怎么解决?
     换 zk，用心跳解决
7. 不用 zk 的心跳, 可以怎么解决这个问题呢?
     每次更新过期时间时，Redis 用 MULTI 做 check-and-set 检查更新时间是否被其他线程修改了，假如被修改了，说明锁已经被抢走，放弃这把锁
8. 假如这个限流希望做成可配置的, 需要有一个后台管理系统随意对某个 api 配置全局流量, 怎么做？
     在 Redis 里存储每个 API 的令牌桶 key，假如存在这个 key，则需要按上述逻辑进行限流
9. 某一个业务中现在需要生成全局唯一的递增 ID, 并发量非常大, 怎么做
     snowflake (这个其实答得不好，snowflake 无法实现全局递增，只能实现全局唯一，单机递增，面试结束后就想到了类似 TDDL 那样一次取一个 ID 段，放在本地慢慢分配的策略）
10. 算法题, M*N 横向纵向均递增的矩阵找指定数
     只想到 O(M+N)的解法 补充: 这几天刷 leetcode 碰到这题了, 240. Search a 2D Matrix II. 办法是从左下角或右下角开始查找.
11. 有什么想问我的?
限流，分布式锁，UUID 都属于后端的经典面试题，这轮面试的参考价值挺大的。
用于检查源代码的工具
工具          位于何处          所做工作
cb            随编译器附带      C程序美化器，在源文件中运行这个过滤器，可以使源文件有标准的布局和缩进格式。来自Berkeley
indent                          与cb作用相同，来自AT&T
cdecl                           分析C语言的声明
cscope      随编译器附带        一个基于ASCII码C程序的交互式浏览器。用于检查头文件修改的效果。
ctags       /usr/bin            创建一个标签文件，供vim/vi编辑器使用。标签文件能加快检查程序源文件的速度，方法是维护一个表，里面有绝大多数对象的位置
lint        随编译器附带        C程序检查器
cflow      随编译器附带         打印程序中调用者/被调用者的关系
sccs        /usr/ccs/bin        源代码版本控制系统
vgrind      /usr/bin            格式器，用于打印漂亮的C列表


用于检查可执行文件的工具
工具          位于何处         所做工作
dis          /usr/ccs/bin      目标代码反汇编工具
dump -Lv     /usr/ccs/bin       打印动态链接信息
ldd         /usr/bin            打印文件所需的动态
nm         /usr/ccs/bin         打印目标文件的符号表
strings     /usr/bin            查看嵌入于二进制文件中的字符串。用于查看二进制文件可能产生的错误信息、内置文件名和(有时候)符号名或版本和版权信息
sum        /usr/bin             打印文件的校验和与程序块计数。回答这样的问题：“这些可执行文件是同一版本吗？”“传输是否成功？”


帮助调试的工具

工具          位于何处        所做工作
truss       /usr/bin          Trace的SVr4版本，这个工具打印可执行文件所进行的系统调用。它可用于查看二进制文件正在干什么，为什么阻塞或失败。这将非常有用
ps          /usr/bin          显示进程的特征
ctrace      随编译器附带      修改你的源文件，文件打印时按行打印。是一个对小程序非常有用的工具
debugger    随编译器附带      交互式调试器
file        /usr/bin          告诉你一个文件包含的内容(如可执行文件、数据、ASCII、shell、script、archive等)


性能优化辅助工具

工具      位于何处        所做工作

collector   随编译器附带  (SunOS 独有) 在调试器控制下收集运行时性能数据
analyzer    随编译器附带  (SunOS 独有) 分析已收集的性能数据
gprof       /usr/ccs/bin  显示调用图配置数据(确定计算密集的函数)
prof        /usr/ccs/bin  显示每个程序所消耗时间的百分比
gcov        随编译器附带  显示每条语句执行次数的计数(确定一个函数中计算密集循环)
time        /usr/bin/time   显示程序所使用的实际时间和CPU时间

valgrind 以便测试你的C内存使用错误。
pkg-config 用来寻找库
doxygen  用来生成文档
Anjuta IDE环境



编译流程
我们常说的编译是一个整体的概念，是指从源程序到可执行程序的整个过程，实际上，C语言编译的过程可以进一步细分为预编译->编译->汇编->链接

    预编译是把include关键字所使用的文件复制到当前源程序中，将源代码的.c文件和.h文件合并为.i文件
    编译是对预编译得到的.i文件的字符流进行语法分析，并转换为相应CPU的汇编程序文件.s
    汇编将.s 转化为目标文件.o
    链接是用链接器把多个.o和库文件(.so或.a)文件链接在一起形成可执行文件 .out

C开发常见文件类型名

.h 头文件
.c 源文件
.i 预处理文件
.s 汇编文件
.o 目标文件
.a 静态库文件
.so 共享库文件
.out Linux可执行文件

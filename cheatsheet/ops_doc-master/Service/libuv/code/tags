!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CFLAGS	Makefile	/^CFLAGS=-g -Wall -I$(UV_PATH)\/include$/;"	m
CFLAGS	uvtee-reuse-buf/Makefile	/^CFLAGS=-g -O2 -Wall -I..\/libuv\/include ..\/libuv\/out\/Debug\/libuv.a $/;"	m
DEFAULT_BACKLOG	tcp-echo-server/main.c	7;"	d	file:
DEFAULT_PORT	tcp-echo-server/main.c	6;"	d	file:
ERROR	uvtee-all-async/main.c	6;"	d	file:
FIB_UNTIL	queue-cancel/main.c	7;"	d	file:
FIB_UNTIL	queue-work/main.c	7;"	d	file:
LIBS	Makefile	/^LIBS=$/;"	m
LIBS	Makefile	/^LIBS=-lrt -ldl -lm -pthread  -lcurl$/;"	m
NOIPC	uvtee-all-async/main.c	14;"	d	file:
NOIPC	uvtee-reuse-buf/main.c	9;"	d	file:
PHRASE	multi-echo-server/hammer.js	/^var PHRASE = "hello world";$/;"	v
PLUGIN_EXE_FLAGS	Makefile	/^PLUGIN_EXE_FLAGS=-Wl,-export-dynamic$/;"	m
SHARED_LIB_FLAGS	Makefile	/^SHARED_LIB_FLAGS=-bundle -undefined dynamic_lookup -o plugin\/libhello.dylib$/;"	m
SHARED_LIB_FLAGS	Makefile	/^SHARED_LIB_FLAGS=-shared -Wl,-soname,libhello.so -o plugin\/libhello.so$/;"	m
STDIN	uvtee-all-async/main.c	11;"	d	file:
STDIN	uvtee-reuse-buf/main.c	6;"	d	file:
STDOUT	uvtee-all-async/main.c	12;"	d	file:
STDOUT	uvtee-reuse-buf/main.c	7;"	d	file:
UVBOOK_PLUGIN_SYSTEM	plugin/plugin.h	2;"	d
UV_LIB	Makefile	/^UV_LIB=$(UV_PATH)\/.libs\/libuv.a$/;"	m
UV_PATH	Makefile	/^UV_PATH=$(shell pwd)\/..\/libuv$/;"	m
accept_cb	poll/uv_poll_init.cpp	/^void accept_cb(uv_poll_t *handle, int status, int events)$/;"	f
add_download	uvwget/main.c	/^void add_download(const char *url, int num) {$/;"	f
addr	tcp-echo-server/main.c	/^struct sockaddr_in addr;$/;"	v	typeref:struct:sockaddr_in
after	progress/main.c	/^void after(uv_work_t *req, int status) {$/;"	f
after_fib	queue-cancel/main.c	/^void after_fib(uv_work_t *req, int status) {$/;"	f
after_fib	queue-work/main.c	/^void after_fib(uv_work_t *req, int status) {$/;"	f
alloc_buffer	dns/main.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_buffer	multi-echo-server/main.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_buffer	multi-echo-server/worker.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_buffer	pipe-echo-server/main.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_buffer	tcp-echo-server/main.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_buffer	udp-dhcp/main.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_buffer	uvtee/main.c	/^void alloc_buffer(uv_handle_t *handle, size_t suggested_size, uv_buf_t *buf) {$/;"	f
alloc_cb	uvtee-all-async/main.c	/^void alloc_cb(uv_handle_t *handle, size_t size, uv_buf_t *buf) {$/;"	f
alloc_cb	uvtee-reuse-buf/main.c	/^void alloc_cb(uv_handle_t *handle, size_t size, uv_buf_t *buf) {$/;"	f
async	progress/main.c	/^uv_async_t async;$/;"	v
blocker	locks/main.c	/^uv_barrier_t blocker;$/;"	v
blocker	locks/note_main.c	/^uv_barrier_t blocker;$/;"	v
buf	multi-echo-server/worker.c	/^    uv_buf_t buf;$/;"	m	struct:__anon7	file:
buf	pipe-echo-server/main.c	/^    uv_buf_t buf;$/;"	m	struct:__anon3	file:
buf	tcp-echo-server/main.c	/^    uv_buf_t buf;$/;"	m	struct:__anon5	file:
buf	uvtee-all-async/main.c	/^  uv_buf_t buf;$/;"	m	struct:__anon1	file:
buf	uvtee-reuse-buf/main.c	/^  uv_buf_t buf;$/;"	m	struct:__anon4	file:
buf	uvtee/main.c	/^    uv_buf_t buf;$/;"	m	struct:__anon6	file:
buffer	idle-compute/main.c	/^char buffer[1024];$/;"	v
buffer	uvcat/main.c	/^static char buffer[1024];$/;"	v	file:
check_multi_info	uvwget/main.c	/^void check_multi_info(void) {$/;"	f
child_req	cgi/main.c	/^uv_process_t child_req;$/;"	v
child_req	detach/main.c	/^uv_process_t child_req;$/;"	v
child_req	proc-streams/main.c	/^uv_process_t child_req;$/;"	v
child_req	spawn/main.c	/^uv_process_t child_req;$/;"	v
child_worker	multi-echo-server/main.c	/^struct child_worker {$/;"	s	file:
child_worker_count	multi-echo-server/main.c	/^int child_worker_count;$/;"	v
cleanup_handles	cgi/main.c	/^void cleanup_handles(uv_process_t *req, int64_t exit_status, int term_signal) {$/;"	f
close_cb	uvtee-all-async/main.c	/^void close_cb(uv_handle_t *handle) {$/;"	f
close_process_handle	multi-echo-server/main.c	/^void close_process_handle(uv_process_t *req, int64_t exit_status, int term_signal) {$/;"	f
cnt	poll/uv_poll_init.cpp	/^int cnt = 0;$/;"	v
command	onchange/main.c	/^const char *command;$/;"	v
counter	idle-basic/main.c	/^int64_t counter = 0;$/;"	v
counter	uvstop/main.c	/^int64_t counter = 0;$/;"	v
create_curl_context	uvwget/main.c	/^curl_context_t *create_curl_context(curl_socket_t sockfd) {$/;"	f
create_loop	signal/main.c	/^uv_loop_t* create_loop()$/;"	f
crunch_away	idle-compute/main.c	/^void crunch_away(uv_idle_t* handle) {$/;"	f
curl_close_cb	uvwget/main.c	/^void curl_close_cb(uv_handle_t *handle) {$/;"	f
curl_context_s	uvwget/main.c	/^typedef struct curl_context_s {$/;"	s	file:
curl_context_t	uvwget/main.c	/^} curl_context_t;$/;"	t	typeref:struct:curl_context_s	file:
curl_handle	uvwget/main.c	/^CURLM *curl_handle;$/;"	v
curl_perform	uvwget/main.c	/^void curl_perform(uv_poll_t *req, int status, int events) {$/;"	f
destroy_curl_context	uvwget/main.c	/^void destroy_curl_context(curl_context_t *context) {$/;"	f
dummy_buf	multi-echo-server/main.c	/^uv_buf_t dummy_buf;$/;"	v
echo_read	multi-echo-server/worker.c	/^void echo_read(uv_stream_t *client, ssize_t nread, const uv_buf_t *buf) {$/;"	f
echo_read	pipe-echo-server/main.c	/^void echo_read(uv_stream_t *client, ssize_t nread, const uv_buf_t *buf) {$/;"	f
echo_read	tcp-echo-server/main.c	/^void echo_read(uv_stream_t *client, ssize_t nread, const uv_buf_t *buf) {$/;"	f
echo_write	multi-echo-server/worker.c	/^void echo_write(uv_write_t *req, int status) {$/;"	f
echo_write	pipe-echo-server/main.c	/^void echo_write(uv_write_t *req, int status) {$/;"	f
echo_write	tcp-echo-server/main.c	/^void echo_write(uv_write_t *req, int status) {$/;"	f
examples	Makefile	/^examples=\\$/;"	m
fake_download	progress/main.c	/^void fake_download(uv_work_t *req) {$/;"	f
fake_job	ref-timer/main.c	/^void fake_job(uv_timer_t *handle) {$/;"	f
fake_job_req	ref-timer/main.c	/^uv_timer_t fake_job_req;$/;"	v
fib	queue-cancel/main.c	/^void fib(uv_work_t *req) {$/;"	f
fib	queue-work/main.c	/^void fib(uv_work_t *req) {$/;"	f
fib_	queue-cancel/main.c	/^long fib_(long t) {$/;"	f
fib_	queue-work/main.c	/^long fib_(long t) {$/;"	f
fib_reqs	queue-cancel/main.c	/^uv_work_t fib_reqs[FIB_UNTIL];$/;"	v
file_open_req	uvtee-all-async/main.c	/^uv_fs_t file_open_req;$/;"	v
file_pipe	uvtee-all-async/main.c	/^pipe_t file_pipe   = { .name = "file" };$/;"	v
file_pipe	uvtee-reuse-buf/main.c	/^uv_pipe_t file_pipe;$/;"	v
file_pipe	uvtee/main.c	/^uv_pipe_t file_pipe;$/;"	v
free_write_req	multi-echo-server/worker.c	/^void free_write_req(uv_write_t *req) {$/;"	f
free_write_req	pipe-echo-server/main.c	/^void free_write_req(uv_write_t *req) {$/;"	f
free_write_req	tcp-echo-server/main.c	/^void free_write_req(uv_write_t *req) {$/;"	f
free_write_req	uvtee-all-async/main.c	/^void free_write_req(uv_write_t *req) {$/;"	f
free_write_req	uvtee-reuse-buf/main.c	/^void free_write_req(uv_write_t *req) {$/;"	f
free_write_req	uvtee/main.c	/^void free_write_req(uv_write_t *req) {$/;"	f
gc	ref-timer/main.c	/^void gc(uv_timer_t *handle) {$/;"	f
gc_req	ref-timer/main.c	/^uv_timer_t gc_req;$/;"	v
handle_socket	uvwget/main.c	/^int handle_socket(CURL *easy, curl_socket_t s, int action, void *userp, void *socketp) {$/;"	f
hare	thread-create/main.c	/^void hare(void *arg) {$/;"	f
height	tty-gravity/main.c	/^int width, height;$/;"	v
idle_cb	uvstop/main.c	/^void idle_cb(uv_idle_t *handle) {$/;"	f
idler	idle-compute/main.c	/^uv_idle_t idler;$/;"	v
init_plugin_function	plugin/main.c	/^typedef void (*init_plugin_function)();$/;"	t	file:
initialize	plugin/hello.c	/^void initialize() {$/;"	f
invoke_cgi_script	cgi/main.c	/^void invoke_cgi_script(uv_tcp_t *client) {$/;"	f
iov	uvcat/main.c	/^static uv_buf_t iov;$/;"	v	file:
loop	cgi/main.c	/^uv_loop_t *loop;$/;"	v
loop	detach/main.c	/^uv_loop_t *loop;$/;"	v
loop	dns/main.c	/^uv_loop_t *loop;$/;"	v
loop	idle-compute/main.c	/^uv_loop_t *loop;$/;"	v
loop	multi-echo-server/main.c	/^uv_loop_t *loop;$/;"	v
loop	multi-echo-server/worker.c	/^uv_loop_t *loop;$/;"	v
loop	onchange/main.c	/^uv_loop_t *loop;$/;"	v
loop	pipe-echo-server/main.c	/^uv_loop_t *loop;$/;"	v
loop	proc-streams/main.c	/^uv_loop_t *loop;$/;"	v
loop	progress/main.c	/^uv_loop_t *loop;$/;"	v
loop	queue-cancel/main.c	/^uv_loop_t *loop;$/;"	v
loop	queue-work/main.c	/^uv_loop_t *loop;$/;"	v
loop	ref-timer/main.c	/^uv_loop_t *loop;$/;"	v
loop	spawn/main.c	/^uv_loop_t *loop;$/;"	v
loop	tcp-echo-server/main.c	/^uv_loop_t *loop;$/;"	v
loop	tty-gravity/main.c	/^uv_loop_t *loop;$/;"	v
loop	tty/main.c	/^uv_loop_t *loop;$/;"	v
loop	udp-dhcp/main.c	/^uv_loop_t *loop;$/;"	v
loop	uvtee/main.c	/^uv_loop_t *loop;$/;"	v
loop	uvwget/main.c	/^uv_loop_t *loop;$/;"	v
main	.scaffold/main.c	/^int main() {$/;"	f
main	cgi/main.c	/^int main() {$/;"	f
main	cgi/tick.c	/^int main() {$/;"	f
main	detach/main.c	/^int main() {$/;"	f
main	dns/main.c	/^int main() {$/;"	f
main	helloworld/main.c	/^int main() {$/;"	f
main	idle-basic/main.c	/^int main() {$/;"	f
main	idle-compute/main.c	/^int main() {$/;"	f
main	interfaces/main.c	/^int main() {$/;"	f
main	locks/main.c	/^int main()$/;"	f
main	locks/note_main.c	/^int main()$/;"	f
main	multi-echo-server/main.c	/^int main() {$/;"	f
main	multi-echo-server/worker.c	/^int main() {$/;"	f
main	onchange/main.c	/^int main(int argc, char **argv) {$/;"	f
main	pipe-echo-server/main.c	/^int main() {$/;"	f
main	plugin/main.c	/^int main(int argc, char **argv) {$/;"	f
main	poll/uv_poll_init.cpp	/^int main(int argc, char **argv)$/;"	f
main	proc-streams/main.c	/^int main() {$/;"	f
main	proc-streams/test.c	/^int main()$/;"	f
main	progress/main.c	/^int main() {$/;"	f
main	queue-cancel/main.c	/^int main() {$/;"	f
main	queue-work/main.c	/^int main() {$/;"	f
main	ref-timer/main.c	/^int main() {$/;"	f
main	signal/main.c	/^int main()$/;"	f
main	spawn/main.c	/^int main() {$/;"	f
main	tcp-echo-server/main.c	/^int main() {$/;"	f
main	thread-create/main.c	/^int main() {$/;"	f
main	tty-gravity/main.c	/^int main() {$/;"	f
main	tty/main.c	/^int main() {$/;"	f
main	udp-dhcp/main.c	/^int main() {$/;"	f
main	uvcat/main.c	/^int main(int argc, char **argv) {$/;"	f
main	uvstop/main.c	/^int main() {$/;"	f
main	uvtee-all-async/main.c	/^int main(int argc, char **argv) {$/;"	f
main	uvtee-reuse-buf/main.c	/^int main(int argc, char **argv) {$/;"	f
main	uvtee/main.c	/^int main(int argc, char **argv) {$/;"	f
main	uvwget/main.c	/^int main(int argc, char **argv) {$/;"	f
make_discover_msg	udp-dhcp/main.c	/^uv_buf_t make_discover_msg() {$/;"	f
message	tty-gravity/main.c	/^char *message = "  Hello TTY  ";$/;"	v
mfp_register	plugin/main.c	/^void mfp_register(const char *name) {$/;"	f
name	uvtee-all-async/main.c	/^  char *name;$/;"	m	struct:__anon2	file:
net	multi-echo-server/hammer.js	/^var net = require('net');$/;"	v
numlock	locks/main.c	/^uv_rwlock_t numlock;$/;"	v
numlock	locks/note_main.c	/^uv_rwlock_t numlock;$/;"	v
on_connect	dns/main.c	/^void on_connect(uv_connect_t *req, int status) {$/;"	f
on_exit	proc-streams/main.c	/^void on_exit(uv_process_t *req, int64_t exit_status, int term_signal) {$/;"	f
on_exit	spawn/main.c	/^void on_exit(uv_process_t *req, int64_t exit_status, int term_signal) {$/;"	f
on_file_write	uvtee/main.c	/^void on_file_write(uv_write_t *req, int status) {$/;"	f
on_new_connection	cgi/main.c	/^void on_new_connection(uv_stream_t *server, int status) {$/;"	f
on_new_connection	multi-echo-server/main.c	/^void on_new_connection(uv_stream_t *server, int status) {$/;"	f
on_new_connection	multi-echo-server/worker.c	/^void on_new_connection(uv_stream_t *q, ssize_t nread, const uv_buf_t *buf) {$/;"	f
on_new_connection	pipe-echo-server/main.c	/^void on_new_connection(uv_stream_t *server, int status) {$/;"	f
on_new_connection	tcp-echo-server/main.c	/^void on_new_connection(uv_stream_t *server, int status) {$/;"	f
on_open	uvcat/main.c	/^void on_open(uv_fs_t *req) {$/;"	f
on_read	dns/main.c	/^void on_read(uv_stream_t *client, ssize_t nread, const uv_buf_t *buf) {$/;"	f
on_read	udp-dhcp/main.c	/^void on_read(uv_udp_t *req, ssize_t nread, const uv_buf_t *buf, const struct sockaddr *addr, unsigned flags) {$/;"	f
on_read	uvcat/main.c	/^void on_read(uv_fs_t *req) {$/;"	f
on_resolved	dns/main.c	/^void on_resolved(uv_getaddrinfo_t *resolver, int status, struct addrinfo *res) {$/;"	f
on_send	udp-dhcp/main.c	/^void on_send(uv_udp_send_t *req, int status) {$/;"	f
on_stdout_write	uvtee/main.c	/^void on_stdout_write(uv_write_t *req, int status) {$/;"	f
on_timeout	uvwget/main.c	/^void on_timeout(uv_timer_t *req) {$/;"	f
on_type	idle-compute/main.c	/^void on_type(uv_fs_t *req) {$/;"	f
on_write	uvcat/main.c	/^void on_write(uv_fs_t *req) {$/;"	f
open_cb	uvtee-all-async/main.c	/^void open_cb(uv_fs_t* req) {$/;"	f
open_req	uvcat/main.c	/^uv_fs_t open_req;$/;"	v
options	cgi/main.c	/^uv_process_options_t options;$/;"	v
options	detach/main.c	/^uv_process_options_t options;$/;"	v
options	multi-echo-server/main.c	/^    uv_process_options_t options;$/;"	m	struct:child_worker	file:
options	proc-streams/main.c	/^uv_process_options_t options;$/;"	v
options	spawn/main.c	/^uv_process_options_t options;$/;"	v
percentage	progress/main.c	/^double percentage;$/;"	v
pipe	multi-echo-server/main.c	/^    uv_pipe_t pipe;$/;"	m	struct:child_worker	file:
pipe	uvtee-all-async/main.c	/^  uv_pipe_t pipe;$/;"	m	struct:__anon2	file:
pipe_t	uvtee-all-async/main.c	/^} pipe_t;$/;"	t	typeref:struct:__anon2	file:
poll_handle	uvwget/main.c	/^    uv_poll_t poll_handle;$/;"	m	struct:curl_context_s	file:
pos	tty-gravity/main.c	/^int pos = 0;$/;"	v
prep_cb	uvstop/main.c	/^void prep_cb(uv_prepare_t *handle) {$/;"	f
print_progress	progress/main.c	/^void print_progress(uv_async_t *handle) {$/;"	f
queue	multi-echo-server/worker.c	/^uv_pipe_t queue;$/;"	v
read_cb	uvtee-all-async/main.c	/^void read_cb(uv_stream_t *stream, ssize_t nread, const uv_buf_t *buf) {$/;"	f
read_cb	uvtee-reuse-buf/main.c	/^void read_cb(uv_stream_t *stream, ssize_t nread, const uv_buf_t *buf) {$/;"	f
read_req	uvcat/main.c	/^uv_fs_t read_req;$/;"	v
read_stdin	uvtee/main.c	/^void read_stdin(uv_stream_t *stream, ssize_t nread, const uv_buf_t *buf) {$/;"	f
reader	locks/main.c	/^void reader(void *n)$/;"	f
reader	locks/note_main.c	/^void reader(void *n)$/;"	f
recv_socket	udp-dhcp/main.c	/^uv_udp_t recv_socket;$/;"	v
remove_sock	pipe-echo-server/main.c	/^void remove_sock(int sig) {$/;"	f
req	multi-echo-server/main.c	/^    uv_process_t req;$/;"	m	struct:child_worker	file:
req	multi-echo-server/worker.c	/^    uv_write_t req;$/;"	m	struct:__anon7	file:
req	pipe-echo-server/main.c	/^    uv_write_t req;$/;"	m	struct:__anon3	file:
req	tcp-echo-server/main.c	/^    uv_write_t req;$/;"	m	struct:__anon5	file:
req	uvtee-all-async/main.c	/^  uv_write_t req;$/;"	m	struct:__anon1	file:
req	uvtee-reuse-buf/main.c	/^  uv_write_t req;$/;"	m	struct:__anon4	file:
req	uvtee/main.c	/^    uv_write_t req;$/;"	m	struct:__anon6	file:
reusebuf	uvtee-reuse-buf/main.c	/^static char *reusebuf = NULL;$/;"	v	file:
reusesize	uvtee-reuse-buf/main.c	/^static size_t reusesize = -1;$/;"	v	file:
round_robin_counter	multi-echo-server/main.c	/^int round_robin_counter;$/;"	v
run_command	onchange/main.c	/^void run_command(uv_fs_event_t *handle, const char *filename, int events, int status) {$/;"	f
send_socket	udp-dhcp/main.c	/^uv_udp_t send_socket;$/;"	v
setup_workers	multi-echo-server/main.c	/^void setup_workers() {$/;"	f
shared_num	locks/main.c	/^int shared_num;$/;"	v
shared_num	locks/note_main.c	/^int shared_num;$/;"	v
signal_handler	queue-cancel/main.c	/^void signal_handler(uv_signal_t *req, int signum)$/;"	f
signal_handler	signal/main.c	/^void signal_handler(uv_signal_t *handle, int signum)$/;"	f
sockfd	uvwget/main.c	/^    curl_socket_t sockfd;$/;"	m	struct:curl_context_s	file:
start_timeout	uvwget/main.c	/^void start_timeout(CURLM *multi, long timeout_ms, void *userp) {$/;"	f
stdin_pipe	uvtee-all-async/main.c	/^pipe_t stdin_pipe  = { .name = "stdin" };$/;"	v
stdin_pipe	uvtee-reuse-buf/main.c	/^uv_pipe_t stdin_pipe;$/;"	v
stdin_pipe	uvtee/main.c	/^uv_pipe_t stdin_pipe;$/;"	v
stdin_watcher	idle-compute/main.c	/^uv_fs_t stdin_watcher;$/;"	v
stdout_pipe	uvtee-all-async/main.c	/^pipe_t stdout_pipe = { .name = "stdout" };$/;"	v
stdout_pipe	uvtee-reuse-buf/main.c	/^uv_pipe_t stdout_pipe;$/;"	v
stdout_pipe	uvtee/main.c	/^uv_pipe_t stdout_pipe;$/;"	v
thread1_worker	signal/main.c	/^void thread1_worker(void *userp)$/;"	f
thread2_worker	signal/main.c	/^void thread2_worker(void *userp)$/;"	f
tick	tty-gravity/main.c	/^uv_timer_t tick;$/;"	v
timeout	uvwget/main.c	/^uv_timer_t timeout;$/;"	v
tortoise	thread-create/main.c	/^void tortoise(void *arg) {$/;"	f
tty	tty-gravity/main.c	/^uv_tty_t tty;$/;"	v
tty	tty/main.c	/^uv_tty_t tty;$/;"	v
uname_S	Makefile	/^uname_S=$(shell uname -s)$/;"	m
update	tty-gravity/main.c	/^void update(uv_timer_t *req) {$/;"	f
wait_for_a_while	idle-basic/main.c	/^void wait_for_a_while(uv_idle_t* handle) {$/;"	f
width	tty-gravity/main.c	/^int width, height;$/;"	v
worker_path	multi-echo-server/main.c	/^char worker_path[500];$/;"	v
workers	multi-echo-server/main.c	/^} *workers;$/;"	v	typeref:struct:child_worker
write	multi-echo-server/hammer.js	/^var write = function(socket) {$/;"	f
write_cb	uvtee-all-async/main.c	/^void write_cb(uv_write_t* req, int status) {$/;"	f
write_cb	uvtee-reuse-buf/main.c	/^void write_cb(uv_write_t* req, int status) {$/;"	f
write_data	uvtee-all-async/main.c	/^void write_data(uv_stream_t *dest, size_t size, const uv_buf_t *buf, uv_write_cb cb) {$/;"	f
write_data	uvtee-reuse-buf/main.c	/^void write_data(uv_stream_t *dest, size_t size, const uv_buf_t *buf, uv_write_cb cb) {$/;"	f
write_data	uvtee/main.c	/^void write_data(uv_stream_t *dest, size_t size, uv_buf_t buf, uv_write_cb cb) {$/;"	f
write_req	tty-gravity/main.c	/^uv_write_t write_req;$/;"	v
write_req	uvcat/main.c	/^uv_fs_t write_req;$/;"	v
write_req_t	multi-echo-server/worker.c	/^} write_req_t;$/;"	t	typeref:struct:__anon7	file:
write_req_t	pipe-echo-server/main.c	/^} write_req_t;$/;"	t	typeref:struct:__anon3	file:
write_req_t	tcp-echo-server/main.c	/^} write_req_t;$/;"	t	typeref:struct:__anon5	file:
write_req_t	uvtee-all-async/main.c	/^} write_req_t;$/;"	t	typeref:struct:__anon1	file:
write_req_t	uvtee-reuse-buf/main.c	/^} write_req_t;$/;"	t	typeref:struct:__anon4	file:
write_req_t	uvtee/main.c	/^} write_req_t;$/;"	t	typeref:struct:__anon6	file:
writer	locks/main.c	/^void writer(void *n)$/;"	f
writer	locks/note_main.c	/^void writer(void *n)$/;"	f

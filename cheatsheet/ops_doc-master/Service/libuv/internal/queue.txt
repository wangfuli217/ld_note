queue
    QUEUE is a circularly linked list in libuv which is used to store tasks in 
order. Its main idea is to have a array with two items. The first item points 
to the previous list node while the second points to the next one. The last 
node points again to the beginning of the list. Through this set up it is 
possible by just following the pointers to navigate through the list. If you 
now want to access a specific queue member you can calculate the memory address 
of the struct which implements a queue node as property. This is possible 
because a struct is always saved in one memory block and the position of a 
property has a specific byte offset. Using this allows to create a pointer to 
the beginning of the whole struct and we can access other properties.
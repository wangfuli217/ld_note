http://www.throwtheswitch.org/build/make

demo 
cheatsheet\ops_doc-master\Service\unittest\Unity\examples\example_1
cheatsheet\ops_doc-master\Service\unittest\Unity\examples\example_2

ASSUMPTION 1: DIRECTORIES
  build - where all temporary stuff goes
  src - where we have all our source code for release (and to be tested)
  test - where we have all our unit tests
  unity - where we have copied the latest copy of the Unity project
  
ASSUMPTION 2: TOOLCHAIN
  GNU tools

START THE DISSECTION ALREADY
  1. DETERMINING THE HOST
  ----->
      ifeq ($(OS),Windows_NT)
      ifeq ($(shell uname -s),) # not in a bash-like shell
        CLEANUP = del /F /Q
        MKDIR = mkdir
      else # in a bash-like shell, like msys
        CLEANUP = rm -f
        MKDIR = mkdir -p
      endif
        TARGET_EXTENSION=.exe
      else
        CLEANUP = rm -f
        MKDIR = mkdir -p
        TARGET_EXTENSION=out
  ----->
  2. MAKING PATHS
  ----->
    PATHU = unity/src/
    PATHS = src/
    PATHT = test/
    PATHB = build/
    PATHD = build/depends/
    PATHO = build/objs/
    PATHR = build/results
    
    BUILD_PATHS = $(PATHB) $(PATHD) $(PATHO) $(PATHR)
    RESULTS = $(patsubst $(PATHT)Test%.c,$(PATHR)Test%.txt,$(SRCT) )
  ----->
  3. THE SOURCE
    SRCT = $(wildcard $(PATHT)*.c)
  4. THE TOOLCHAIN
    COMPILE=gcc -c
    LINK=gcc
    DEPEND=gcc -MM -MG -MF
    CFLAGS=-I. -I$(PATHU) -I$(PATHS) -DTEST
  
  RULE 1: SUMMARIZING RESULTS
  test: $(BUILD_PATHS) $(RESULTS)
	@echo "-----------------------\nIGNORES:\n-----------------------"
	@echo "$(IGNORE)"
	@echo "-----------------------\nFAILURES:\n-----------------------"
	@echo "$(FAIL)"
	@echo "-----------------------\nPASSED:\n-----------------------"
	@echo "$(PASSED)"
	@echo "\nDONE"
    
  RULE 2: CREATING RESULTS
  RESULTS = $(patsubst $(PATHT)Test%.c,$(PATHR)Test%.txt,$(SRCT) )
  $(PATHR)%.txt: $(PATHB)%.$(TARGET_EXTENSION)
	-./$< > $@ 2>&
  
  RULE 3: CREATING EXECUTABLES
  $(PATHB)Test%.$(TARGET_EXTENSION): $(PATHO)Test%.o $(PATHO)%.o $(PATHU)unity.o #$(PATHD)Test%.d
	$(LINK) -o $@ $^
    
  RULE 4: CREATING OBJECT FILES
  $(PATHO)%.o:: $(PATHT)%.c
	$(COMPILE) $(CFLAGS) $< -o $@

$(PATHO)%.o:: $(PATHS)%.c
	$(COMPILE) $(CFLAGS) $< -o $@

$(PATHO)%.o:: $(PATHU)%.c $(PATHU)%.h
	$(COMPILE) $(CFLAGS) $< -o $@
  
  RULE 5: DEPENDENCIES
  $(PATHD)%.d:: $(PATHT)%.c
	$(DEPEND) $@ $<
    
5. DIRECTORIES
$(PATHB):
	$(MKDIR) $(PATHB)

$(PATHD):
	$(MKDIR) $(PATHD)

$(PATHO):
	$(MKDIR) $(PATHO)

$(PATHR):
	$(MKDIR) $(PATHR)

clean:
	$(CLEANUP) $(PATHO)*.o
	$(CLEANUP) $(PATHB)*.$(TARGET_EXTENSION)
	$(CLEANUP) $(PATHR)*.txt

6. KEEPING THINGS AROUND
.PRECIOUS: $(PATHB)Test%.$(TARGET_EXTENSION)
.PRECIOUS: $(PATHD)%.d
.PRECIOUS: $(PATHO)%.o
.PRECIOUS: $(PATHR)%.txt

7. FINISHING TOUCH
.PHONY: clean
.PHONY: test
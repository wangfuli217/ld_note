https://api.cmocka.org/group__cmocka__param.html

Functions
void 	expect_check (#function, #parameter, #check_function, const void *check_data)
 	Add a custom parameter checking function. More...
 
void 	expect_in_set (#function, #parameter, LargestIntegralType value_array[])
 	Add an event to check if the parameter value is part of the provided array. More...
 
void 	expect_in_set_count (#function, #parameter, LargestIntegralType value_array[], size_t count)
 	Add an event to check if the parameter value is part of the provided array. More...
 
void 	expect_not_in_set (#function, #parameter, LargestIntegralType value_array[])
 	Add an event to check if the parameter value is not part of the provided array. More...
 
void 	expect_not_in_set_count (#function, #parameter, LargestIntegralType value_array[], size_t count)
 	Add an event to check if the parameter value is not part of the provided array. More...
 
void 	expect_in_range (#function, #parameter, LargestIntegralType minimum, LargestIntegralType maximum)
 	Add an event to check a parameter is inside a numerical range. The check would succeed if minimum <= value <= maximum. More...
 
void 	expect_in_range_count (#function, #parameter, LargestIntegralType minimum, LargestIntegralType maximum, size_t count)
 	Add an event to repeatedly check a parameter is inside a numerical range. The check would succeed if minimum <= value <= maximum. More...
 
void 	expect_not_in_range (#function, #parameter, LargestIntegralType minimum, LargestIntegralType maximum)
 	Add an event to check a parameter is outside a numerical range. The check would succeed if minimum > value > maximum. More...
 
void 	expect_not_in_range_count (#function, #parameter, LargestIntegralType minimum, LargestIntegralType maximum, size_t count)
 	Add an event to repeatedly check a parameter is outside a numerical range. The check would succeed if minimum > value > maximum. More...
 
void 	expect_value (#function, #parameter, LargestIntegralType value)
 	Add an event to check if a parameter is the given value. More...
 
void 	expect_value_count (#function, #parameter, LargestIntegralType value, size_t count)
 	Add an event to repeatedly check if a parameter is the given value. More...
 
void 	expect_not_value (#function, #parameter, LargestIntegralType value)
 	Add an event to check if a parameter isn't the given value. More...
 
void 	expect_not_value_count (#function, #parameter, LargestIntegralType value, size_t count)
 	Add an event to repeatedly check if a parameter isn't the given value. More...
 
void 	expect_string (#function, #parameter, const char *string)
 	Add an event to check if the parameter value is equal to the provided string. More...
 
void 	expect_string_count (#function, #parameter, const char *string, size_t count)
 	Add an event to check if the parameter value is equal to the provided string. More...
 
void 	expect_not_string (#function, #parameter, const char *string)
 	Add an event to check if the parameter value isn't equal to the provided string. More...
 
void 	expect_not_string_count (#function, #parameter, const char *string, size_t count)
 	Add an event to check if the parameter value isn't equal to the provided string. More...
 
void 	expect_memory (#function, #parameter, void *memory, size_t size)
 	Add an event to check if the parameter does match an area of memory. More...
 
void 	expect_memory_count (#function, #parameter, void *memory, size_t size, size_t count)
 	Add an event to repeatedly check if the parameter does match an area of memory. More...
 
void 	expect_not_memory (#function, #parameter, void *memory, size_t size)
 	Add an event to check if the parameter doesn't match an area of memory. More...
 
void 	expect_not_memory_count (#function, #parameter, void *memory, size_t size, size_t count)
 	Add an event to repeatedly check if the parameter doesn't match an area of memory. More...
 
void 	expect_any (#function, #parameter)
 	Add an event to check if a parameter (of any value) has been passed. More...
 
void 	expect_any_count (#function, #parameter, size_t count)
 	Add an event to repeatedly check if a parameter (of any value) has been passed. More...
 
void 	check_expected (#parameter)
 	Determine whether a function parameter is correct. More...
 
void 	check_expected_ptr (#parameter)
 	Determine whether a function parameter is correct. More...
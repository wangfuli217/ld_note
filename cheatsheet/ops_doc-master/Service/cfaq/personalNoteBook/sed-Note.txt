

refer to:   https://coolshell.cn/articles/9104.html     

sed 的优势是: 字符串替换

sed -i "s/matchexpression/newstr/g" file.txt  其中-i表示改写原文件，/g=global.  替换匹配的字符串s/
sed -i "/matchexpression/c  replace_curr_line_with_new_str" my.txt    替换匹配行/c
sed -i "/matchexpression/a  append_new_line_after_curr_line" my.txt   在匹配的文本处添加新行/a
sed -i 's/^/#/g' pets.txt  在每行前加#
sed -i 's/$/#/g' pets.txt  在每行后加#
sed -i "{/str1/{s/^/#/g}}"  嵌套命令，先查找str1, 然后在匹配行前加#
sed -i '3,6 {/This/d}' pets.txt  对3行到第6行， 删除This行
sed -i  "s/my/[&]/g" my.txt  在my的两边加上[], 其中&表示匹配的内容
sed -i "s/\(.*\).rtm/\1.log/g" my.txt  把xxx.rtm替换为xxx.log   圆括号括起来的正则表达式所匹配的字符串可以当成变量来使用，sed中使用的是\1,\2…


sed -i "{/str1/{s/^/#/g}}"  *.rtm  对当前目录下所有的.rtm文件，执行操作：查找str1, 然后在匹配行前加#
grep -l str1 *.rtm | xargs sed -i "{/str1/{s/^/#/g}}"  效果同上。

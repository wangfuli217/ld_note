HTML定义了页面的内容，CSS控制页面元素的样式(字体颜色)，而JavaScript负责和用户的交互逻辑。

学习网站：   
http://www.w3school.com.cn/example/jseg_examples.asp   javascript实例
http://www.w3school.com.cn/jsref/index.asp  javascript 参考手册，包括 javascript对象，Browser对象(BOM)，HTML DOM对象;
https://www.w3schools.com  国外的w3

廖雪峰javascript:  https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000
https://github.com/SubLuLu/lxf_js
book<javascript标准参考教材>阮一峰

浏览器在执行HTML, javascript 时是从上到下，从左到右的顺序执行，如果javasript表现为函数，则在被调用的点执行

前端网页3部分: 1.页面结构（html5）2.样式字体颜色设置（CSS）3.逻辑处理比如用户事件响应（javascript）;
最新前端技术是react native:用简洁语法高效绘制Dom框架，支持virtual dom，只用js，代码复用率高（适用android ios），原生组件，热加载，专注于UI；


Json比XML更简洁，因为里面几乎是纯数据，不包含额外的head信息，不需要专门的解析器，适合任何语言，
而XML里面包含了一些head,还需要专门的XML解析器；

前端框架： React Native,  Vue;
Android: Kotlin, Java; Android studio
iOS: Objective-C, Swift; 

Javascript的prototype其实就是单继承，所有对象的祖先都是Object;
Javascript里面的类型函数类似C++的Static成员函数，调用时需要传入对象作为入参Object.func(obja);
Javascript里面的对象函数类似C++的NonStatic成员函数，通过对象调用ojba.func();通过this指针访问对象属性；

1）如果javascript代码是嵌入在html里面，必须放在<script>xxx </script>，  如果是单独的.js文件，则不需要；
    <script src = "" /> html引用外部的js文件；
1）js注释用 //    或者  /*  */
2）变量用 var 
3）对象的属性都是字符串，访问方式： obj.key  or  obj[key]
3）函数异常处理2种方式，a)try_catch; b)自定义错误回调函数handleErr(msg,url,lineNum)并初始化全局函数指针onerror=handleErr; refer to:http://www.w3school.com.cn/tiy/t.asp?f=jseg_onerror
4)页面跳转： document.location.href="/index.html"
5)浏览器的各种信息: navigator.cookieEnabled/userAgent/platform/appVersion
6)javascript 输出： console.log(),    alert('string'),  document.write("<br  />") 用于向HTML网页输出
   alert() 函数在 JavaScript 中并不常用，但它对于代码测试非常方便

7)全局对象document：
document.getElementById, document.cookie,  document.getElementByName,
var arr = document.getElementsByTagName('p') 返回数组，因为有很多<p>元素，按照html顺序编号
var arr = document. getElementsByClassName('xx') 返回数组
eg: document.getElementById("idxx").innerHTML=newtxt 修改文本内容

8)常用事件：
onclick, onload,onunload, onmouseover, onmouseout, onfocus, onsubmit, onchange(文本输入)
eg:  <input type="button" value="按钮" onClick = "timedMsg()" />

8)给元素动态添加事件，1个元素可以添加多个事件:
element.addEventListener("click", click_function); 这里是click，不是onClick
element.removeEventListener("click", click_function )

9)弹框：
1)确认框 var r = confirm("select yes or no"); return true or false;
2)警告框 alert("str")
3）信息输入框： var r=prompt("input answer"); if(r != null && r != "")

10)字符串操作： str.indexOf()查找子串, str.length, str.substring(b, e), escape(str),unescape(str);
11)起定时器 setTimeout("cb()",2000);  2秒后执行回调函数cb,     停止定时器  clearTimeout(t),
      周期定时器  setInterval(func, T) ,  clearInterval(t);

12）时间对象： var date = new Date();

14)通过构造函数来创建对象 obj=new person("zl",35)： http://www.w3school.com.cn/tiy/t.asp?f=jseg_create_object2
     person是构造函数，里面通过this指针初始化对象属性

15)函数复用： 不同的对象可以复用同一个函数定义: 在对象内赋值函数名，并把函数体定义在对象外；eg: obja={this.log = funclog， this.name='xx'}
   funclog定义在对象外，可以访问this.name， 其它对象如果要复用函数funclog只要包含属性name即可;

16)数组： 可以动态插入元素(通过赋值)，数组下标用数字
 var arr = new Array(); arr[0] = x; or arr = [1,2,3]
 for(var i=0; i<arr.length; i++)

14)添加和删除元素:
var p = document.createElement("p");
var node = document.createTextNode("sometxt");
p.appendChild(node)

15）创建动画： 移动元素的position=absolute，
16)创建图像幻灯片：修改img元素的src属性

17)表单验证： 比如在输入密码时要保证2次输入一致才能提交
<form onsubmit="return validate()" method="post">  点击提交时会执行自定义js函数validate()，对两个input pwd校验，如果onsubmit返回flase则表单不会提交
PWD: <input  type="text" id="pwd1">
Repeat: <input  type="text" id="pwd2">
<input type="submit" value="Submit" />
</form>

13)异常：
try{
}
catch(err)
{
  alert(err.description);
}

14)js 也可以修改元素样式，取代css
var x = document.getElementById('id1'); x.style.color = "red"




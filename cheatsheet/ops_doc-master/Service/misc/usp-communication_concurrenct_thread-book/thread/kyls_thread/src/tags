!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
KYLS_SK_SIZE	kyls_thread.c	15;"	d	file:
SR_IOEVENT	kyls_thread.c	23;"	d	file:
SR_NORMAL	kyls_thread.c	24;"	d	file:
SR_TIMEUP	kyls_thread.c	22;"	d	file:
TS_RUNNING	kyls_thread.c	27;"	d	file:
TS_SCHEDULING	kyls_thread.c	28;"	d	file:
blk_fd	kyls_thread.c	/^    int blk_fd;$/;"	m	struct:kyls_thread_t	file:
conn_proc	echo_server.c	/^void conn_proc(void *arg)$/;"	f
ctx	kyls_thread.c	/^    mctx_t ctx;$/;"	m	struct:kyls_thread_t	file:
epollfd	kyls_thread.c	/^    int epollfd;$/;"	m	struct:__anon2	file:
global_tid_idx	kyls_thread.c	/^static int global_tid_idx = 0;$/;"	v	file:
jb	kyls_thread.c	/^    jmp_buf jb;$/;"	m	struct:__anon1	file:
kyls_accept	kyls_thread.c	/^int kyls_accept(int fd, struct sockaddr *address, socklen_t *address_len, int timeout_ms)$/;"	f
kyls_current	kyls_thread.c	/^static kyls_thread_t *kyls_current;$/;"	v	file:
kyls_ev	kyls_thread.c	/^} kyls_ev;$/;"	v	typeref:struct:__anon2	file:
kyls_ev_add_fd	kyls_thread.c	/^int kyls_ev_add_fd(int fd, uint32_t events)$/;"	f
kyls_ev_del_fd	kyls_thread.c	/^int kyls_ev_del_fd(int fd)$/;"	f
kyls_freelist	kyls_thread.c	/^static kyls_thread_t *kyls_freelist;$/;"	v	file:
kyls_pending_new	kyls_thread.c	/^static kyls_thread_t *kyls_pending_new;$/;"	v	file:
kyls_read	kyls_thread.c	/^ssize_t kyls_read(int fd, void *buf, size_t n, int timeout_ms)$/;"	f
kyls_sleep_ms	kyls_thread.c	/^void kyls_sleep_ms(unsigned int milliseconds)$/;"	f
kyls_sleeping_head	kyls_thread.c	/^static kyls_thread_t *kyls_sleeping_head;$/;"	v	file:
kyls_socket	kyls_thread.c	/^int kyls_socket(int domain, int type, int protocol)$/;"	f
kyls_switch_to	kyls_thread.c	/^void kyls_switch_to(kyls_thread_t *t)$/;"	f
kyls_t_add_running	kyls_thread.c	/^kyls_thread_t* kyls_t_add_running(kyls_thread_t *t, kyls_thread_t *head, uint32_t reason)$/;"	f
kyls_t_free	kyls_thread.c	/^void kyls_t_free(kyls_thread_t *t)$/;"	f
kyls_t_yield_no_sched	kyls_thread.c	/^void kyls_t_yield_no_sched()$/;"	f
kyls_thread_create	kyls_thread.c	/^struct kyls_thread_t *kyls_thread_create(void (*proc_addr)(void *), void *proc_arg) $/;"	f
kyls_thread_destroy	kyls_thread.c	/^void kyls_thread_destroy()$/;"	f
kyls_thread_init	kyls_thread.c	/^int kyls_thread_init()$/;"	f
kyls_thread_kill	kyls_thread.c	/^int kyls_thread_kill(struct kyls_thread_t *t)$/;"	f
kyls_thread_num	kyls_thread.c	/^static int kyls_thread_num = 0;$/;"	v	file:
kyls_thread_sched	kyls_thread.c	/^void kyls_thread_sched()$/;"	f
kyls_thread_self	kyls_thread.c	/^int kyls_thread_self()$/;"	f
kyls_thread_t	kyls_thread.c	/^typedef struct kyls_thread_t {$/;"	s	file:
kyls_thread_t	kyls_thread.c	/^} kyls_thread_t;$/;"	t	typeref:struct:kyls_thread_t	file:
kyls_thread_yield	kyls_thread.c	/^void kyls_thread_yield()$/;"	f
kyls_tobe_sched	kyls_thread.c	/^static kyls_thread_t *kyls_tobe_sched;$/;"	v	file:
kyls_write	kyls_thread.c	/^ssize_t kyls_write(int fd, void *buf, size_t n, int timeout_ms)$/;"	f
main	echo_server.c	/^int main()$/;"	f
main	test1.c	/^int main()$/;"	f
mctx_called	kyls_thread.c	/^static sig_atomic_t mctx_called;$/;"	v	file:
mctx_caller	kyls_thread.c	/^static mctx_t mctx_caller;$/;"	v	file:
mctx_creat	kyls_thread.c	/^static mctx_t *mctx_creat;$/;"	v	file:
mctx_creat_arg	kyls_thread.c	/^static void *mctx_creat_arg;$/;"	v	file:
mctx_creat_func	kyls_thread.c	/^static void (*mctx_creat_func)(void *);$/;"	v	file:
mctx_creat_sigs	kyls_thread.c	/^static sigset_t mctx_creat_sigs;$/;"	v	file:
mctx_create	kyls_thread.c	/^void mctx_create(mctx_t *mctx, void (*sf_addr)(void *), void *sf_arg, void *sk_addr, size_t sk_size)$/;"	f
mctx_create_boot	kyls_thread.c	/^void mctx_create_boot(void)$/;"	f
mctx_create_trampoline	kyls_thread.c	/^void mctx_create_trampoline(int sig)$/;"	f
mctx_restore	kyls_thread.c	78;"	d	file:
mctx_save	kyls_thread.c	74;"	d	file:
mctx_switch	kyls_thread.c	82;"	d	file:
mctx_t	kyls_thread.c	/^} mctx_t;$/;"	t	typeref:struct:__anon1	file:
next	kyls_thread.c	/^    struct kyls_thread_t *next;$/;"	m	struct:kyls_thread_t	typeref:struct:kyls_thread_t::kyls_thread_t	file:
proc_addr	kyls_thread.c	/^    void *proc_addr;$/;"	m	struct:kyls_thread_t	file:
proc_arg	kyls_thread.c	/^    void *proc_arg;$/;"	m	struct:kyls_thread_t	file:
run_next	kyls_thread.c	/^    struct kyls_thread_t *run_next;$/;"	m	struct:kyls_thread_t	typeref:struct:kyls_thread_t::kyls_thread_t	file:
sched_ctx	kyls_thread.c	/^static mctx_t sched_ctx;$/;"	v	file:
sched_reason	kyls_thread.c	/^    uint32_t sched_reason;$/;"	m	struct:kyls_thread_t	file:
server_proc	echo_server.c	/^void server_proc(void *arg) $/;"	f
server_thread	echo_server.c	/^static struct kyls_thread_t *server_thread;$/;"	v	typeref:struct:kyls_thread_t	file:
sk_addr	kyls_thread.c	/^    void (*sk_addr)(void *);$/;"	m	struct:kyls_thread_t	file:
sk_size	kyls_thread.c	/^    size_t sk_size;$/;"	m	struct:kyls_thread_t	file:
status	kyls_thread.c	/^    uint32_t status;$/;"	m	struct:kyls_thread_t	file:
terminate	echo_server.c	/^static int terminate = 0;$/;"	v	file:
thread_proc	test1.c	/^void thread_proc(void *arg)$/;"	f
tid	kyls_thread.c	/^    int tid;$/;"	m	struct:kyls_thread_t	file:
time_diff_ms	kyls_thread.c	/^int time_diff_ms(struct timeval *base)$/;"	f
time_diff_s	test1.c	/^double time_diff_s(struct timeval *base)$/;"	f
time_wakeup	kyls_thread.c	/^    struct timeval time_wakeup;$/;"	m	struct:kyls_thread_t	typeref:struct:kyls_thread_t::timeval	file:
tvbase	test1.c	/^static struct timeval tvbase;$/;"	v	typeref:struct:timeval	file:

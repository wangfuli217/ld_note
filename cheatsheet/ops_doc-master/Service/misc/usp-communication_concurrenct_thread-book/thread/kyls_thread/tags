!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall -Wno-format -fPIC $(OPT) $(DEBUG) $/;"	m
DEBUG	Makefile	/^DEBUG=-g $/;"	m
INCLUDE_PATH	Makefile	/^INCLUDE_PATH = -I.\/include\/$/;"	m
KYLS_SK_SIZE	src/kyls_thread.c	15;"	d	file:
LIBDIR	Makefile	/^LIBDIR := lib$/;"	m
LIBOUTPUT	Makefile	/^LIBOUTPUT = $(LIBDIR)\/libkyls.a $(LIBDIR)\/libkyls.so$/;"	m
LIBS	Makefile	/^LIBS =$/;"	m
LIB_PATH	Makefile	/^LIB_PATH = $/;"	m
OBJECHO_SERVER	Makefile	/^OBJECHO_SERVER := $(addprefix $(SRCDIR)\/, echo_server.o)$/;"	m
OBJS	Makefile	/^OBJS := $(addprefix $(SRCDIR)\/, kyls_thread.o)$/;"	m
OBJTEST1	Makefile	/^OBJTEST1 := $(addprefix $(SRCDIR)\/, test1.o)$/;"	m
SRCDIR	Makefile	/^SRCDIR := src$/;"	m
SR_IOEVENT	src/kyls_thread.c	23;"	d	file:
SR_NORMAL	src/kyls_thread.c	24;"	d	file:
SR_TIMEUP	src/kyls_thread.c	22;"	d	file:
TS_RUNNING	src/kyls_thread.c	27;"	d	file:
TS_SCHEDULING	src/kyls_thread.c	28;"	d	file:
_KYLS_THREAD_H_	include/kyls_thread.h	2;"	d
blk_fd	src/kyls_thread.c	/^    int blk_fd;$/;"	m	struct:kyls_thread_t	file:
conn_proc	src/echo_server.c	/^void conn_proc(void *arg)$/;"	f
ctx	src/kyls_thread.c	/^    mctx_t ctx;$/;"	m	struct:kyls_thread_t	file:
epollfd	src/kyls_thread.c	/^    int epollfd;$/;"	m	struct:__anon2	file:
global_tid_idx	src/kyls_thread.c	/^static int global_tid_idx = 0;$/;"	v	file:
jb	src/kyls_thread.c	/^    jmp_buf jb;$/;"	m	struct:__anon1	file:
kyls_accept	src/kyls_thread.c	/^int kyls_accept(int fd, struct sockaddr *address, socklen_t *address_len, int timeout_ms)$/;"	f
kyls_bind	include/kyls_thread.h	21;"	d
kyls_close	include/kyls_thread.h	23;"	d
kyls_current	src/kyls_thread.c	/^static kyls_thread_t *kyls_current;$/;"	v	file:
kyls_ev	src/kyls_thread.c	/^} kyls_ev;$/;"	v	typeref:struct:__anon2	file:
kyls_ev_add_fd	src/kyls_thread.c	/^int kyls_ev_add_fd(int fd, uint32_t events)$/;"	f
kyls_ev_del_fd	src/kyls_thread.c	/^int kyls_ev_del_fd(int fd)$/;"	f
kyls_freelist	src/kyls_thread.c	/^static kyls_thread_t *kyls_freelist;$/;"	v	file:
kyls_listen	include/kyls_thread.h	22;"	d
kyls_pending_new	src/kyls_thread.c	/^static kyls_thread_t *kyls_pending_new;$/;"	v	file:
kyls_read	src/kyls_thread.c	/^ssize_t kyls_read(int fd, void *buf, size_t n, int timeout_ms)$/;"	f
kyls_sleep_ms	src/kyls_thread.c	/^void kyls_sleep_ms(unsigned int milliseconds)$/;"	f
kyls_sleeping_head	src/kyls_thread.c	/^static kyls_thread_t *kyls_sleeping_head;$/;"	v	file:
kyls_socket	src/kyls_thread.c	/^int kyls_socket(int domain, int type, int protocol)$/;"	f
kyls_switch_to	src/kyls_thread.c	/^void kyls_switch_to(kyls_thread_t *t)$/;"	f
kyls_t_add_running	src/kyls_thread.c	/^kyls_thread_t* kyls_t_add_running(kyls_thread_t *t, kyls_thread_t *head, uint32_t reason)$/;"	f
kyls_t_free	src/kyls_thread.c	/^void kyls_t_free(kyls_thread_t *t)$/;"	f
kyls_t_yield_no_sched	src/kyls_thread.c	/^void kyls_t_yield_no_sched()$/;"	f
kyls_thread_create	src/kyls_thread.c	/^kyls_thread_t *kyls_thread_create(void (*proc_addr)(void *), void *proc_arg) $/;"	f
kyls_thread_destroy	src/kyls_thread.c	/^void kyls_thread_destroy()$/;"	f
kyls_thread_init	src/kyls_thread.c	/^int kyls_thread_init()$/;"	f
kyls_thread_kill	src/kyls_thread.c	/^int kyls_thread_kill(kyls_thread_t *t)$/;"	f
kyls_thread_num	src/kyls_thread.c	/^static int kyls_thread_num = 0;$/;"	v	file:
kyls_thread_sched	src/kyls_thread.c	/^void kyls_thread_sched()$/;"	f
kyls_thread_self	src/kyls_thread.c	/^int kyls_thread_self()$/;"	f
kyls_thread_t	src/kyls_thread.c	/^typedef struct kyls_thread_t {$/;"	s	file:
kyls_thread_t	src/kyls_thread.c	/^} kyls_thread_t;$/;"	t	typeref:struct:kyls_thread_t	file:
kyls_thread_yield	src/kyls_thread.c	/^void kyls_thread_yield()$/;"	f
kyls_tobe_sched	src/kyls_thread.c	/^static kyls_thread_t *kyls_tobe_sched;$/;"	v	file:
kyls_write	src/kyls_thread.c	/^ssize_t kyls_write(int fd, void *buf, size_t n, int timeout_ms)$/;"	f
main	src/echo_server.c	/^int main()$/;"	f
main	src/test1.c	/^int main()$/;"	f
mctx_called	src/kyls_thread.c	/^static sig_atomic_t mctx_called;$/;"	v	file:
mctx_caller	src/kyls_thread.c	/^static mctx_t mctx_caller;$/;"	v	file:
mctx_creat	src/kyls_thread.c	/^static mctx_t *mctx_creat;$/;"	v	file:
mctx_creat_arg	src/kyls_thread.c	/^static void *mctx_creat_arg;$/;"	v	file:
mctx_creat_func	src/kyls_thread.c	/^static void (*mctx_creat_func)(void *);$/;"	v	file:
mctx_creat_sigs	src/kyls_thread.c	/^static sigset_t mctx_creat_sigs;$/;"	v	file:
mctx_create	src/kyls_thread.c	/^void mctx_create(mctx_t *mctx, void (*sf_addr)(void *), void *sf_arg, void *sk_addr, size_t sk_size)$/;"	f
mctx_create_boot	src/kyls_thread.c	/^void mctx_create_boot(void)$/;"	f
mctx_create_trampoline	src/kyls_thread.c	/^void mctx_create_trampoline(int sig)$/;"	f
mctx_restore	src/kyls_thread.c	78;"	d	file:
mctx_save	src/kyls_thread.c	74;"	d	file:
mctx_switch	src/kyls_thread.c	82;"	d	file:
mctx_t	src/kyls_thread.c	/^} mctx_t;$/;"	t	typeref:struct:__anon1	file:
next	src/kyls_thread.c	/^    struct kyls_thread_t *next;$/;"	m	struct:kyls_thread_t	typeref:struct:kyls_thread_t::kyls_thread_t	file:
proc_addr	src/kyls_thread.c	/^    void *proc_addr;$/;"	m	struct:kyls_thread_t	file:
proc_arg	src/kyls_thread.c	/^    void *proc_arg;$/;"	m	struct:kyls_thread_t	file:
run_next	src/kyls_thread.c	/^    struct kyls_thread_t *run_next;$/;"	m	struct:kyls_thread_t	typeref:struct:kyls_thread_t::kyls_thread_t	file:
sched_ctx	src/kyls_thread.c	/^static mctx_t sched_ctx;$/;"	v	file:
sched_reason	src/kyls_thread.c	/^    uint32_t sched_reason;$/;"	m	struct:kyls_thread_t	file:
server_proc	src/echo_server.c	/^void server_proc(void *arg) $/;"	f
server_thread	src/echo_server.c	/^static kyls_thread server_thread;$/;"	v	file:
sk_addr	src/kyls_thread.c	/^    void (*sk_addr)(void *);$/;"	m	struct:kyls_thread_t	file:
sk_size	src/kyls_thread.c	/^    size_t sk_size;$/;"	m	struct:kyls_thread_t	file:
status	src/kyls_thread.c	/^    uint32_t status;$/;"	m	struct:kyls_thread_t	file:
terminate	src/echo_server.c	/^static int terminate = 0;$/;"	v	file:
thread_proc	src/test1.c	/^void thread_proc(void *arg)$/;"	f
tid	src/kyls_thread.c	/^    int tid;$/;"	m	struct:kyls_thread_t	file:
time_diff_ms	src/kyls_thread.c	/^int time_diff_ms(struct timeval *base)$/;"	f
time_diff_s	src/test1.c	/^double time_diff_s(struct timeval *base)$/;"	f
time_wakeup	src/kyls_thread.c	/^    struct timeval time_wakeup;$/;"	m	struct:kyls_thread_t	typeref:struct:kyls_thread_t::timeval	file:
tvbase	src/test1.c	/^static struct timeval tvbase;$/;"	v	typeref:struct:timeval	file:

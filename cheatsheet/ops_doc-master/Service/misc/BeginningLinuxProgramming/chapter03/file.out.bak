  if( st.st_size != pinfo->ParaTotalSize + sizeof(xlFileHeader_min) + sizeof(header))
    ftruncate(fd, pinfo->ParaTotalSize + sizeof(xlFileHeader_min) + sizeof(header));
  fstat(fd, &st);
  DPRINT("%d, %d, %d, %d\n", pinfo->ParaTotalSize, st.st_size, sizeof(xlFileHeader_min), sizeof(header));
  //mmap参数文件
  pinfo->ParaInfoVect = mmap(0, st.st_size,
                              PROT_READ | PROT_WRITE, MAP_SHARED,
                              fd, 0);

  if( pinfo->ParaInfoVect == MAP_FAILED)
  {
    close(fd);
    return -1;
  }

  un_lock(fd, 0, 0);
  
    if( st.st_size != pinfo->ParaTotalSize + sizeof(xlFileHeader_min) + sizeof(header))
    ftruncate(fd, pinfo->ParaTotalSize + sizeof(xlFileHeader_min) + sizeof(header));
  fstat(fd, &st);
  DPRINT("%d, %d, %d, %d\n", pinfo->ParaTotalSize, st.st_size, sizeof(xlFileHeader_min), sizeof(header));
  //mmap参数文件
  pinfo->ParaInfoVect = mmap(0, st.st_size,
                              PROT_READ | PROT_WRITE, MAP_SHARED,
                              fd, 0);

  if( pinfo->ParaInfoVect == MAP_FAILED)
  {
    close(fd);
    return -1;
  }

  un_lock(fd, 0, 0);
  
  
    if( st.st_size != pinfo->ParaTotalSize + sizeof(xlFileHeader_min) + sizeof(header))
    ftruncate(fd, pinfo->ParaTotalSize + sizeof(xlFileHeader_min) + sizeof(header));
  fstat(fd, &st);
  DPRINT("%d, %d, %d, %d\n", pinfo->ParaTotalSize, st.st_size, sizeof(xlFileHeader_min), sizeof(header));
  //mmap参数文件
  pinfo->ParaInfoVect = mmap(0, st.st_size,
                              PROT_READ | PROT_WRITE, MAP_SHARED,
                              fd, 0);

  if( pinfo->ParaInfoVect == MAP_FAILED)
  {
    close(fd);
    return -1;
  }

  un_lock(fd, 0, 0);
:snapfile sfk,1.0.7,lprefix=:file:

:file:
testfiles\FooBank\BarDriver\include\BarBottle.hpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

class BarBottle
{
public:
    BarBottle   ( );
   ~BarBottle   ( );

private:
Something
   *pClSomething;
};

:file:
testfiles\FooBank\BarDriver\include\BarDriver.hpp
/*
   this is a completely pointess text file
   to easily demonstrate sfk functionality.
*/

class BarDriver
{
public:
    BarDriver   ( );
   ~BarDriver   ( );

    void runDrawThread  ( );

private:
Bottle
   *pClBottle;
};

:file:
testfiles\FooBank\BarDriver\include\BarGlass.hpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

class BarGlass
{
public:
    BarGlass   ( );
   ~BarGlass   ( );

private:
Something
   *pClSomething;
};

:file:
testfiles\FooBank\BarDriver\include\BarMug.hpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

class BarMug
{
public:
    BarMug   ( );
   ~BarMug   ( );

private:
Something
   *pClSomething;
};

:file:
testfiles\FooBank\BarDriver\source\BarBottle.cpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

#include "Trace.hpp"

BarBottle::BarBottle( )
{
   pClSomething = 0;
}

BarBottle::~BarBottle( )
{
   if (pClBotte) {
      delete pClSomething = 0;
      pClSomething = 0;
   }
}

:file:
testfiles\FooBank\BarDriver\source\BarDriver.cpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

#include "BaseLib/Trace/include/Trace.hpp"

BarDriver::BarDriver( )
{
   pClBottle = 0;
}

BarDriver::~BarDriver( )
{
   if (pClBotte) {
      delete pClBottle = 0;
      pClBottle = 0;
   }
}

void BarDriver::runDrawThread( )
{
   for (long i=0; ;) {
      // dr. stresser: inserted super-important trace output here.
      // do not remove, i need this.
      printf("this is super important traceoutput\n");
   }
}

:file:
testfiles\FooBank\BarDriver\source\BarGlass.cpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

BarGlass::BarGlass( )
{
   pClSomething = 0;
}

BarGlass::~BarGlass( )
{
   if (pClBotte) {
      delete pClSomething = 0;
      pClSomething = 0;
   }
}

:file:
testfiles\FooBank\BarDriver\source\BarMug.cpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

BarMug::BarMug( )
{
   pClSomething = 0;
}

BarMug::~BarMug( )
{
   if (pClBotte) {
      delete pClSomething = 0;
      pClSomething = 0;
   }
}

:file:
testfiles\FooBank\DB\include\DBController.hpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

class DBController
{
public:
      DBController   ( );
     ~DBController   ( );

private:
DBManager
      *pClManager;   
}


:file:
testfiles\FooBank\DB\source\DBController.cpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

DBController::DBController()
{
   pClManager = 0;

   char *pblast = 0;
   printf("yeee\n");
   // dr. looney: this is superimportant fix.
   // do not remove.
   *pblast = '\0';
   printf("- ho.\n");
}

DBController::~DBController()
{
   if (pClManager) {
      delete pClManager;
      pClManager = 0;
   }
}

:file:
testfiles\FooBank\GUI\include\FooGUI.hpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

class FooGUI
{
public:
      FooGUI   ( );
     ~FooGUI   ( );

private:
ColorfulWindow
      *pClWindow;
}


:file:
testfiles\FooBank\GUI\source\FooGUI.cpp
/*
   this is a completely pointless text file
   to easily demonstrate sfk functionality.
*/

FooGUI::FooGUI()
{
   pClWindow = 0;
}

FooGUI::~FooGUI()
{
   if (pClWindow) {
      delete pClWindow;
      pClWindow = 0;
   }
}



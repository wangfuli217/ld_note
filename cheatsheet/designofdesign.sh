design(设计的疑问)
{
对一种技艺进程观察，并将所思所想运用到另一种技艺中，使得诸般妙用在一人的头脑中不断反思(新思维也就不期而至了)。

创作过程：
构想    idea             将概念结构定型
运用    energy           在实际的领域中加以实现
实现    implementation   在实际的应用中与用户交互

    对大多数的创作者来说，构想的不完整性和不一致性只有到了实现阶段才变得明朗化，因此，
书面记录、反复试验和"细节敲定"就成了理论家们的看家本领。
    构想，实现和交互这三个阶段是交替进行的。实现创造出空间，实现过程又要进行一轮新的设计。

系统设计：实用、效益、效率、优雅
艺术设计：强调愉悦感，以及意义的传达
例行设计：一旦形成概念或技术上的突破，就会带来激动人心的和人人可见的成本、功能和美学方面的回报。
          通过变化参数可以一个对象接着一个对象地进行的设计
改造设计：只是修改以往的设计或对象，以满足新的用于罢了。
原创设计：
}
1. 想法需要实践才能得以完善。
2. 要在设计过程的一开始就明确地列出已知的约束，作为架构师所谓的设计任务书的组成部分。
3. 及早任命手腕强硬、经验丰富、领域知识到位的经理，并要求他们在整个初始系统交付期间全程参与。
   尔后，授权他们“以其认为必要的方式度身定制标准流程和步骤”。
4. 许多人手让工作变得轻松。 通常如此
   但许多人手让工作变得更多 总是如此
{
分割成本；
学习与教授成本；
设计中的沟通；
变更控制。
}
   
design(设计理念)
{
设计理念 == 设计的完整性 == 统一、经济、简洁 -> 优雅、简洁、漂亮 == 概念统一这个目标，只有通过大量的对话才能达到。

识别出设计理念这个实体，有助于我们在独立做自己的设计时去追寻这样的完整性；
                        有助于在团队设计时围绕它协同工作；
                      也有助于将它传授给年轻人。
                      同时对设计团队的内部沟通也有极大的帮助。
                      
《Linux/Unix设计思想》
}

design(设计过程)
{

----------- 理想的设计过程模型 -----------
目标
必要条件
效用函数
约束，尤其是预算(也许并非金钱成本)
决策的设计树
     UNTIL ("足够好") or (来不及了)
        DO 另一个设计(以提升效用函数)
            UNTIL 设计完成
               WHILE设计方案仍然可行
                  做出下一个设计决策
               END WHILE
               回溯设计树
               找到一个之前未搜索过的路径 #设计的过程可以认为是一种对于以树形结构组织的设计空间的系统化探索。
            END UNTIL
         END DO
         采用最有设计方案
     END UNTIL 
----------- ----------- ----------- -----------
《人月神话》-> 关注如何在团队设计中达成概念完整性。
将设计过程打造成对于设计空间的系统化搜索，可以拓宽设计师个人的眼界，并远远超过其先前的个人经验。

有时候，问题就在于发现问题出在哪里？
设计中最困难的部分在于决定要设计什么？
为客户提供的最有用的服务是帮助他决定什么是他真正想要的。
快速原型是一种进行精确需求配置的必要工具，不仅整个设计过程是迭代的，就连设计目标的设定过程本身也是迭代的。
设计师的主要任务乃是帮助客户发现他们想要的设计。
设计过程是围绕着约束来做设计的。

研习设计史的最有力的原因是去了解：怎么样的设计方案是行不通的以及为什么这些设计方案行不通。

    由于许多必要条件是以性价比为权重的，这就导致另一种现象的发生。随着设计向前推进，人们会发现，
在只需要负担极少的边际成本前提下，就可以增加某些特定的有用性的机会。在此情形下，在原始的必要条件清单中根本不存在的项目就会被添加进来，
而这往往使在其后的设计变更中要求保留的预算余地被挤占。

模型是有意简化过的，以帮助我们解决现实生活中遇到的问题，而这些问题往往复杂的令人生畏。因此
"这只是地图，而不是真实的地形"。
}

5. 卓越的设计在于过程，而不在于人。
   卓越的设计来自于卓越的设计师而非卓越的设计过程。

   
design(需求、罪念以及合同)
{
抵制需求的膨胀和蠕变


}
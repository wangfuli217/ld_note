1.Document 对象
  每个载入浏览器的 HTML 文档都会成为 Document 对象。
  Document 对象使我们可以从脚本中对 HTML 页面中的所有元素进行访问。
  提示：Document 对象是 Window 对象的一部分，可通过 window.document 属性对其进行访问。
  1.1 Document 对象集合
    all[]       提供对文档中所有 HTML 元素的访问。
    anchors[]   返回对文档中所有 Anchor 对象的引用。
    applets     返回对文档中所有 Applet 对象的引用。
    forms[]     返回对文档中所有 Form 对象引用。
    images[]    返回对文档中所有 Image 对象引用。
    links[]     返回对文档中所有 Area 和 Link 对象引用。
    1.1.1 all：all 集合返回对文档中所有 HTML 元素的引用。
          document.all[i] 
          document.all[name] 
          document.all.tags[tagname]
        all[] 已经被 Document 接口的标准的 getElementById() 方法和 getElementsByTagName() 方法
      以及 Document 对象的 getElementsByName() 方法所取代。
        all[] 包含的元素保持了最初的顺序，如果你知道它们在数组中的确切数字化位置，可以直接从数组中提取它们。
      然而，更为常见的是使用 all[] 数组，根据它们的 HTML 属性 name 或 id 来访问元素。如果多个元素拥有指定的
      name，将得到共享同一名称的元素的一个数组。
    1.1.2 Anchor 对象表示 HTML 超链接。
          在 HTML 文档中 <a> 标签每出现一次，就会创建 Anchor 对象。
          锚可用于创建指向另一个文档的链接（通过 href 属性），或者创建文档内的书签（通过 name 属性）。
      document.anchors[] -- http://www.w3school.com.cn/jsref/dom_obj_anchor.asp
      <a name="first">First anchor</a><br /> 
      <a name="second">Second anchor</a><br /> 
      <a name="third">Third anchor</a><br />
    1.1.3 forms 集合可返回对文档中所有 Form 对象的引用。
          Form 对象代表一个 HTML 表单。
          在 HTML 文档中 <form> 每出现一次，Form 对象就会被创建。
          document.forms[]
          <form name="Form1"></form> 
          <form name="Form2"></form> 
          <form name="Form3"></form>
    1.1.4 images 集合可返回对文档中所有 Image 对象的引用。
          document.images[]
          <img border="0" src="hackanm.gif" width="48" height="48"><br />
          <img border="0" src="compman.gif" width="107" height="98"><br />
          Image 对象代表嵌入的图像。
          <img> 标签每出现一次，一个 Image 对象就会被创建。
    1.1.5 links 集合可返回对文档中所有 Area 和 Link 对象的引用。
          document.links[]
          <area shape="circle" coords="180,139,14" href ="/example/html/venus.html" target ="_blank" alt="Venus" />
          Area 对象:Area 对象代表图像映射的一个区域（图像映射指的是带有可点击区域的图像）
            shape   设置或返回图像映射中某个区域的形状。
            coords  设置或返回图像映射中可点击区域的坐标。
            alt     设置或返回当浏览器无法显示某个区域时的替换文字。
            href    设置或返回图像映射中链接的 URL。
            target  设置或返回在何处打开区域中的 link-URL。
              _blank - 在一个新的未命名的窗口载入文档
              _self - 在相同的框架或窗口中载入目标文档
              _parent - 把文档载入父窗口或包含了超链接引用的框架的框架集
              _top - 把文档载入包含该超链接的窗口,取代任何当前正在窗口中显示的框架
    1.2 Document 对象属性
      body           提供对 <body> 元素的直接访问。
                     对于定义了框架集的文档，该属性引用最外层的 <frameset>。
      cookie         设置或返回与当前文档有关的所有 cookie。
      domain         返回当前文档的域名。               www.w3school.com.cn 
      lastModified   返回文档被最后修改的日期和时间。   04/23/2018 09:24:02 
      referrer       返回载入当前文档的文档的 URL。     http://www.w3school.com.cn/tiy/t.asp?f=hdom_document_referrer 
      title          返回当前文档的标题。               <title>My title</title>
      URL            返回当前文档的 URL。               http://www.w3school.com.cn/tiy/v.asp 
    1.3 Document 对象方法
      close()   关闭用 document.open() 方法打开的输出流，并显示选定的数据。
      getElementById()  返回对拥有指定 id 的第一个对象的引用。
      getElementsByName()   返回带有指定名称的对象集合。
      getElementsByTagName()    返回带有指定标签名的对象集合。
      open()    打开一个流，以收集来自任何 document.write() 或 document.writeln() 方法的输出。
      write()   向文档写 HTML 表达式 或 JavaScript 代码。
      writeln() 等同于 write() 方法，不同的是在每个表达式之后写一个换行符。
      
      document.open(mimetype,replace)
        mimetype    可选。规定正在写的文档的类型。默认值是 "text/html"。
        replace     可选。当此参数设置后，可引起新文档从父文档继承历史条目。
      该方法将擦除当前 HTML 文档的内容，开始一个新的文档，新文档用 write() 方法或 writeln() 方法编写。
      write() 方法值得注意，在文档载入和解析的时候，它允许一个脚本向文档中插入动态生成的内容。
      
2. Element 对象
  Element 对象
  在 HTML DOM 中，Element 对象表示 HTML 元素。
  Element 对象可以拥有类型为元素节点、文本节点、注释节点的子节点。
  NodeList 对象表示节点列表，比如 HTML 元素的子节点集合。
  
  element.accessKey 	设置或返回元素的快捷键。
  element.attributes 	返回元素属性的 NamedNodeMap。
  element.childNodes 	返回元素子节点的 NodeList。
  
  element.className 	设置或返回元素的 class 属性。
  element.nodeType 	返回元素的节点类型。
  element.nodeValue 	设置或返回元素值。
  
  element.contentEditable 	设置或返回元素的文本方向。
  element.dir 	设置或返回元素的内容是否可编辑。
  
  element.firstChild 	返回元素的首个子。
  element.lastChild 	返回元素的最后一个子元素。
  element.parentNode 	返回元素的父节点。
  element.previousSibling 	返回位于相同节点树层级的前一个元素。
  element.nextSibling 	返回位于相同节点树层级的下一个节点。
  
  element.removeChild() 	从元素中移除子节点。
  element.replaceChild() 	替换元素中的子节点。
  element.appendChild() 	向元素添加新的子节点，作为最后一个子节点。
  
3. Attr 对象
  在 HTML DOM 中，NamedNodeMap 对象表示元素属性节点的无序集合。
  NamedNodeMap 中的节点可通过名称或索引（数字）来访问。
  3.1 属性和方法
    attr.name 	返回属性的名称。
    attr.value 	设置或返回属性的值。
    nodemap.getNamedItem() 	从 NamedNodeMap 返回指定的属性节点。  textContent
    nodemap.item() 	返回 NamedNodeMap 中位于指定下标的节点。      nodeName
    nodemap.length 	返回 NamedNodeMap 中的节点数。
    nodemap.removeNamedItem() 	移除指定的属性节点。
    nodemap.setNamedItem() 	设置指定的属性节点（通过名称）。
  在 W3C DOM Core 中，Attr (attribute) 对象从 Node 对象继承所有属性和方法。
  在 DOM 4 中，Attr 对象不再从 Node 继承。
  为了保证未来的代码安全，您应该避免在属性对象上使用节点对象的属性和方法：
4. 事件句柄　
  Event 对象代表事件的状态，比如事件在其中发生的元素、键盘按键的状态、鼠标的位置、鼠标按钮的状态。
  事件通常与函数结合使用，函数不会在事件发生前被执行！
    
    属性            此事件发生在何时...                
    onabort         图像的加载被中断。                  http://www.w3school.com.cn/jsref/event_onabort.asp   img
    onblur          元素失去焦点。                      http://www.w3school.com.cn/jsref/event_onblur.asp    input type="text"
    onchange        域的内容被改变。                    http://www.w3school.com.cn/jsref/event_onchange.asp  input type="text"
    onclick         当用户点击某个对象时调用的事件句柄。http://www.w3school.com.cn/jsref/event_onclick.asp   button
    ondblclick      当用户双击某个对象时调用的事件句柄。http://www.w3school.com.cn/jsref/event_ondblclick.asp button
    onerror         在加载文档或图像时发生错误。        http://www.w3school.com.cn/jsref/event_onerror.asp   img object style
    onfocus         元素获得焦点。                      http://www.w3school.com.cn/jsref/event_onfocus.asp   input type="text"
    onkeydown       某个键盘按键被按下。                <input type="text"
    onkeypress      某个键盘按键被按下并松开。          <input type="text"
    onkeyup         某个键盘按键被松开。                <input type="text"
    onload          一张页面或一幅图像完成加载。        http://www.w3school.com.cn/jsref/event_onload.asp  <body onload="load()">
    onmousedown     鼠标按钮被按下。                    <img src="/i/example_mouse2.jpg" onmousedown="alert('You clicked the picture!')" />
    onmousemove     鼠标被移动。                        <img src="/i/eg_mouse2.jpg" alt="mouse" onmousemove="alert('您的鼠标刚才经过了图片！')" />
    onmouseout      鼠标从某元素移开。                  <img src="/i/example_mouse2.jpg" alt="mouse" onmousemove="alert('您的鼠标刚才离开了图片！')" />
    onmouseover     鼠标移到某元素之上。                <img src="/i/eg_mouse2.jpg" alt="mouse" onmouseover="alert('您的鼠标在图片上！')" />
    onmouseup       鼠标按键被松开。                    <img src="/i/eg_mouse2.jpg" alt="mouse" onmouseup="alert('您点击了图片！')" /> 
    onreset         重置按钮被点击。                    <form onreset="alert('The form will be reset')">
    onresize        窗口或框架被重新调整大小。          <body onresize="alert('You have changed the size of the window')">
    onselect        文本被选中。                        <input type="text" value="Hello world!" onselect="alert('You have selected some of the text.')" />
    onsubmit        确认按钮被点击。                    <form name="testform" action="jsref_onsubmit.asp" onsubmit="alert('Hello ' + testform.fname.value +'!')">
    onunload        用户退出页面。                      <body onunload="alert('The onunload event was triggered')">
    
    属性              描述
    altKey          返回当事件被触发时，"ALT" 是否被按下。     event.altKey=true|false|1|0
    button          返回当事件被触发时，哪个鼠标按钮被点击。   event.button=0|1|2 左中右
    clientX         返回当事件被触发时，鼠标指针的水平坐标。
    clientY         返回当事件被触发时，鼠标指针的垂直坐标。
    ctrlKey         返回当事件被触发时，"CTRL" 键是否被按下。  event.ctrlKey=true|false|1|0
    metaKey         返回当事件被触发时，"meta" 键是否被按下。  event.metaKey=true|false|1|0
    relatedTarget   返回与事件的目标节点相关的节点。
    screenX         返回当某个事件被触发时，鼠标指针的水平坐标。
    screenY         返回当某个事件被触发时，鼠标指针的垂直坐标。
    shiftKey        返回当事件被触发时，"SHIFT" 键是否被按下。 event.shiftKey=true|false|1|0
    
5. Location 对象
  Location 对象包含有关当前 URL 的信息。
  Location 对象是 Window 对象的一个部分，可通过 window.location 属性来访问。
    hash        设置或返回从井号 (#) 开始的 URL（锚）。
    host        设置或返回主机名和当前 URL 的端口号。
    hostname    设置或返回当前 URL 的主机名。
    href        设置或返回完整的 URL。
    pathname    设置或返回当前 URL 的路径部分。
    port        设置或返回当前 URL 的端口号。
    protocol    设置或返回当前 URL 的协议。
    search      设置或返回从问号 (?) 开始的 URL（查询部分）。

flex:
     Adobe公司推出的开放源码框架
     谋求rich internet application(ria富客户端)的霸主地位
     为了迎合更多的developers（开发者），吸引更多的jsp/asp/php等程序员，用简单的.mxml来描述界面.与xml非常相似,规范化、标准化。
     迎击微软下一代系统longhorn，同时微软也会推出新的语言xaml，一种界面描述语言，与之相应的就是smart client和flex非常相似的东西。         Mxml和Xaml的也很相似… …这是人机交互技术的进步的重要体现，即内部逻辑与外部界面交互相分离。

RIA:
     HTML是适合于文本的，渐渐不能满足网络浏览者的更高的、全方位的体验要求。而富互联网应用（Rich Internet Applications，缩写为RIA）的出现就是为了解决这个问题。
     富互联网应用程序是交互式用户体验与传统的WEB应用的部署灵活性和成本分析结合起来的网络应用程序。
     以文件形式，用HTTP传递的运行环境，新的面向服务模型，这种模型由采用的WEB服务所驱动。
     结合了声音、视频和实时对话的综合通信技术，使富互联网应用程序（RIA）具有前所未有的网上用户体验。

     技术封装,大大提高了产品设计师和开发工程师的“开发体验”，强化了设计端和开发端的整合。
     设计师和开发工程师们可以方便地将自己的代码平移到新的平台上，并且发布、部署的方式比之前的任何一款开发工具都方便得多

     将带来新的桌面革命——“Desktop 2.0”，内容从Flash, HTML/CSS/JS，到PDF，几乎涵盖了时下最流行的WEB内容载体。
     此外，“可离线”应用模式能让用户更加安全、舒适地进行工作和娱乐。而且也可以借助本地资源更好地节省网络资源。

Flex与Flash的关系

　　　首先这里想说的是，Flash并非只是一个单纯的矢量动画创作工具，而是一个凭借脚本语言ActionScript在功能和定位上不断演变的网络应用开发工具。早在Flash MX的时候就已经成为macroemdia 推广RIA战略的工具。但是毕竟Flash最初的定位是面向美工的矢量动画创作工具，并不适合传统的开发人员。于是Flex成为开发者们的首选。
　　Flex和Flash都以ActionScript作为其核心编程语言，并被编译成swf文件运行于Flashplayer虚拟机里。因此Flex也继承了Flash在表示层上先天性的美感、除了视觉上的舒适感外，还天生具备方便的矢量图形、动画和媒体处理接口。
　　虽然Flex和Flash有众多的相似点，但是不同之处仍然很多
　　1.尽管公用ActionScript,但是使用的库并不完全相同，更合适的说法是两者使用着两套具有极大“功能重叠”范围的库。
　　2.Flash偏向的是美工人员，所以更容易发挥特效处理的优势，Flex偏向开发人员，所以容易做出具有丰富交互功能的应用程序。
　　3.Flash只能以ActionScript脚本的形式开发（舞台被关联到一个称之为 document class的类里），另外舞台元素也是可以绑定脚本的，不过从软件工程的角度讲不建议这样用，Flex还可以使用称作mxml的标记语言来描述应用的外观和行为，mxml中可以直接嵌入ActionScript脚本。
　　4.由于第三点而造成的两者市场定位不同，Flex是面向企业级的网络应用程序，Flash则面向诸如平面动画、广告设计等多媒体展示程序。
　　5.借助Flash Lite这一移动设备上的Flashplayer，Flash可以开发移动应用，Flex则不行。
　　6.Flash的编程模型是基于时间轴的，Flex的则是基于窗体，虽然它运行在网页里。






















同所有的XML语言一样，在MXML中，标签和属性都是区分大小写的；
所有的属性值必须用双引号(")或单引号(')
包含所有的标签必须是闭合的。
没有子标签的标签可以以斜杠直接结束，而无需额外的结束标签：
   <mx:Label text="Hello"></mx:Label>
     或
   <mx:Label text="Hello"/>

如果你是一个ActionScript新手，你可以发现它的语法和你熟悉的语言的语法很相近，比如JavaScript或者Java。

请记住这些基本的规则：
  1. ActionScript是区分大小写的
  2. 语句必须以分号(;)结尾


Macromedia Flex 是一个用来创建丰富信息的互联网应用程序的服务器组件。
Flex内置的界面可以由Macromeida Flash播放器显示在客户端系统上。

Flex的本质是：
    * 一个描述应用程序界面的XML语言 (MXML)
    * 一个ECMA规范的脚本语言(ActionScript)，处理用户和系统的事件，构建复杂的数据模型
    * 一个类库
    * 运行时的即时服务
    * 一个由MXML文件生成SWF文件的编译器

MXML
   1. MXML是一种描述Flex應用程序構造的XML1.0语言。每个MXML文件应该以一个XML声明开始：
      <?xml version="1.0"?>
   2. 和其他XML语言一样，MXML包含元素（标签）和属性，对大小写敏感。
      标签名称以大写字母开头，大小写混合，必须有对应的结束标签：
      <ComboBox></ComboBox>
   3. 也可以这样结束对没有内容的标签：
      <ComboBox/>
   4. 属性以小写字母开头，大小写混合。属性必须包含在引号内。
      <ComboBox id="myCombo"/>

除了click或initialize之类的事件之外，所有的属性都被编译器作为文本字符串处理。
   如果需要绑定数据或者强迫编译器执行表达式，可以将变量的部分用花括号包起来：
   <ComboBox dataProvider="{myArray}"/>

   大部分的属性都可以作为子标签：
    <ComboBox dataProvider="{myArray}"/>
     等效于：
    <ComboBox> <dataProvider>{myArray}</dataProvider> </ComboBox>


描述应用程序的MXML文件必须有一个位于其他元素之外的Application元素：
   <?xml version="1.0"?>
   <mx:Application xmlns:mx="http://www.macromedia.com/2003/mxml">
      [other elements...]
   </mx:Application>

   注意xmlns属性，它声明了XML的命名空间。
   命名空间可以让你在单个文档中使用多重XML语言而避免混淆不同语言中相同的元素名称。
   这里的":mx"就是一个在特定命名空间中使用的前缀。

   注意：这里定义的命名空间是标准的MXML类库，请将它包含在每个MXML文件中。
   可以将声明放在任何MXML标签中；声明对该标签嵌套的所有标签有效。
   本系列教程中都以mx作为MXML类库的前缀。


ActionScript
   ActionScript是一种类似JavaScript和其他ECMA规范的面向对象的脚本语言。
   如果你使用过JavaScript或 Java/C#等其他面向对象的语言，你可以发现它们的语法很相似。
   你可以在MXML文件中嵌入ActionScript代码，也可以从独立的外部文件导入代码。
   完整的ActionScript参考： Action 语言参考 http://help.adobe.com/zh_CN/AS3LCR/Flash_10.0/

MXML类库
   Flex既包含控制和容器等可见的组件，也包括了远程服务对象和数据模型等的不可见组件。

运行时服务
   Flex提供了多项运行时服务，如：历史控制和远程服务连接对象。
   以开发的角度看，这些服务都是对类库的调用。

编译器
   Flex编译器会在收到一个浏览器访问MXML文件的请求后，自动编译生成相应的SWF文件。
   该SWF文件将被缓存，直到你修改了源MXML文件。


创建Application（应用程序）对象
   任何一个Flex程序都是以XML声明开始和Application标记的。
   Application标签包含一个MX类库命名空间的声明：
xmlns:mx="http://www.macromedia.com/2003/mxml"
   引用该类库的所有标签必须以mx作为前缀。

   1. 创建一个新文件 ，然后保存为 firstapp.mxml，位于flex_tutorials目录下
   2. 在文件的开始处，插入XML声明：
      <?xml version="1.0"?>
   3. 在XML声明后，添加带命名空间的Application标签：
      <mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute">
      </mx:Application>
   应用程序布局：添加一个面板
      通常你可以将Flex应用程序中可见的组件放置于容器中，容器提供了绑定文本、控件、图像和其他媒体类型的元素。
      在这里，你可以使用称为“面板 ”(Panel)的容器，它可以提供大部分应用程序需要的全部外壳。
      你还可以使用面板的title(标题)属性，修改面板上方自动包含着的标题榄的文字。
   4. 在Application标签内部，添加一个Panel标签，title属性为"my First Flex App"
      <mx:Panel title="My First Flex App">
      </mx:Panel>
      添加一个显示标题的Label元素
      Label元素可以用来显示单行文本。它有一些属性，这里用到的是text（文本）属性，定义Label显示的内容。
   5. 在Panel标签内，插入一个带有文本属性的Label标签，如下：<mx:Label text="Coffee Blends"/>
   6. 保存文件，预览一下程序


不可见元素可以由你随意摆放，但是把他们放到程序的首部--即可见元素的前面--是一个好习惯。

ID几乎是所有Flex元素都具备的属性，它将元素“贴”上标志以区分其他元素。
如果你要在数据绑定或ActionScript中使用这个元素，最好给它指定一个ID。


   Flex的ComboBox类似于HTML的select功能，而且更加强大。需显示的数组由dataProvider属性指定。
   你可以在 dataProvider标签中直接创建数组，但是更为常用的方法是在别处创建或导入一个数组，然后在dataProvider处指定：
     <mx:ComboBox id="myCombo" dataProvider="{myArray}"/>
     这里的大括号告诉编译器：里面是一个变量或者代求算的变量，而不是字符串。
     如果对象包含label和data属性，他们会自动按显示数据（label）和关联数据（data）区分，data可以是简单的值，也可以是复杂的类型（如对象）。如果对象既没有label属性也没有data属性，那么整个对象将作为data属性，而label属性则为由ComboBox的 labelField属性指定的对象属性。例如ComboBox的labelField值为"name"，那么label的值就为对象的name属性。








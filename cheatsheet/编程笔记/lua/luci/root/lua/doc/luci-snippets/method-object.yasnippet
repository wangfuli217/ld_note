# -*- mode: snippet -*-
# key: method
# contributor: Seamus Tuohy
# name: option methods
# --
function ${1:option_name}:${2:$$(yas/choose-value '("prepare()" ;; THING AND STUFF
 "depends(field, value)" ;; Add a dependencie to another field in this section
 "cbid(section)" ;; creates and returns the unique cbid for this object
 "formcreated(section)" ;; TODO find how this function is used
 "formvalue(section)" ;; Returns the formvalue for this object
 "additional(value)" ;; TODO see why this is a function
 "manditory(value)" ;; Makes a value manditory. TODO see how setting rmempty to true on nil/false values makes things manditory
 "add_error(section, type, msg)" ;; Set an error (optionally takes "invalid" and "missing"  types for predefined error messages)
 "parse(section, novld)" ;; The core option parser. Your better know what your doing when editing this function
 "render(s, scope)" ;; The function that renders the section for the page
 "cfgvalue(section)" ;; Returns the UCI value of this object
 "validate(value)" ;; Validates the form value
 "transform(value)" ;; Same thing as validate... TODO see how it is used differently to best document how to take advantage of it
 "write(section, value)" ;; Writes the value to UCI
 "remove(section)" ;; Deletes a value from uci (NOT SET TO FALSE. DELETED)
 "reset_values(key, val)" ;; Empties key and value lists (Value, ListValue, MultiValue)
 "value(key, value)" ;; Adds a value to the key and val lists (Value, ListValue, MultiValue) or sets value (DummyValue)
 "value_list(section)" ;; split list of UCI config values by the delimiter and return them as a table (MultiValue)
 ))}
 $0
end
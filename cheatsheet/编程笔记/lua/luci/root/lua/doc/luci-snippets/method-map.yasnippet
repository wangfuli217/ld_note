# -*- mode: snippet -*-
# key: method
# contributor: Seamus Tuohy
# name: map methods
# --
function ${1:option_name}:${2:$$(yas/choose-value '("formvalue(key)" ;; Returns the formvalue for the map
 "formvaluetable(key)" ;; return the formvalue for the map as a table
 "get_scheme(sectiontype, option)" ;; TODO explore scheme usage
 "submitstate()" ;; Get the submission type of the submitted page
 "chain(config)" ;; Chain another config file onto this maps parsechain !!!!!
 "state_handler(state)" ;; do somthing based on the maps state (dummy function in base code)
 "parse(readinput, ...)" ;; core parseing function for maps
 "render(...)" ;; Render the map
 "section(class, ...)" ;; Create a child section
 "add(sectiontype)" ;; Add a section to the attacked UCI config TODO check how this works with chain()
 "set(section, option, value)" ;; Set a value within a specified section
 "del(section, option)" ;; Delete a value from a UCI config
 "get(section, option)" ;; Get a value from this maps UCI  config file
 "commit_handler(submit_state)" ;; Dummy function that gets passed submitstate on self.save
 ))}
 $0
end
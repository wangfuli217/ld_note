--[[
  io.write()##
  原型：io.write(...)
  解释：将参数的值逐个写入file。 参数必须是字符串或数字。
        
  返回值：成功时，函数返回 true。 否则返回 nil 加错误描述字符串。
        
  注意: 避免写:io.wirte(a..b..c)这样的格式，lua实现io.write(a,b,c)操作使用的资源会更少。
  作为一个约定：在debugging过程中应该使用print函数，而只有在需要严格做输出格式控制的时候使用write函数
  
  注意：write遵循通用的转换规则进行数值转字符串处理；而如果想完整的控制这种转换，则需要使用string.format函数
--]]

local file = io.open("writetest.txt", "w")
if nil == file then
    print("open file writetest.txt fail")
end

-- 输入字符串
print(file:write("test io.write\n")) -- true

-- 输入数字
print(file:write(2016))   -- true

-- 输入分隔符
print(file:write(" "))    -- true

-- 继续输入数字
print(file:write(7))      -- true
print(file:write(" "))    -- true
print(file:write(23))     -- true
print(file:write("\n"))   -- true

-- tbl = {}
-- print(file:write(tbl))   -- bad argument #1 to 'write' (string expected, got table)

-- 继续输入其他类型
file:write(tostring(os.date()))
file:write("\n")
file:write(tostring(file))

-- Simple Mode
file:write("sin(3) = ",math.sin(3),"\n")                 --sin(3) = 0.14112000805987
file:write(string.format("sin(3) = %.4f\n",math.sin(3))) --sin(3) = 0.1411

-- 关闭文件
file:close()

-- 读取文件并显示
local fileread = io.open("writetest.txt", "r")

local content = fileread:read("*a");
print("file content is : \n")
print(string.format("%q", content))

fileread:close()


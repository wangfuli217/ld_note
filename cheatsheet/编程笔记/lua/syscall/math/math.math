math.pi                    -- 3.1415926535898    -- pi          圆周率
math.huge                  -- inf                -- huge        无限大
math.abs(-2012)            -- 2012               -- abs         取绝对值                
math.ceil(9.1)             -- 10                 -- ceil        向上取整         向正无穷取整              
math.floor(9.9)            -- 9                  -- floor       向下取整         向负无穷取整   
math.modf(20.12)           -- 20   0.12          -- modf        取整数和小数部分 向零取整          
math.max(2,4,6,8)          -- 8                  -- max         取参数最大值            
math.min(2,4,6,8)          -- 2                  -- min         取参数最小值            
math.pow(2,16)             -- 65536              -- pow         计算x的y次幂            
math.sqrt(65536)           -- 256                -- sqrt        开平方                  
math.mod(65535,2)          -- 1                  -- mod         取模                           
math.randomseed(os.time()) --                    -- randomseed  设随机数种子            
math.random(5,90)          -- 5~90               -- random      取随机数                
math.rad(180)              -- 3.1415926535898    -- rad         角度转弧度              
math.deg(math.pi)          -- 180                -- deg         弧度转角度              
math.exp(4)                -- 54.598150033144    -- exp         e的x次方                
math.log(54.598150033144)  -- 4                  -- log         计算x的自然对数         
math.log10(1000)           -- 3                  -- log10       计算10为底，x的对数     
math.frexp(160)            -- 0.625    8         -- frexp       将参数拆成x*(2^y)的形式 
math.ldexp(0.625,8)        -- 160                -- ldexp       计算x * (2 ^ y)         
math.sin(math.rad(30))     -- 0.5                -- sin         正弦                    
math.cos(math.rad(60))     -- 0.5                -- cos         余弦                    
math.tan(math.rad(45))     -- 1                  -- tan         正切                    
math.deg(math.asin(0.5))   -- 30                 -- asin        反正弦                  
math.deg(math.acos(0.5))   -- 60                 -- acos        反余弦                  
math.deg(math.atan(1))     -- 45                 -- atan        反正切

--[[
  从Lua5.3版本开始，Lua语言为数值格式提供了两种选择：被称为integer的64为整形和被
称为float的双精度浮点类型。对于资源受限的平台，我们可以将Lua 5.3编译为精简模式。
在该模式中使用32位整形和单精度浮点类型。
  -- Lua 3.0 才有的函数
  math.type(3)
  math.type(3.0)
  -- 十六进制的浮点数
  Lua语言还支持十六进制的浮点数，这种十六进制浮点数由小数部分和以p或P开头的指数部分组成
  可以使用%a参数，通过函数string.format对这种格式进行格式化输出。
  string.format("%a", 419) -- 0x1.a3p+8
  string.format("%a", 0.1) -- 0x1.999999999999ap-4
  float = 0x1p-1           -- 0.5
  float = 0xa.bp2          -- 42.75
  -- 整数和浮点数混合运算
  1. 如果两个操作数都是整型值，那么结果也是整型值；否则结果就是浮点型值
  2. 除法运算操作的永远是浮点数且产生浮点型值的结果。
  -- Lua 5.3 针对整数除法引入了一个称为floot的新算术运算符//
  3//2       -- 1
  3.0//2     -- 1.0
  6//2       -- 3
  6.0//2.0   -- 3.0
  -9//2      -- -5
  1.5//0.5   -- 3.0
  
  a % b = a - ((a//b)*b)
  特别地，对于任意指定的正常量K，即使x是负数，表达式x%K的结果也永远在[0,K-1]之间。
  x = math.pi
  x - x%0.01  -- 3.14
  x - x%0.001 -- 3.141
  
  幂运算的操作数也永远是浮点类型。我们可以使用x^0.5来计算x的平方根，使用x^(1/3)计算
x的立方根。
  x = math.pi
  print(x^0.5)   -- 1.7724538509055
  print(x^(1/3)) -- 1.4645918875615
  
  -- 惯例
  简单地通过增加0.0的方法将整数型值强制转化为浮点型值。
  -3 + 0.0 
  0x7ffffffff + 0.0 
--]]

--[[
math.rad(180)     角度转弧度  
math.deg(math.pi) 弧度转角度
一、角的两种单位
'弧度'和'度'是度量角大小的两种不同的单位。就像“米”和“市尺”是度量长度大小的两种不同的单位一样。
二、弧度的定义
角（弧度）＝弧长/半径
圆的周长是半径的 2π倍，所以一个周角（360度）是 2π弧度。 半圆的长度是半径的 π倍，所以一个平角（180度）是 π弧度。
三、度跟弧度之间的换算
据上所述，一个平角是 π 弧度。 即
180度＝π弧度
由此可知：
1度＝π/180 弧度 ( ≈0.017453弧度 )
因此，得到 把度化成弧度的公式：
弧度＝度×π/180
例如：
90°＝90×π/180 ＝π/2 弧度
60°＝60×π/180 ＝π/3 弧度
45°＝45×π/180 ＝π/4 弧度
30°＝30×π/180 ＝π/6 弧度
120°＝120×π/180 ＝2π/3 弧度
反过来，弧度化成度怎么算？
因为 π弧度＝180°
所以 1弧度＝180°/π （≈57.3°）
因此，可得到 把弧度化成度的公式：
度＝弧度×180°/π
例如：
4π/3 弧度＝4π/3 ×180°/π
＝ 240°
--]]
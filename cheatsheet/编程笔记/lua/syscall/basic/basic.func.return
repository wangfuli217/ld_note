
f = function ()
  return "x", "y", "z" -- return 3 values
end
a, b, c, d = f() -- assign the 3 values to 4 variables. the 4th variable will be filled with nil
print(a, b, c, d) -- x y z nil

a, b = (f()) -- wrapping a function call in () discards multiple return values
print(a, b) -- x,nil

print("w"..f()) -- using a function call as a sub-expression discards multiple returns
--wx

print(f(), "w") -- same when used as the arg for another function call...
-- x w

print("w", f()) -- ...except when it's the last arg
-- w x y z

print("w", (f())) -- wrapping in () also works here like it does with =
-- w x

t = {f()} -- multiple returns can be stored in a table
print(t[1], t[2], t[3]) -- x y z


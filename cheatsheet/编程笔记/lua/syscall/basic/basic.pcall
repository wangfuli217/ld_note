--[[
  原型：pcall(f, arg1, ···)
  解释：在一个保护模式下调用参数f指定的函数。这意味着在函数f中发生的错误都不会被抛出，
        相反，函数pcall会捕获发生的错误然后返回一个错误状态，
        
    函数的第一个返回值是一个表示错误状态的布尔变量，
        当被调用函数被成功调用并且没有错误时，函数返回true作为第一个返回值，并且依次返回被调用函数的所有返回值，
        当发生错误时，函数会返回一个false并且紧跟着错误信息。
    if (pcall(f)) then
        print('success')
    else
        print('failed')
    end
--]]

-- 打印一下苦逼的程序猿时间
print("\nnow time is "..os.date())

local function add_num(num1, num2)
    return num1 + num2;
end

-- 打印函数正常调用
print("\ntest function add_num reault:")
print(pcall(add_num, 3, 5))


-- 打印可能出现问题的函数
print("\ntest function add_num reault:")
print(pcall(add_num, 3, "what"))

-- 使用pcall情况下，下面代码可以继续运行
print("\ncode continue ... ")

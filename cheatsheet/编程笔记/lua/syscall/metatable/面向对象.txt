-------------------------------------------------面向对象-------------------------------------------------
--  1.回顾一下面向对象的核心思想

-- 【类成员属性】
--     类成员属性有public、protected、private三种，public属性的成员谁都可以访问，protected和private的只有类成员
-- 可以访问而对象无法访问。protected属性的成员在继承类中可以访问，private属性的成员无法访问。

-- 【继承】
--	public继承：   public -> public       protected -> protected
--  protected继承：public -> protected    protected -> protected
--  private继承：  public -> private      protected -> private
--  基类的private成员在派生类中均无法访问

-- 【多态】
--     将需要“多态”的函数定义为虚函数（virtual），创建一个指向基类对象（虚函数表vt）的指针vptr，需要调用哪个派生类
-- 的同名函数，就将这个派生类的地址赋给vptr，基类vt中的多态函数地址会被覆盖，然后就可以直接用基类对象调用派生类中的多
-- 态函数。

-- 参考：http://www.cnblogs.com/fzhe/archive/2012/12/25/2832250.html
--		 http://www.cnblogs.com/BeyondAnyTime/archive/2012/07/22/2603760.html
--       http://www.cnblogs.com/ChenZhongzhou/p/5682776.html


-- 2.lua实际没有类的概念，所谓的类只是用lua现成的机制模拟类的概念。lua中的类和对象以table来实现。
-- 3.lua中类的实例化、类的继承，都可以通过元表metatable实现


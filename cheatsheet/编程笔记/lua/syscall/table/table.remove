--[[
原型：table.remove (tab_table [, pos])
解释：在表tab_table的pop位置删除元素，并且的必要时移动其他的元素(一般是将这个元素之后的元素"向前移动")，如果删除成功函数返回被删除的值，
      第二个参数pos，默认值为数组长度，也就是省略第二个参数时，会删除table的最后一个元素
      如果pos位置大于表长度，返回nil.
--]]

local tabLanguage = { 
    "Assemblylanguage",
    "Lua",
    "c",
    "c++",
    "swift",
    "java",
    "python",
    "ruby"
};

for k,v in pairs(tabLanguage) do
    print(k,v)
end
print("LUA>>>>>>the length of table tabLanguage :", #tabLanguage, "\n")


-- 删除元素
table.remove(tabLanguage)
table.remove(tabLanguage)
for k,v in pairs(tabLanguage) do
    print(k,v)
end
print("LUA>>>>>>the length of table tabLanguage :", #tabLanguage, "\n")


-- 删除元素
local removeitem = table.remove(tabLanguage, 3)
for k,v in pairs(tabLanguage) do
    print(k,v)
end
print("LUA>>>>>>the length of table tabLanguage :", #tabLanguage, "\n")
print("remove data of tabLanguage is : "..removeitem)


-- 删除不存在的元素
local removeitem = table.remove(tabLanguage, 99)
for k,v in pairs(tabLanguage) do
    print(k,v)
end
print("LUA>>>>>>the length of table tabLanguage :", #tabLanguage, "\n")
print("remove data of tabLanguage is : "..(removeitem or "nil"))


-- 元素设置nil
tabLanguage[4] = nil;
for k,v in pairs(tabLanguage) do
    print(k,v)
end
print("LUA>>>>>>the length of table tabLanguage :", #tabLanguage, "\n")

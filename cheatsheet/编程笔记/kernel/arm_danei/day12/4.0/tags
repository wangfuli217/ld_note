!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN	Makefile	/^BIN=$(NAME).bin$/;"	m
BINPATH	Makefile	/^BINPATH=\/tftpboot$/;"	m
CC	Makefile	/^CC=$(CROSS_COMPILE)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-nostdlib #编译选项$/;"	m
CP	Makefile	/^CP=cp$/;"	m
CROSS_COMPILE	Makefile	/^CROSS_COMPILE=arm-linux-$/;"	m
ELF	Makefile	/^ELF=$(NAME).elf$/;"	m
GPA0CON	uart.c	10;"	d	file:
GPA0PUD	uart.c	11;"	d	file:
GPC1CON	led.c	3;"	d	file:
GPC1DATA	led.c	4;"	d	file:
GPC1PUD	led.c	5;"	d	file:
LD	Makefile	/^LD=$(CROSS_COMPILE)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS=-nostartfiles -nostdlib -Tuart.lds -e main #链接选项$/;"	m
NAME	Makefile	/^NAME=shell$/;"	m
NFADDR	nand.c	7;"	d	file:
NFCMMD	nand.c	6;"	d	file:
NFCONF	nand.c	4;"	d	file:
NFCONT	nand.c	5;"	d	file:
NFDATA	nand.c	8;"	d	file:
NFSTAT	nand.c	9;"	d	file:
OBJ	Makefile	/^OBJ=main.o uart.o cmd.o led.o nand.o#注意顺序$/;"	m
OBJCOPY	Makefile	/^OBJCOPY=$(CROSS_COMPILE)objcopy$/;"	m
UBRDIV0	uart.c	7;"	d	file:
UCON0	uart.c	3;"	d	file:
UDIVSLOT0	uart.c	8;"	d	file:
ULCON0	uart.c	2;"	d	file:
URXH0	uart.c	6;"	d	file:
UTRSTAT0	uart.c	4;"	d	file:
UTXH0	uart.c	5;"	d	file:
__CMD_H	cmd.h	2;"	d
__LED_H	led.h	2;"	d
__NAND_H	nand.h	2;"	d
__UART_H	uart.h	2;"	d
_cmd	cmd.h	/^typedef struct _cmd {$/;"	s
_dabt_handler	vector.s	/^_dabt_handler:$/;"	l
_dabt_hdl	vector.s	/^_dabt_hdl:$/;"	l
_fiq_handler	vector.s	/^_fiq_handler:$/;"	l
_fiq_hdl	vector.s	/^_fiq_hdl:$/;"	l
_irq_handler	vector.s	/^_irq_handler:$/;"	l
_irq_hdl	vector.s	/^_irq_hdl:$/;"	l
_pabt_handler	vector.s	/^_pabt_handler:$/;"	l
_pabt_hdl	vector.s	/^_pabt_hdl:$/;"	l
_reset	vector.s	/^_reset:$/;"	l
_swi_handler	vector.s	/^_swi_handler:$/;"	l
_swi_hdl	vector.s	/^_swi_hdl:$/;"	l
_undef_handler	vector.s	/^_undef_handler:$/;"	l
_undef_hdl	vector.s	/^_undef_hdl:$/;"	l
buf	main.c	/^static char buf[32];$/;"	v	file:
c_swi_handler	irq.c	/^void c_swi_handler(void)$/;"	f
c_undef_handler	irq.c	/^void c_undef_handler(void)$/;"	f
cmd	main.c	/^static cmd_t *cmd; \/\/指向某个命令对象$/;"	v	file:
cmd_func	cmd.h	/^    void (*cmd_func)(void);\/\/命令对应的函数$/;"	m	struct:_cmd
cmd_list	cmd.c	/^static cmd_t cmd_list[] = {$/;"	v	file:
cmd_name	cmd.h	/^    char *cmd_name;\/\/命令的名称$/;"	m	struct:_cmd
cmd_nandread	nand.c	/^void cmd_nandread(void)$/;"	f
cmd_t	cmd.h	/^}cmd_t;$/;"	t	typeref:struct:_cmd
find_cmd	cmd.c	/^cmd_t *find_cmd(char *input_name)$/;"	f
itoa	nand.c	/^void itoa(char *buf, unsigned int num)$/;"	f
led_init	led.c	/^void led_init(void)$/;"	f
led_off	led.c	/^void led_off(void)$/;"	f
led_on	led.c	/^void led_on(void)$/;"	f
main	main.c	/^void main(void)$/;"	f
memchr	string.c	/^EXPORT_SYMBOL(memchr);$/;"	v
memchr	string.c	/^void *memchr(const void *s, int c, size_t n)$/;"	f
memcmp	string.c	/^EXPORT_SYMBOL(memcmp);$/;"	v
memcmp	string.c	/^int memcmp(const void *cs, const void *ct, size_t count)$/;"	f
memcmp	string.c	619;"	d	file:
memcpy	string.c	/^EXPORT_SYMBOL(memcpy);$/;"	v
memcpy	string.c	/^void *memcpy(void *dest, const void *src, size_t count)$/;"	f
memmove	string.c	/^EXPORT_SYMBOL(memmove);$/;"	v
memmove	string.c	/^void *memmove(void *dest, const void *src, size_t count)$/;"	f
memscan	string.c	/^EXPORT_SYMBOL(memscan);$/;"	v
memscan	string.c	/^void *memscan(void *addr, int c, size_t size)$/;"	f
memset	string.c	/^EXPORT_SYMBOL(memset);$/;"	v
memset	string.c	/^void *memset(void *s, int c, size_t count)$/;"	f
my_strcmp	cmd.c	/^int my_strcmp(char *s1, char *s2)$/;"	f
nand_init	nand.c	/^void nand_init(void)$/;"	f
nand_read_id	nand.c	/^void nand_read_id(void)$/;"	f
nand_read_page	nand.c	/^void nand_read_page(unsigned char *ptr, $/;"	f
skip_spaces	string.c	/^EXPORT_SYMBOL(skip_spaces);$/;"	v
skip_spaces	string.c	/^char *skip_spaces(const char *str)$/;"	f
strcasecmp	string.c	/^EXPORT_SYMBOL(strcasecmp);$/;"	v
strcasecmp	string.c	/^int strcasecmp(const char *s1, const char *s2)$/;"	f
strcat	string.c	/^EXPORT_SYMBOL(strcat);$/;"	v
strcat	string.c	/^char *strcat(char *dest, const char *src)$/;"	f
strcat	string.c	166;"	d	file:
strchr	string.c	/^EXPORT_SYMBOL(strchr);$/;"	v
strchr	string.c	/^char *strchr(const char *s, int c)$/;"	f
strcmp	string.c	/^EXPORT_SYMBOL(strcmp);$/;"	v
strcmp	string.c	/^int strcmp(const char *cs, const char *ct)$/;"	f
strcmp	string.c	242;"	d	file:
strcpy	string.c	/^EXPORT_SYMBOL(strcpy);$/;"	v
strcpy	string.c	/^char *strcpy(char *dest, const char *src)$/;"	f
strcpy	string.c	93;"	d	file:
strcspn	string.c	/^EXPORT_SYMBOL(strcspn);$/;"	v
strcspn	string.c	/^size_t strcspn(const char *s, const char *reject)$/;"	f
strim	string.c	/^EXPORT_SYMBOL(strim);$/;"	v
strim	string.c	/^char *strim(char *s)$/;"	f
strlcat	string.c	/^EXPORT_SYMBOL(strlcat);$/;"	v
strlcat	string.c	/^size_t strlcat(char *dest, const char *src, size_t count)$/;"	f
strlcpy	string.c	/^EXPORT_SYMBOL(strlcpy);$/;"	v
strlcpy	string.c	/^size_t strlcpy(char *dest, const char *src, size_t size)$/;"	f
strlen	string.c	/^EXPORT_SYMBOL(strlen);$/;"	v
strlen	string.c	/^size_t strlen(const char *s)$/;"	f
strncasecmp	string.c	/^EXPORT_SYMBOL(strncasecmp);$/;"	v
strncasecmp	string.c	/^int strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f
strncat	string.c	/^EXPORT_SYMBOL(strncat);$/;"	v
strncat	string.c	/^char *strncat(char *dest, const char *src, size_t count)$/;"	f
strnchr	string.c	/^EXPORT_SYMBOL(strnchr);$/;"	v
strnchr	string.c	/^char *strnchr(const char *s, size_t count, int c)$/;"	f
strncmp	string.c	/^EXPORT_SYMBOL(strncmp);$/;"	v
strncmp	string.c	/^int strncmp(const char *cs, const char *ct, size_t count)$/;"	f
strncpy	string.c	/^EXPORT_SYMBOL(strncpy);$/;"	v
strncpy	string.c	/^char *strncpy(char *dest, const char *src, size_t count)$/;"	f
strnicmp	string.c	/^EXPORT_SYMBOL(strnicmp);$/;"	v
strnicmp	string.c	/^int strnicmp(const char *s1, const char *s2, size_t len)$/;"	f
strnlen	string.c	/^EXPORT_SYMBOL(strnlen);$/;"	v
strnlen	string.c	/^size_t strnlen(const char *s, size_t count)$/;"	f
strnstr	string.c	/^EXPORT_SYMBOL(strnstr);$/;"	v
strnstr	string.c	/^char *strnstr(const char *s1, const char *s2, size_t len)$/;"	f
strpbrk	string.c	/^EXPORT_SYMBOL(strpbrk);$/;"	v
strpbrk	string.c	/^char *strpbrk(const char *cs, const char *ct)$/;"	f
strrchr	string.c	/^EXPORT_SYMBOL(strrchr);$/;"	v
strrchr	string.c	/^char *strrchr(const char *s, int c)$/;"	f
strsep	string.c	/^EXPORT_SYMBOL(strsep);$/;"	v
strsep	string.c	/^char *strsep(char **s, const char *ct)$/;"	f
strspn	string.c	/^EXPORT_SYMBOL(strspn);$/;"	v
strspn	string.c	/^size_t strspn(const char *s, const char *accept)$/;"	f
strstr	string.c	/^EXPORT_SYMBOL(strstr);$/;"	v
strstr	string.c	/^char *strstr(const char *s1, const char *s2)$/;"	f
sysfs_streq	string.c	/^EXPORT_SYMBOL(sysfs_streq);$/;"	v
sysfs_streq	string.c	/^bool sysfs_streq(const char *s1, const char *s2)$/;"	f
uart_getc	uart.c	/^char uart_getc(void)$/;"	f
uart_gets	uart.c	/^void uart_gets(char *buf, int len)$/;"	f
uart_init	uart.c	/^void uart_init(void)$/;"	f
uart_putc	uart.c	/^void uart_putc(char c)$/;"	f
uart_puts	uart.c	/^void uart_puts(char *s)$/;"	f
vector_end	vector.s	/^vector_end:$/;"	l
vector_start	vector.s	/^vector_start:$/;"	l

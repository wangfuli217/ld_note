cscope 15 $HOME/u-l/CH09 -q 0000000130 0000011567
	@builtin.c

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~<˘y≥.h
>

8 
	~"smsh.h
"

9 
	~"v¨lib.h
"

11 
assign
(*);

12 
ok«me
(*);

14 
	$buûtö_comm™d
(**
¨gs
, *
ªsu…p
)

21 
rv
 = 0;

23 i‡–
	`°rcmp
(
¨gs
[0],"set") == 0 ){

24 
	`VLli°
();

25 *
ªsu…p
 = 0;

26 
rv
 = 1;

28 i‡–
	`°rchr
(
¨gs
[0], '='Ë!
NULL
 ){

29 *
ªsu…p
 = 
	`assign
(
¨gs
[0]);

30 i‡–*
ªsu…p
 != -1 )

31 
rv
 = 1;

33 i‡–
	`°rcmp
(
¨gs
[0], "export") == 0 ){

34 i‡–
¨gs
[1] !
NULL
 && 
	`ok«me
(args[1]) )

35 *
ªsu…p
 = 
	`VLexp‹t
(
¨gs
[1]);

37 *
ªsu…p
 = 1;

38 
rv
 = 1;

40  
rv
;

41 
	}
}

43 
	$assign
(*
°r
)

50 *
˝
;

51 
rv
 ;

53 
˝
 = 
	`°rchr
(
°r
,'=');

54 *
˝
 = '\0';

55 
rv
 = ( 
	`ok«me
(
°r
Ë? 
	`VL°‹e
(°r,
˝
+1) : -1 );

56 *
˝
 = '=';

57  
rv
;

58 
	}
}

59 
	$ok«me
(*
°r
)

65 *
˝
;

67 
˝
 = 
°r
; *cp; cp++ ){

68 i‡–(
	`isdigô
(*
˝
Ë&& cp==
°r
Ë|| !(
	`iß um
(*cp) || *cp=='_' ))

71  ( 
˝
 !
°r
 );

72 
	}
}

	@changeenv.c

4 
	~<°dio.h
>

6 ** 
ívú⁄
;

8 
	$maö
()

10 *
èbÀ
[3];

12 
èbÀ
[0] = "TERM=vt100";

13 
èbÀ
[1] = "HOME=/on/the/range";

14 
èbÀ
[2] = 0;

16 
ívú⁄
 = 
èbÀ
;

18 
	`exe˛p
("ív", "ív", 
NULL
);

19 
	}
}

	@controlflow.c

6 
	~<°dio.h
>

7 
	~"smsh.h
"

9 
	e°©es
 { 
	mNEUTRAL
, 
	mWANT_THEN
, 
	mTHEN_BLOCK
 };

10 
	eªsu…s
 { 
	mSUCCESS
, 
	mFAIL
 };

12 
	gif_°©e
 = 
NEUTRAL
;

13 
	gif_ªsu…
 = 
SUCCESS
;

14 
	gœ°_°©
 = 0;

16 
syn_îr
(*);

18 
	$ok_to_execuã
()

27 
rv
 = 1;

29 i‡–
if_°©e
 =
WANT_THEN
 ){

30 
	`syn_îr
("thenÉxpected");

31 
rv
 = 0;

33 i‡–
if_°©e
 =
THEN_BLOCK
 && 
if_ªsu…
 =
SUCCESS
 )

34 
rv
 = 1;

35 i‡–
if_°©e
 =
THEN_BLOCK
 && 
if_ªsu…
 =
FAIL
 )

36 
rv
 = 0;

37  
rv
;

38 
	}
}

40 
	$is_c⁄åﬁ_comm™d
(*
s
)

46  (
	`°rcmp
(
s
,"if")==0 || strcmp(s,"then")==0 || strcmp(s,"fi")==0);

47 
	}
}

50 
	$do_c⁄åﬁ_comm™d
(**
¨gs
)

57 *
cmd
 = 
¨gs
[0];

58 
rv
 = -1;

60 if–
	`°rcmp
(
cmd
,"if")==0 ){

61 i‡–
if_°©e
 !
NEUTRAL
 )

62 
rv
 = 
	`syn_îr
("if unexpected");

64 
œ°_°©
 = 
	`¥o˚ss
(
¨gs
+1);

65 
if_ªsu…
 = (
œ°_°©
 =0 ? 
SUCCESS
 : 
FAIL
 );

66 
if_°©e
 = 
WANT_THEN
;

67 
rv
 = 0;

70 i‡–
	`°rcmp
(
cmd
,"then")==0 ){

71 i‡–
if_°©e
 !
WANT_THEN
 )

72 
rv
 = 
	`syn_îr
("then unexpected");

74 
if_°©e
 = 
THEN_BLOCK
;

75 
rv
 = 0;

78 i‡–
	`°rcmp
(
cmd
,"fi")==0 ){

79 i‡–
if_°©e
 !
THEN_BLOCK
 )

80 
rv
 = 
	`syn_îr
("fi unexpected");

82 
if_°©e
 = 
NEUTRAL
;

83 
rv
 = 0;

87 
	`Áèl
("öã∫ÆÉº‹Öro˚ssög:", 
cmd
, 2);

88  
rv
;

89 
	}
}

91 
	$syn_îr
(*
msg
)

97 
if_°©e
 = 
NEUTRAL
;

98 
	`Ârötf
(
°dîr
,"sy¡axÉº‹: %s\n", 
msg
);

100 
	}
}

	@execute.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<uni°d.h
>

6 
	~<sig«l.h
>

7 
	~<sys/waô.h
>

9 
	$execuã
(*
¨gv
[])

17 
pid
 ;

18 
chûd_öfo
 = -1;

20 i‡–
¨gv
[0] =
NULL
 )

23 i‡–(
pid
 = 
	`f‹k
()) == -1 )

24 
	`≥º‹
("fork");

25 i‡–
pid
 == 0 ){

26 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

27 
	`sig«l
(
SIGQUIT
, 
SIG_DFL
);

28 
	`execvp
(
¨gv
[0],árgv);

29 
	`≥º‹
("cannotÉxecute command");

30 
	`exô
(1);

33 i‡–
	`waô
(&
chûd_öfo
) == -1 )

34 
	`≥º‹
("wait");

36  
chûd_öfo
;

37 
	}
}

	@execute2.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sig«l.h
>

5 
	~<sys/waô.h
>

6 
	~"v¨lib.h
"

9 
	$execuã
(*
¨gv
[])

16 **
ívú⁄
;

17 
pid
 ;

18 
chûd_öfo
 = -1;

20 i‡–
¨gv
[0] =
NULL
 )

23 i‡–(
pid
 = 
	`f‹k
()) == -1 )

24 
	`≥º‹
("fork");

25 i‡–
pid
 == 0 ){

26 
ívú⁄
 = 
	`VLèbÀ2ívú⁄
();

27 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

28 
	`sig«l
(
SIGQUIT
, 
SIG_DFL
);

29 
	`execvp
(
¨gv
[0],árgv);

30 
	`≥º‹
("cannotÉxecute command");

31 
	`exô
(1);

34 i‡–
	`waô
(&
chûd_öfo
) == -1 )

35 
	`≥º‹
("wait");

37  
chûd_öfo
;

38 
	}
}

	@process.c

11 
	~<°dio.h
>

12 
	~"smsh.h
"

14 
is_c⁄åﬁ_comm™d
(*);

15 
do_c⁄åﬁ_comm™d
(**);

16 
ok_to_execuã
();

18 
	$¥o˚ss
(**
¨gs
)

26 
rv
 = 0;

28 i‡–
¨gs
[0] =
NULL
 )

29 
rv
 = 0;

30 i‡–
	`is_c⁄åﬁ_comm™d
(
¨gs
[0]) )

31 
rv
 = 
	`do_c⁄åﬁ_comm™d
(
¨gs
);

32 i‡–
	`ok_to_execuã
() )

33 
rv
 = 
	`execuã
(
¨gs
);

34  
rv
;

35 
	}
}

	@process2.c

1 
	~<°dio.h
>

2 
	~"smsh.h
"

14 
is_c⁄åﬁ_comm™d
(*);

15 
do_c⁄åﬁ_comm™d
(**);

16 
ok_to_execuã
();

17 
buûtö_comm™d
(**, *);

19 
	$¥o˚ss
(**
¨gs
)

27 
rv
 = 0;

29 i‡–
¨gs
[0] =
NULL
 )

30 
rv
 = 0;

31 i‡–
	`is_c⁄åﬁ_comm™d
(
¨gs
[0]) )

32 
rv
 = 
	`do_c⁄åﬁ_comm™d
(
¨gs
);

33 i‡–
	`ok_to_execuã
() )

34 i‡–!
	`buûtö_comm™d
(
¨gs
,&
rv
) )

35 
rv
 = 
	`execuã
(
¨gs
);

36  
rv
;

37 
	}
}

	@showenv.c

4 **
ívú⁄
;

6 
	$maö
()

8 
i
;

10  
i
 = 0 ; 
ívú⁄
[i] ; i++ )

11 
	`¥ötf
("%s\n", 
ívú⁄
[
i
] );

12 
	}
}

	@smsh.h

1 
	#YES
 1

	)

2 
	#NO
 0

	)

4 *
√xt_cmd
();

5 **
•lôlöe
(*);

6 
‰ìli°
(**);

7 *
emÆloc
(
size_t
);

8 *
îóŒoc
(*, 
size_t
);

9 
execuã
(**);

10 
Áèl
(*, *, );

12 
¥o˚ss
();

	@smsh1.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

10 
	~<sig«l.h
>

11 
	~"smsh.h
"

13 
	#DFL_PROMPT
 "> "

	)

15 
	$maö
()

17 *
cmdlöe
, *
¥om±
, **
¨gli°
;

18 
ªsu…
;

19 
	`£tup
();

21 
¥om±
 = 
DFL_PROMPT
 ;

22 
	`£tup
();

24  (
cmdlöe
 = 
	`√xt_cmd
(
¥om±
, 
°dö
)Ë!
NULL
 ){

25 i‡–(
¨gli°
 = 
	`•lôlöe
(
cmdlöe
)Ë!
NULL
 ){

26 
ªsu…
 = 
	`execuã
(
¨gli°
);

27 
	`‰ìli°
(
¨gli°
);

29 
	`‰ì
(
cmdlöe
);

32 
	}
}

34 
	$£tup
()

40 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

41 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

42 
	}
}

44 
	$Áèl
(*
s1
, *
s2
, 
n
)

46 
	`Ârötf
(
°dîr
,"Eº‹: %s,%s\n", 
s1
, 
s2
);

47 
	`exô
(
n
);

48 
	}
}

	@smsh2.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<uni°d.h
>

8 
	~<sig«l.h
>

9 
	~<sys/waô.h
>

10 
	~"smsh.h
"

12 
	#DFL_PROMPT
 "> "

	)

14 
	$maö
()

16 *
cmdlöe
, *
¥om±
, **
¨gli°
;

17 
ªsu…
, 
	`¥o˚ss
(**);

18 
	`£tup
();

20 
¥om±
 = 
DFL_PROMPT
 ;

21 
	`£tup
();

23  (
cmdlöe
 = 
	`√xt_cmd
(
¥om±
, 
°dö
)Ë!
NULL
 ){

24 i‡–(
¨gli°
 = 
	`•lôlöe
(
cmdlöe
)Ë!
NULL
 ){

25 
ªsu…
 = 
	`¥o˚ss
(
¨gli°
);

26 
	`‰ìli°
(
¨gli°
);

28 
	`‰ì
(
cmdlöe
);

31 
	}
}

33 
	$£tup
()

39 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

40 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

41 
	}
}

43 
	$Áèl
(*
s1
, *
s2
, 
n
)

45 
	`Ârötf
(
°dîr
,"Eº‹: %s,%s\n", 
s1
, 
s2
);

46 
	`exô
(
n
);

47 
	}
}

	@smsh4.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<sig«l.h
>

5 
	~<sys/waô.h
>

6 
	~"smsh.h
"

7 
	~"v¨lib.h
"

16 
	#DFL_PROMPT
 "> "

	)

18 
	$maö
()

20 *
cmdlöe
, *
¥om±
, **
¨gli°
;

21 
ªsu…
, 
	`¥o˚ss
(**);

22 
	`£tup
();

24 
¥om±
 = 
DFL_PROMPT
 ;

25 
	`£tup
();

27  (
cmdlöe
 = 
	`√xt_cmd
(
¥om±
, 
°dö
)Ë!
NULL
 ){

28 i‡–(
¨gli°
 = 
	`•lôlöe
(
cmdlöe
)Ë!
NULL
 ){

29 
ªsu…
 = 
	`¥o˚ss
(
¨gli°
);

30 
	`‰ìli°
(
¨gli°
);

32 
	`‰ì
(
cmdlöe
);

35 
	}
}

37 
	$£tup
()

43 **
ívú⁄
;

45 
	`VLívú⁄2èbÀ
(
ívú⁄
);

46 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

47 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

48 
	}
}

50 
	$Áèl
(*
s1
, *
s2
, 
n
)

52 
	`Ârötf
(
°dîr
,"Eº‹: %s,%s\n", 
s1
, 
s2
);

53 
	`exô
(
n
);

54 
	}
}

	@splitline.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~"smsh.h
"

13 * 
	$√xt_cmd
(*
¥om±
, 
FILE
 *
Â
)

22 *
buf
 ;

23 
buf•a˚
 = 0;

24 
pos
 = 0;

25 
c
;

27 
	`¥ötf
("%s", 
¥om±
);

28  ( 
c
 = 
	`gëc
(
Â
)Ë!
EOF
 ) {

31 if–
pos
+1 >
buf•a˚
 ){

32 i‡–
buf•a˚
 == 0 )

33 
buf
 = 
	`emÆloc
(
BUFSIZ
);

35 
buf
 = 
	`îóŒoc
(buf,
buf•a˚
+
BUFSIZ
);

36 
buf•a˚
 +
BUFSIZ
;

40 i‡–
c
 == '\n' )

44 
buf
[
pos
++] = 
c
;

46 i‡–
c
 =
EOF
 && 
pos
 == 0 )

47  
NULL
;

48 
buf
[
pos
] = '\0';

49  
buf
;

50 
	}
}

55 
	#is_dñim
(
x
Ë((x)==' '||(x)=='\t')

	)

57 ** 
	$•lôlöe
(*
löe
)

66 *
	`√w°r
();

67 **
¨gs
 ;

68 
•Ÿs
 = 0;

69 
buf•a˚
 = 0;

70 
¨gnum
 = 0;

71 *
˝
 = 
löe
;

72 *
°¨t
;

73 
Àn
;

75 i‡–
löe
 =
NULL
 )

76  
NULL
;

78 
¨gs
 = 
	`emÆloc
(
BUFSIZ
);

79 
buf•a˚
 = 
BUFSIZ
;

80 
•Ÿs
 = 
BUFSIZ
/(*);

82  *
˝
 != '\0' )

84  
	`is_dñim
(*
˝
) )

85 
˝
++;

86 i‡–*
˝
 == '\0' )

90 i‡–
¨gnum
+1 >
•Ÿs
 ){

91 
¨gs
 = 
	`îóŒoc
◊rgs,
buf•a˚
+
BUFSIZ
);

92 
buf•a˚
 +
BUFSIZ
;

93 
•Ÿs
 +(
BUFSIZ
/(*));

97 
°¨t
 = 
˝
;

98 
Àn
 = 1;

99 *++
˝
 !'\0' && !(
	`is_dñim
(*cp)) )

100 
Àn
++;

101 
¨gs
[
¨gnum
++] = 
	`√w°r
(
°¨t
, 
Àn
);

103 
¨gs
[
¨gnum
] = 
NULL
;

104  
¨gs
;

105 
	}
}

111 *
	$√w°r
(*
s
, 
l
)

113 *
rv
 = 
	`emÆloc
(
l
+1);

115 
rv
[
l
] = '\0';

116 
	`°∫˝y
(
rv
, 
s
, 
l
);

117  
rv
;

118 
	}
}

121 
	$‰ìli°
(**
li°
)

128 **
˝
 = 
li°
;

129  *
˝
 )

130 
	`‰ì
(*
˝
++);

131 
	`‰ì
(
li°
);

132 
	}
}

134 * 
	$emÆloc
(
size_t
 
n
)

136 *
rv
 ;

137 i‡–(
rv
 = 
	`mÆloc
(
n
)Ë=
NULL
 )

138 
	`Áèl
("out of memory","",1);

139  
rv
;

140 
	}
}

141 * 
	$îóŒoc
(*
p
, 
size_t
 
n
)

143 *
rv
;

144 i‡–(
rv
 = 
	`ªÆloc
(
p
,
n
)Ë=
NULL
 )

145 
	`Áèl
("realloc() failed","",1);

146  
rv
;

147 
	}
}

	@varlib.c

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~"v¨lib.h
"

28 
	~<°rög.h
>

30 
	#MAXVARS
 200

	)

32 
	sv¨
 {

33 *
	m°r
;

34 
	mglobÆ
;

37 
v¨
 
	gèb
[
MAXVARS
];

39 *
√w_°rög
( *, *);

40 
v¨
 *
föd_ôem
(*, );

42 
	$VL°‹e
–*
«me
, *
vÆ
 )

49 
v¨
 *
ôemp
;

50 *
s
;

51 
rv
 = 1;

54 i‡((
ôemp
=
	`föd_ôem
(
«me
,1))!=
NULL
 && (
s
=
	`√w_°rög
“ame,
vÆ
))!=NULL)

56 i‡–
ôemp
->
°r
 )

57 
	`‰ì
(
ôemp
->
°r
);

58 
ôemp
->
°r
 = 
s
;

59 
rv
 = 0;

61  
rv
;

62 
	}
}

64 * 
	$√w_°rög
–*
«me
, *
vÆ
 )

69 *
ªtvÆ
;

71 
ªtvÆ
 = 
	`mÆloc
–
	`°æí
(
«me
Ë+ såÀn(
vÆ
) + 2 );

72 i‡–
ªtvÆ
 !
NULL
 )

73 
	`•rötf
(
ªtvÆ
, "%s=%s", 
«me
, 
vÆ
 );

74  
ªtvÆ
;

75 
	}
}

77 * 
	$VLlookup
–*
«me
 )

82 
v¨
 *
ôemp
;

84 i‡–(
ôemp
 = 
	`föd_ôem
(
«me
,0)Ë!
NULL
 )

85  
ôemp
->
°r
 + 1 + 
	`°æí
(
«me
);

88 
	}
}

90 
	$VLexp‹t
–*
«me
 )

96 
v¨
 *
ôemp
;

97 
rv
 = 1;

99 i‡–(
ôemp
 = 
	`föd_ôem
(
«me
,0)Ë!
NULL
 ){

100 
ôemp
->
globÆ
 = 1;

101 
rv
 = 0;

103 i‡–
	`VL°‹e
(
«me
, "") == 1 )

104 
rv
 = 
	`VLexp‹t
(
«me
);

105  
rv
;

106 
	}
}

108 
v¨
 * 
	$föd_ôem
–*
«me
 , 
fú°_bœnk
 )

115 
i
;

116 
Àn
 = 
	`°æí
(
«me
);

117 *
s
;

119  
i
 = 0 ; i<
MAXVARS
 && 
èb
[i].
°r
 !
NULL
 ; i++ )

121 
s
 = 
èb
[
i
].
°r
;

122 i‡–
	`°∫cmp
(
s
,
«me
,
Àn
) == 0 && s[len] == '=' ){

123  &
èb
[
i
];

126 i‡–
i
 < 
MAXVARS
 && 
fú°_bœnk
 )

127  &
èb
[
i
];

128  
NULL
;

129 
	}
}

132 
	$VLli°
()

139 
i
;

140 
i
 = 0 ; i<
MAXVARS
 && 
èb
[i].
°r
 !
NULL
 ; i++ )

142 i‡–
èb
[
i
].
globÆ
 )

143 
	`¥ötf
(" * %s\n", 
èb
[
i
].
°r
);

145 
	`¥ötf
(" %s\n", 
èb
[
i
].
°r
);

147 
	}
}

149 
	$VLívú⁄2èbÀ
(*
ív
[])

155 
i
;

156 *
√w°rög
;

158 
i
 = 0 ; 
ív
[i] !
NULL
 ; i++ )

160 i‡–
i
 =
MAXVARS
 )

162 
√w°rög
 = 
	`mÆloc
(1+
	`°æí
(
ív
[
i
]));

163 i‡–
√w°rög
 =
NULL
 )

165 
	`°r˝y
(
√w°rög
, 
ív
[
i
]);

166 
èb
[
i
].
°r
 = 
√w°rög
;

167 
èb
[
i
].
globÆ
 = 1;

169  
i
 < 
MAXVARS
 ){

170 
èb
[
i
].
°r
 = 
NULL
 ;

171 
èb
[
i
++].
globÆ
 = 0;

174 
	}
}

176 ** 
	$VLèbÀ2ívú⁄
()

182 
i
,

183 
j
,

184 
n
 = 0;

185 **
ívèb
;

191  
i
 = 0 ; i<
MAXVARS
 && 
èb
[i].
°r
 !
NULL
 ; i++ )

192 i‡–
èb
[
i
].
globÆ
 == 1 )

193 
n
++;

196 
ívèb
 = (**Ë
	`mÆloc
–(
n
+1) * (*) );

197 i‡–
ívèb
 =
NULL
 )

198  
NULL
;

201 
i
 = 0, 
j
 = 0 ; i<
MAXVARS
 && 
èb
[i].
°r
 !
NULL
 ; i++ )

202 i‡–
èb
[
i
].
globÆ
 == 1 )

203 
ívèb
[
j
++] = 
èb
[
i
].
°r
;

204 
ívèb
[
j
] = 
NULL
;

205  
ívèb
;

206 
	}
}

	@varlib.h

5 
VLívú⁄2èbÀ
(**);

6 
VLexp‹t
(*);

7 *
VLlookup
(*);

8 
VLli°
();

9 
VL°‹e
( *, * );

10 **
VLèbÀ2ívú⁄
();

11 
VLívú⁄2èbÀ
(**);

	@
1
.
0
15
149
builtin.c
changeenv.c
controlflow.c
execute.c
execute2.c
process.c
process2.c
showenv.c
smsh.h
smsh1.c
smsh2.c
smsh4.c
splitline.c
varlib.c
varlib.h

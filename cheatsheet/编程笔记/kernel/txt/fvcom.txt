lang mix
http://forum.simwe.com/archiver/tid-942617.html
http://www.physik3.gwdg.de/~engster/mex_fortran90.html
http://ubuntuforums.org/showthread.php?t=167113
http://blog.csdn.net/Fortran/archive/2005/03/27/331500.aspx
http://www.mathworks.com/help/techdoc/matlab_external/f28378.html
http://blog.csdn.net/happyparrot/archive/2007/04/17/1567624.aspx
http://shelley0128.china-pub.com/28279#ml 	matlab


netcdf
http://www.unidata.ucar.edu/software/netcdf/
http://hi.baidu.com/thefence/blog/item/74ded5131906330b5baf53f1.html
http://hi.baidu.com/52hack/blog/item/bd6d09e99c1f8837b80e2dc0.html matlab
http://blog.csdn.net/laomai/archive/2007/08/13/1740747.aspx


visit
https://wci.llnl.gov/codes/visit/manuals.html

Interfaces with C++, Python, and Java

VisIt also supports C++, Python and Java interfaces. The C++ and Java interfaces make it possible to provide alternate user interfaces for VisIt or allow existing C++ or Java applications to add visualization support. The Python scripting interface gives users the ability to batch process data using a powerful scripting language. This feature can be used to create extremely sophisticated animations or implement regression suites. It also allows simulation systems that use Python as a back-plane to easily integrate visualization capabilities into their systems.

Extensible with dynamically loaded plug-ins

VisIt achieves extensibility through the use of dynamically loaded plugins. All of VisIt鈥檚 plots, operators, and database readers are implemented as plugins and are loaded at run-time from the plugin directory. New plugins can be added simply by installing them in this directory. VisIt comes with a graphical plugin creation tool, which greatly simplifies the process of creating new plugins. The user describes the properties of the plugin and then the tool generates most of the code necessary to implement the plugin. For example, in the case of an operator, the plugin creation tool creates the code necessary for the graphical user interface attribute window; the C++, Python, and Java interfaces; and the code necessary to interface to VisIt. The only code you need to write is the C++ code that actually performs the operation.
visit -debug 5

visit
 main components
local Graphical User Interface (GUI); Viewer
remote computers Database server; Compute engine

interfaces : c++/java/python/gui/cli

Toolbars provide shortcuts to common functions

Plots come from plug-ins so you can extend VisIt鈥檚 plotting capabilities by writing a new plug-in

An operator is a filter that is applied to a database variable before the compute engine uses that variable to generate a plot

Operators come from plug-ins so you can extend VisIt鈥檚 data manipulation capabilities by writing a new plug-in

python scripts only apply to the currently active window

VisIt's NetCDF reader plugin supports conventions for the ADAPT, Lodi, and FVCOM simulation codes. If your NetCDF files were not generated with those codes then VisIt's basic NetCDF reader will attempt to expose all 1D, 2D, 3D arrays as variables that VisIt can plot. The basic reader does not permit you to specify coordinates for your mesh nor does it allow more than one time step in a file. If your file's variables are disabled in VisIt's plot menus then you may need to extend VisIt's NetCDF reader to support your code's conventions.


metis icc-gcc
netcdf ./configure --prefix=/usr/local --disable-netcdf-4 && sudo make check install
rho1->r1 RHO1->R1
libcurl
erosion

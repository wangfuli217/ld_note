
服务器模型
    gunicorn 是基于“pre-fork worker”模型，这就意味着有一个中心主控master进程，由它来管理一组 worker 进程。
    这个主控进程并不知晓任何客户端，所有的请求和响应都完全是由多个 worker 进程来处理


解释 pre-fork
    pre-fork 服务器和 fork 服务器相似，通过一个单独的进程来处理每条请求。
    不同的是， pre-fork 服务器会通过预先开启大量的进程，等待并处理接到的请求。
    由于采用了这种方式来开启进程，服务器并不需要等待新的进程启动而消耗时间，因而能够以更快的速度应付多用户请求。
    另外， pre-fork 服务器在遇到极大的高峰负载时仍能保持良好的性能状态。 这是因为不管什么时候，只要预先设定的所有进程都已被用来处理请求时，服务器仍可追加额外的进程。
    缺点是，当遇到高峰负载时，由于要启动新的服务器进程，不可避免地会带来响应的延迟。

    这点得说一下，刚开始我以为指定 worker 数量就固定由这些 worker 来执行，却不知道它会自动追加额外进程。导致日志文件并发出问题。
    我指定 8 个进程，结果却启动了 72 个。。。


主控master进程
    主控master进程，就是一个简单的循环，用来不断侦听不同进程信号并作出不同的动作，仅此而已。它通过一些信号，诸如TTIN, TTOU, 和CHLD等等， 管理着那些正在运行的worker进程。
    TTIN 和 TTOU信号是告诉主控master进程增加或减少正在运行的worker数量。
    CHLD信号是在一个子进程已经中止之后，由主控master进程重启这个失效的worker进程。


hash:
        哈希（散列）是一个将大体量数据转化为很小数据的过程，甚至可以仅仅是一个数字，以便我们可以用在固定
    的时间复杂度下查询它，所以，哈希对高效的算法和数据结构很重要。
        不可改变性是指一些对象在被创建之后不会因为某些方式改变，特别是针对任何可以改变哈希对象的哈希值的方式。
        两者相联系是因为哈希键值一定是不可改变的，所以它们对应的哈希键值也不改变。如果允许它们改变，
    那么它们在数据结构如哈希表中的存储位置也会改变，因此会与哈希的概念违背，效率会大打折扣。
id:
    hash()与id()相关，id(obj)即取得对象的内存地址，所以这个数字的大小每次运行都不一样，但是对于内置类型：
    print(id(int) / hash(int))  # 16.0
    print(id(str) / hash(str))  # 16.0
    print(id(list) / hash(list))  # 16.0
    
    id还有个有趣的小整数对象池的概念：
    print(id(3) - id(2), hash(3) - hash(2))  # -24 1
    print(id(45) - id(44), hash(45) - hash(44))  # -24 1
    print(id(1001) - id(1000), hash(1001) - hash(1000)) # ? 1
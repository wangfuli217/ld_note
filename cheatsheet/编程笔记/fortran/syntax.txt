英文名
  INTEGER :: 1A          ! 不是以字母开头
  INTEGER :: A_name_made_up_of_more_than_31_letters  !　太长
  INTEGER :: China:0     ! 含有不允许的字符
  INTEGER :: A-3         ! 减号在此是无意义的
  Fortran没有规定保留字，即可以用函数名或语句定义符作变量名。
  
  SIN＝3.5
  PRINT *，SIN
  则语句中的SIN是变量名而不代表正弦函数。系统会根据它后面有无自变量而作出判断
  READ *，PRINT
  此时PRINT是一个变量名而不代表"打印输出"的操作。
  
  以下是错误的：
  SIN＝3.5
  A＝SIN*SIN(2.0)
  PRINT *，PRINT

标号和标签
  可在语句开头加上标号或标签，用于指定特定的语句。有效范围限于一个程序单位内。
  标号：1-5位的10进制整数，且至少一位不为0，前导0不起作用。F90中，不可对空语句加上语句标号。
  标签：英文名，后面接“:”（冒号） (F90)

  例：
  DO 10 k = 1,100
  ...
  10    CONTINUE
   
  注：不能使用整型变量来指定转向语句的标号。如下是错误的。
  n = 10
  GOTO n
   
  例： (F90)
  DO k = 1,100
  loop2:    DO
  ....
  END DO loop2  !已有标签名时不能省略标签名。
  END DO

常量
  整型、实型、双精度和复型常量是算数型常量，也为常数。
    整型：默认值为4字节
      例：12345678    -256     (1,000,000 或 125. 是错误的)
      1234567890123_8  (8字节整数)          (F90)
      912345678901_k   (k为定义精度的参量)  (F90)
    实型：默认值为4字节（其它为8字节）。
      实数是有小数点的数，有效位数为7位，其绝对值的范围与计算机系统和精度型（单精度和双精度）有关。实数有两种表示形式：
      小数形式：即日常习惯使用的小数形式。
         3.141592  -0.125   3.0    -2.  等
         3.14159265358979_8  (8字节实数)          (F90)
         2.7182818_p         (p为定义精度的参量)  (F90)
      指数形式：用指数形式表示的实数由两部分组成，即数字部分和指数部分。
         7.8E-12    -0.125E5
         0.125D+45(双精度，8字节)
    复  型：默认值为2×4字节（其它为8字节）。实部与虚部用括号围起来表示：(实数，实数)。
    逻辑型：默认值为4字节（其它为1字节）。其值只能为：.TRUE.（真） 和 .FALSE.（假）。
    字符型：1个字符为1字节（中文系统中为2字节）。用 '  '(F90："  ")围起来的字符串。
    例："I'm a boy."  （長为10字节）
    'I''m a boy.' （長为10字节）
    数  组：这不是一种单独的类型，可把同类型的常量用一维维数括起来表示：(/常量，常量，...，常量/)。 (F90)
    
    
变量
  整型变量INTEGER、实型变量REAL、双精度变量DOUBLE PRECISION、复型变量COMPLEX、逻辑型变量LOGICAL、字符型变量CHARACTER。
  隐含约定：Fortran规定，凡以字母I，J，K，L，M，N六个字母开头的变量名，如无另外说明则为整型变量。
  以其它字母开头的变量为实型变量。可以将这个隐含约定称为“I—N规则” ，表示用I到N之间的字母开头的变量为整型。
  类型指定：如果想改变“I—N规则”对变量类型的约束，可以用类型说明语句专门指定某些变量的类型。Fortran中有六个类型说明语句：
    (1)INTEGER语句(整型说明语句)
    (2)REAL语句(实型说明语句)
    (3)DOUBLE PRECISION语句(双精度说明语句)
    (4)COMPLEX语句(复型说明语句)
    (5)LOGICAL语句(逻辑型说明语句)
    (6)CHARACTER语句(字符型说明语句)  
  IMPLICIT语句(隐含说明语句)指定：可以用IMPLICIT语句将某一字母开头的全部变量指定为所需的类型，还可以用一个IMPLICIT语句同时指定几种类型。
  例如：
    IMPLICIT INTEGER (A，C，T-V)
    IMPLICIT REAL (I，J)
    IMPLICIT INTEGER (A，B)，REAL(I,K)，INTEGER (X-Z)
  注：
  (1) 以上三种方法中，以类型说明语句最优先，IMPLICIT语句次之，“I—N规则”的隐含约定级别最低。如下程序中IMAX变量为整型，而其它以I、J开头的变量为实型：
    IMPLICIT REAL(I，J)
    INTEGER IMAX
  (2) 类型说明语句和IMPLICIT语句是非执行语句。
  (3) 类型说明只在本程序单位内有效。
  (4) IMPLICIT语句和类型说明语句应该出现在本程序单位中的所有执行语句之前，其中IMPLICIT语句又应在所有的类型说明语句之前。

内在函数
  1. 一个内在函数可要求一个或多个自变量
  注意当自变量个数规定为2个时，自变量的顺序不应任意颠倒，如MOD(8,3)表示8被3除的余数，其值为2，而MOD(3,8)则表示3被8除的余数，其值为3。
  当自变量个数为＞2时，自变量的顺序无关。
  2. 函数的自变量是有类型的，函数值也是有类型的
  例如MOD(8,3)中自变量8和3是整型，函数MOD(8,3)的值“2”也是整型，如果写成MOD(8.0,3.0)，自变量是实型的，函数值也是实型的，其值为2.0。
  3. 函数名分为“通用名”和“专用名”
  例如求余函数的“通用名”为MOD，“专用名”有三个(MOD，AMOD，DMOD)。根据自变量的类型就自动确定了函数值的类型，
  如MOD(8,3)的值为整型，而MOD(8.0,3.0)的值为实型。当调用子程序时如果用内在函数作为自变量(实参)，必须使用该内在函数的专用名。
  
表达式运算中的类型
  同类型的算术量之间运算的结果仍保持原类型。
  如果参加运算的两个算术量为不同类型，则编译系统会自动将它们转换成同一类型后进行运算
    整型(低)→实型(高)。
  运算的误差
    整型量的运算是准确的，没有任何误差(只要在整数范围内)。而实型量的运算会出现一些误差。
    
算术赋值语句
  其一般格式为：V＝e，V代表一个变量名，e代表一个表达式。
    Fortran77的赋值语句有三类：算术赋值语句、逻辑赋值语句、字符赋值语句。
    
执行时的类型转换
  一个算术赋值语句中的被赋值的变量(V)和表达式(e)的类型可以相同，也可以不相同。F77作如下规定：
    如果变量V与表达式e的类型相同，则直接进行赋值。
    如果类型不同，则应先进行表达式的求值，然后将该表达式的值转换为被赋值变量的类型。如：
      I＝3.5*2.1
    表达式3.5*2.1的值为7.35，实型。而变量I为整型，因此I的值等于7。又如:
      T＝3*5/7
    表达式的值为2，整型。由于T为实型，故系统先将整数2转换成实数2.0，再赋给变量T，T的值为2.0。
    
当赋值号两侧的类型不同时，往往会产生程序设计者事先预想不到的结果。所以在编写程序时，应尽可能使贼值号两侧保持同类型。

2015/5/22
	10+年程序员总结的20+条经验教训
    以下是我作为一名程序员经过10几年时间总结出的一些有关于软件开发的经验规则：

　开发

    1.从小事做起，然后再扩展
    无论是创建一个新的系统，还是添加功能到现有的系统中，我总是从一个简单到几乎没有任何所需功能的版本启动，然后再一步一步地解决问题，直到满意为止。我从来没有妄想过能够一步登天。相反，我一边开发一边学习，同时新掌握的信息还可以用于解决方案中。
    我很喜欢John Gall的这句话：“复杂系统总是源于简单系统的演化。”

    2.一次只改变一件事
    当我们在开发时，碰到测试失败和功能无效的情况，如果你一次只研究一个问题，那将会更容易找到问题的关键。换言之，就是使用短迭代。必须确保这个问题解决之后，再转移到另一个问题上。这适用于向下提交。如果在你添加新功能之前需要先重构代码，那么先提交重构，然后再添加新的功能。

    3.尽早地添加日志记录和错误处理
    在开发新系统时，我做的第一件事就是添加日志和错误处理，因为这两者从一开始就非常有用。如果系统不能照常工作，那么你就需要知道程序中发生了什么——这是日志的作用。错误处理也是如此——错误和异常越早处理越好。

    4.每一行新代码必须至少执行一次
    在你真正完成一个功能之前，你必须对它进行测试。不然，你怎么知道它是不是按照你的想法在执行呢？通常情况下，最好的方法是通过自动测试，但并非总是如此。不过，不管怎么说，每一行新代码必须至少执行一次。

    5.在整体测试之前先进行模块测试
    先进行部分模块测试可以节省时间。通常说来，我们在整合不同的模块时也会出现问题，例如模块之间的接口不匹配。但是如果我们能够信任各个组件的话，那么跟踪集成问题就会变得简单得多。

    6.所有事情所花费的时间总是比你预期的要长
    特别是在编程中，即使一切进展顺利，我们也很难对功能所需的时间做出正确的预算。并且，开发软件时碰到各种意想不到的问题是非常常见的。
    侯世达定律其实道出了真谛：做事所花费的时间总是比你预期的要长，即使你在预期中已经考虑了侯世达定律。

    7.先了解现有的代码
    大多数的编码都需要以某种方式改变现有的代码。即使是新功能，也需要适应现有的程序。所以，在你加进去新的内容前，首先需要了解当前的解决方案。否则，你一不小心就很有可能会打破现有的功能。这意味着，阅读代码和编写代码都是必要的技能。这也是为什么看似微小的变化仍可能需要很长时间才能解决的原因之一——你首先必须了解上下文。

    8.阅读和运行
    幸运的是，对于理解代码，我们有两种互补的方法。你可以阅读代码，也可以运行代码。运行代码的确是个非常棒的好方法。所以，请确保充分利用这两种方法。

　故障排除

    9.bug总是难免的
    我不喜欢那些宣称软件开发可以“一蹴而就”的高谈阔论。不论你再怎么费尽心机，bug总是难免的。最好能够做成可以快速故障排除、修复bug和部署修复的系统。

    10.解决故障报告
    每个开发人员都应该花时间去处理来自客户的故障报告，并修复bug。这能让你更好地理解客户的意图，明白如何使用系统，知道排除故障的难易程度，了解系统的设计情况。这也是为自己的开发成果负责的好方法。

    11.重现问题
    修复bug的第一步就是重现问题。然后你得确保修复之后，问题能够彻彻底底地消失。这样一个简单的规则可以确保你不会误将非问题当作是问题，并确保解决方案真的能够奏效。

    12.修复已知错误，然后再看看有没有遗漏的地方
    有时候，可能同时存在着几个不同的问题。它们之间的互相作用，可能会让你毫无头绪，束手无策。不要纠结于搞清楚发生了什么，先去解决所有已知的问题，然后再看看还有什么不对的地方。

    13.没有巧合
    在测试和故障排除时，不要相信会出现什么巧合。就像你改变了定时器的值，那么就会改变系统重启的频率。所以一切都并非是巧合。添加新功能，另一个不相干的功能变慢了？这绝对不是巧合。相反，是你应该仔细调查的内容。

    14.关联时间戳
    在故障排除时，事件的时间戳可以作为你的好帮手。寻找偶数增量。例如，如果系统重启了，并且刚刚发出过一个3000毫秒左右的请求，那么可能是触发了某个定时器，才导致出现重启的动作。

　团队合作

    15.面对面的交流最有效
    当我们需要讨论如何解决问题时，那么面对面的交流比视频、打电话和电子邮件都要好。

    16.橡皮鸭法
    遇到你绞尽脑汁也解决不了的问题时，不妨找一个同事，然后将问题解释给他们听。很多时候，当你在叙述时，即使你的同事一言不发，你可能也会突然灵光乍现找到问题的关键。

    17.问问题
    阅读和运行代码往往非常有助于指出代码的目的和它的工作原理。但是如果你有机会咨询那些更为了解的人（例如原来的程序员），那么千万不要错过。

    18.共享荣誉
    不要贪图荣誉，该是谁的就是谁的。例如：“Marcus想出了这个主意……”（如果真是他想的话），而不要说“我们想出的……”。

　其他

    19.尝试
    如果你不知道某种编程语言功能的工作原理，那么不妨写一个小程序来理解它是如何工作的。这同样适用于测试你正在开发的系统。如果我将参数设置为-1，会发生什么？当我在重启系统时，如果服务当掉，会发生什么？以此来研究它的工作原理。

    20.带着问题睡觉
    如果你正在解决一个很难的问题，那么不妨带着问题睡觉。有科学研究表明，这样做虽然你表明上并没有在主动思考，但你的潜意思却这么做了。其结果就是，第二天再去研究问题，解决方案已经呼之欲出了。

    21.跳槽
    不要害怕跳槽。和不同的人共事，开发不同的产品，感受不同的公司文化是非常有意思的。

    22.不断学习
    我们需要不断地学习和了解软件开发。你可以尝试不同的编程语言和工具，阅读软件开发的书籍，接受MOOC课程。相信我，量变才能达到质的飞跃，这些小小的学习积累，终有一天会大大地提高你的知识和能力。


2015/4/2
	不缺钱时往往是最容易融到钱的

//2013/12/31
    孙子曰：“是故胜兵先胜而后求战，败兵先战而后求胜。”

//2013/12/30
    最近在各个文章中经常出现的一句话是在任何一个行业潜心研究10000小时，都会成为专家。
    而创新也不仅仅是灵光一闪，点子拿来。在这个不缺创意缺实现的年代，想到什么不重要，做出什么才重要。


//2013/12/17
程序员如何增加收入
    先要替公司赚到钱，承担责任，一个员工才能拿到钱。
        若一个程序员技术水平一个顶十个，在他替公司赚钱的道路上还有哪些障碍呢？典型障碍有很多，比如：
        1.这个程序员开发的功能中有50%客户不常使用
        2.这个程序员开发的底层库中，有50%不被调用
        3.顶尖高手在公司内部的位置已经不再重要

    一个方向，是转向关注业务。具体说来，包括成为产品经理，或称为对产品需求负有责任的技术兼业务高手。
        原因就是产品经理是“掌舵”的，不是“划船”的，他对团队生产力的贡献，不是加法，而是乘法。
    第二个方向，是作为技术领导，将自己的技术与管理结合起来，提升整个团队的战斗力。

    这两个方向有一个共同点，就是把自己卓越的技术能力对团队的贡献，从加法变成乘法。
    高手必须认识到自己对团队和企业的最大贡献，不是自己独立承担的那点任务，而是影响产品和影响团队的能力。

    最后一个常见问题：
    “我传授了徒弟，最后却被一脚踢掉怎么办？”这是很多技术高手所担心的事情。
    其实，老板都是很聪明的人，技术、管理、业务可能都一般，但识人、用人绝对超过我们，否则怎么会我们给他打工呢！
    一个高手如果被踢掉，更可能是因为沉迷技术逐渐变得钻牛角尖、封闭，最终变成无用之人。


//2013/12/13
没人仅仅因为阅读而成为一个伟大的作家，你得自己写。
    不能复制别人的代码，得自己一个个敲，不然没法写出优雅的代码来。

//2013/12/13
大数据 时代
    因为数据收集、分析、统计 更方便,已经废弃抽样检查做法。可以收集总体作为样本，然后分析。
    两方式的比较，好像汽车与骑马的区别。
    公司应该记录尽可能多的用户操作、浏览信息，产品关系、用户关系网等，便于预测，然后给用户推荐产品、预测事件等。
    应用：亚马逊给用户推荐产品，淘宝推荐产品，QQ推荐好友、推荐群等。谷歌还可以预测流感。

//2013/4/10
关于股份的：
	1，控股原则——老大一般应有控股地位。
	2，不可替代原则——离得开的应尽量少给股份。
	3，行权原则——分四年授予股份，中间因故去职者收回剩余股份。
	4，预留原则——预留10-20%给未来人才，确保新血进入。
	5，奖惩原则：即使创始者也应有股份奖励，确保激励。

//2012-10-19
【WORD小绝招】
	输入三个“-”，回车，得到一条直线；
	输入三个“=”，回车，得到一条双直线；
	输入三个“~”，回车，得到一条波浪线；
	输入三个“*”回车，得到一条虚线；
	输入三个 “#”，回车，得到一条隔行线。
	office办公必备，转起收走哇！

//2012-07-16
	天下兴亡，匹夫有责。政党存灭，肉食者谋。
	真心为天下的，不会拥护恶政


//2012-04-14
【等死模式】
    当一个人等待与拖延的成本，远远高于他真正开始行动所需要的成本，他就会慢慢陷入越等待越不行动的怪圈。
    ——我们把这个模式称为“等死模式”。

//2012-04-14
生活
    跟人说话时，把自己想象成对方，站在跟对方同一视角看待问题
    这样才可以避免对立、争吵，把对话变成交流
    吵架主要是想法不同时，急于反驳对方。可换成一种说法，当你认为的情况发生时...
    -- 跟老婆吵架的思考

//2012-03-19
编程八荣八耻
    以动手实践为荣，以只看不练为耻。
    以打印日志为荣，以出错不报为耻。
    以局部变量为荣，以全局变量为耻。
    以单元测试为荣，以手工测试为耻。

    以代码重用为荣，以复制粘贴为耻。
    以多态应用为荣，以分支判断为耻。
    以定义常量为荣，以魔法数字为耻。
    以总结思考为荣，以不求甚解为耻。


//2012-02-23
人生准则
    1.会有严重后果的事,必须谨慎。(如:不戴套,跟爸妈、老板翻脸)
    2.无益的事,不做。(如:玩游戏,尤其上班时间玩游戏)
    3.长期重要的事，坚持做。(如:学英语,积累人脉,积累财富)
    4.如果无法抵抗诱惑,则远离它。


//2011-11-24
经验
    函数的参数采用大粒度的，而减少采用细粒度的。这样使接口内部变动不影响调用方。
    比如，参数传一个实体类，总比传一个实体类的id要好。


下面内容，有空再将它们变成倒序
============================================================

//2010/1/15
java.JDBC: 用傳參形式的语句
    使用 PreparedStatement 做 insert,update,delete 和 select
    使用傳參形式的语句，避免數據庫注入和特殊符號問題

HTML: 轉碼
    <input type="text" name="item3" value="" />
     value里的內容需轉碼，轉成html顯示格式，如 雙引號 寫成 &quot;

//2010/1/16
java: 日期處理
    加上90天：
    Date date = new Date("2009/12/05");
    date.setTime(date.getTime() + 90*24*60*60*1000);   //出錯，日期變小了
    date.setTime(date.getTime() + 90*24*60*60*1000L);  //正確，要用long類型

    //或者使用 Calendar
    Calendar ctime = Calendar.getInstance();
    ctime.set(2009, 11, 5); //月份要減去1
    ctime.add(Calendar.DAY_OF_MONTH, 90);
    Date date = ctime.getTime();

//2010/1/16 **
js、html: 傳參轉碼問題
    頁面發送請求，當請求內容含有html編碼時，如 &nbsp; 伺服器端用 request.getParameter("name")，會自動轉碼
    編碼問題：當頁面的輸入框輸入如“<br/>”、“&nbsp;”等編碼時，如何傳遞參數
    暫時未解決


//2010/01/19
JSP跳轉方式：
    //位址欄改變。此語句前不允許有out.flush()，否則有異常
    1. response.sendRedirect();
    //此語句前不允許有out.flush()，否則有異常
    2. response.setHeader("Location","");
    //可傳參數，位址欄不變
    3.<jsp:forward page="aplist.jsp" >
        <jsp:param name="apcode" value="<%= apcode %>"/>
      </jsp:forward>

//2010/01/21
不同功能的代碼塊，盡量抽離出來，以便修改和重複利用。
    源自：ftc 98明細的js，儲存時需要檢查，但檢查和儲存是不同的功能，需分離



//2010/01/25
結果為9的算法：
    任意整數，個位乘以9，再加上十位乘以9，最后得到的結果個位和十相加，最終得到9
    利用原理： 3的倍数,各个位数字相加结果同样为3的倍数



//2010/01/27
js: 先 alert 提示，後跳轉頁面
    如：alert('請先登錄'); window.location.href='index.jsp';
    使用jsp的跳轉方式沒法做到，需要用 js 的頁面跳轉

jsp: 絕對避免亂碼問題的方法
    全使用轉碼後的編碼，如：<%= /* 說明 */ "\u8AAA\u660E" %>

SQL: 忽略大小寫的模糊查詢
    將字段轉成大寫或者小寫即可，如： select * from tableA where UPPER(oneColumn) = UPPER('VALUE');
    UPPER()函数也可以用LOWER()函数来替代，在DB2，DB2E中使用的是UCASE() and LCASE()
    但是在DB2或DB2E中，一般只是使用函数来改变字段的大小写，而传进的参数值通常在代码中改写


//2010/01/28
js: 点击<a>标签，欲运行 javascript
    使用 <a href="JavaScript: test();"> .. </a>
    或者 <a onclick="test();"> .. </a>
    如果直接用 <a href="test();"> .. </a> 页面会跳转到 同目录url/test(); 显示出错



//2010/01/29
SQL: 查看 oracle 的表结构
    select * from user_tab_columns WHERE TABLE_name = upper('表名');
    在系统表: all_tables / user_tables 中有所有表的信息
    在系统表: all_tab_columns / user_tab_columns 中有所有表的字段信息


//2010/01/30
jsp: 頁面跳轉
    用 <jsp:forward page="aplist.jsp" > 可傳參，但地址欄不變，更新時出問題
    用 pageContext.forward(); 同上
    用 response.sendRedirect("_test.jsp?name=" + msg); 參數不能是中文或特殊符號
    解決方案： 用 <form method="post" action="url"> 儲存內容，再用 javascript 提交



//2010/2/10
mysql变量的使用：
    设置用户变量的一个途径是执行SET语句：
    SET @var_name = expr [, @var_name = expr] ...
    也可以用语句代替SET来为用户变量分配一个值。在这种情况下，分配符必须为:=而不能用=，因为在非SET语句中=被视为一个比较 操作符，如下所示：
    mysql> SET @t1=0, @t2=0, @t3=0;
    mysql> SELECT @t1:=(@t2:=1)+@t3:=4,@t1,@t2,@t3;
    对于使用select语句为变量赋值的情况，若返回多条记录，则变量的值为最后一条记录的值，不过不建议在这种情况下使用；若返回结果为空，即没有记录，此时变量的值为上一次变量赋值时的值，如果没有对变量赋过值，则为NULL。

    一般我们可以这么使用：
    set @tmp=0
    select @tmp:=tmp from table_test;
    set @tmp=@tmp+1

    系统变量就直接拷贝吧：

//2010/2/10
excel 行列转换：
    方法一：复制所需内容，去到帖上的地方，右键-“选择性粘贴”，勾上下面的“转置”，帖上的内容就是行列转换后的内容
    方法二：在另一个标签页的对应位置上写：“=INDIRECT("Sheet3!" & ADDRESS(COLUMN(), ROW()))”，拖这函数在各个需要的位置即可
    方法二的说明： “"'[oaxx.xlsx]" & "Sheet3!" & ADDRESS(COLUMN(),ROW())” 指定某文件某标签的某单元格。“&”作字符连接
    也可写成： “=INDIRECT(ADDRESS(COLUMN()-1,ROW()-4,,,"Sheet1"))”


//2010/3/3
excel 跟据条件变颜色
    单击单元格,点"格式"->"条件格式",将条件设为:
    "单元格数值"-"小于或等于"-条件的单元格
    点"格式"->"字体"->"颜色",选中你喜欢的颜色
    点“添加”，可多条件

//2010/3/4
mysql 合并：
    使用 union 合并几行资料，当资料有完全相同的时候，只会显示其中一行
    使用 union all 合并，当资料完全相同的时候，也照样全部显示出来

//2010/3/5
ireport 報表:
    使用ireport匯出報表，xls格式，偶尔會出現io异常
    使用ireport匯出報表，csv格式，會出現中文乱码问题，用记事本打开，另存为utf-8格式，再用excel打开就正常了

//2010/3/11
javascript:
    onfocus 和 onblur： 設置焦點和失去焦點
    onfocusout 在新版 IE 上可用，但火狐上不能用

//2010/3/13
ireport:
    loginName:daillo  password:0

//2010/3/17
java:
    將空格轉換成"&nbsp;"後，寫到頁面上，取得頁面提交過來的信息時，空格變問號了
    不轉換空格，則不會出現這問題

//2010/3/17
java:
    ResourceBundle.clearCache();
    ResourceBundle resource = ResourceBundle.getBundle("idbconfig");
    讀取配置文檔時，無法清空緩存。不知道清空緩存的方法

    解決方法：用流的形式讀入屬性文檔
    Properties p = new Properties();
        FileInputStream in = new FileInputStream("src/idbconfig.properties");
        p.load(in);   in.close();
        // 取得對應的屬性值
        value = p.getProperty(propertyName);

//2010-3-31
java中进行二进制，八进制，十六进制，十进制间进行相互转换
    十进制转成十六进制：
    Integer.toHexString(int i)
    十进制转成八进制
    Integer.toOctalString(int i)
    十进制转成二进制
    Integer.toBinaryString(int i)
    十六进制转成十进制
    Integer.valueOf("FFFF",16).toString()
    八进制转成十进制
    Integer.valueOf("876",8).toString()
    二进制转十进制
    Integer.valueOf("0101",2).toString()

//2010/4/1
批处理文件
    如何用 Start 呼叫带空格的文件夹下的程式
	start "程序名" "程序路径 允许空格" 参数列表


//2010/4/10
打嗝：
    先深吸一口气，然后憋住，尽量憋长一些时间，然后呼出，反复进行几次。

//2010/4/18
    早上7点和晚上5~7点空气最清新？
    在上午10点钟和下午3—4点种这段时间，这两个时间段的空气才是最清新的
    植物刚“睡醒”释放氧气最多，地表气温开始升高，令空气上升、净化。
    在早上10点之前，地表气温较低，空气难以跟上空对流，积压着大量尘埃及污染物。而植物也未开始光合作用。

//2010/4/22
SQL模糊查詢中，內容含有百分号
    在 oracle 中，需自定义转义符，如： select * from ap_aplist where apid like '%\%%' escape'\'
    上句，定义“\”为转义符，查找 apid 中含有“%”的资料。escape后面必须是一个字符的字符串
    在 MySQL 和 SQL Server 中如何使用转义符号？

Mysql中的转义字符:
    \0  ASCII 0 (NUL) 字符。           (必须转义)
    \\  ASCII 92 反斜线 (“\”) 字符。 (必须转义)
    \'  ASCII 39 单引号 (“'”) 字符。 (必须转义,除非是由双引号括起来的)
    \"  ASCII 34 双引号 (“"”) 字符。 (必须转义,除非是由单引号括起来的)
    \b  ASCII 8 退格符。
    \n  ASCII 10 换行符。
    \r  ASCII 13 回车符。
    \t  ASCII 9 制表符(TAB)。
    \z  ASCII 26 (Control-Z)。这个字符可以处理在 Windows 系统中 ASCII(26) 代表一个文件的结束的问题。
        (当使用mysql database < filename时 ASCII(26) 可能会引起问题产生。)
    \%  ASCII 37“%”字符。它用于在正文中搜索“%”的文字实例，否则这里“%”将解释为一个通配符。
    \_  ASCII 95“_”字符。它用于在正文中搜索“_”的文字实例，否则这里“_”将解释为一个通配符。

    注意如果在某些正文环境内使用“\%”或“\_”，将返回字符串“\%”和“\_”而不是“%”和“_”。
    模糊查询时,替换 "\" "%" "_" 三个即可

SQL Server 转义字符序列 like escape的使用方法
    []   匹配一个范围；对特殊符号： “%”、“'”、“[”、“[]”、“_”，用 [] 括起来即可
    [^]  排除一个范围；如数字的 [^1-9] 可匹配到0



//2010/4/22
MySQL 中，日期字符串可以直接用大于小于比较
    定义一个长度为10的字符类型的字段(varchar(10))，用于储存日期，插入“2010/04/22”内容，
    查询语句可以直接用 字段名 > "2010/04/22"来查找内容，会自动按位置比较。
    但同一位置的符号必须相同，如果是“2010-04-22”，则会抛出资料库异常。

//2010/4/22
初生的婴儿：
    体重2.9公斤，身高50cm左右。刚出生还会排出水分，体重下降200克~500克，3、4天后体重回复第一天的
    每天大约增长体重25克，一岁时大约10公斤。

//2010/05/14
html: 限制<textarea>的長度:使用js
    <textarea name="Remark" cols="100" rows="10" onkeyup="lengthLimit(this, 127);" onblur="lengthLimit(this, 127);"></textarea>
    <script type="text/javascript" language="javascript">
        /**
         * 長度限制
         * @param field 元件
         * @param length 最大長度
         * @return 無
         */
        function lengthLimit(field, length)
        {
            if ( field.value.length > length )
            {
                field.value = field.value.substr(0,length);
            }
        }
    </script>


//2010/05/15
js, html
    提交前的验证,以下两种写法效果一样
    <form action="#" method="post" onsubmit="return checkForm($('form')[0]);">...</form>
    <input type="Submit" name="save" value="儲存" onclick="return checkForm($('form')[0]);"/>

//2010/05/17
html：
    直接將html頁面變成excel
    參考： ftc:線上查報情形管控報表,  ftc\reflection\98report.jsp
    還可以用記事本查看html源碼呢,相當於只改了後綴名


//2010/05/26
pili 项目:
    修改一个数据溢出的bug，用4小时。耗时太多。
    耗时原因：在页面上用 js 和 jQuery 检查数据溢出问题，但js经常找不到表格的主键
    改进方法：加入js调试代码，或者使用js调试工具，可节省大量找bug的时间
jQuery:
    $("#id") 取得的是 jQuery对象, 而不是页面的 DOM元素, 也就是说,与 document.getElementById("id") 不是同一个对象
    jQuery对象 有时不方便直接使用,比如 <element>.id 和 <element>.value 等,就不能在 jQuery对象 里面取得
    用jQuery.get()或jQuery.get(number)函数可还原成一个实际的 DOM元素,而不是jQuery对象, 就可以使用 <element>.id 和 <element>.value

//2010/05/29
SQL:
    資料庫設計原則:盡量不要有重複的資料, 否則,一旦有資料修改,需要更新很多
    如:貨品名稱,其他表格只需要儲存貨品表的主鍵,名稱就依靠主鍵去查找。這樣,一旦貨品名稱需要修改,其他地方不需要改動
    需要計算出來的欄位,同樣不要有冗餘, 否則,一旦修改就得所有地方都需要重新計算並儲存;而一旦程序員忘記了某個欄位是有關聯的,那就改死人了;實在有必要,可以建立 view 視圖
    如:貨品的庫存,在倉庫表有各個倉庫的庫存數,那在貨品表就不應該有“總庫存”欄位,否則一旦庫存需要修改,就必須得兩個都改,一旦有疏忽就問題大了


//2010/05/29
asp.net:
    修改一个方法时，先在其后面加上一个参数，编译一下，看有多少个地方调用；
    先清楚修改后的影响，再作修改

//2010/05/29
js:
    <script type="text/javascript" language="javascript" src="menujs.aspx"></script>
    js的引用可以使用动态生成的页面，只要页面生成的内容是js程序即可
    不管引用的内容是静态还是动态的，对客户端来说，都只是一个静态文件

//2010/06/05
MySQL
    MySQL 在任何地方的“\”都有转义作用,在 Update,insert,delete 和 select的“=”时，都需要用“\\”表示一个“\”
    而 select的“like”时,则需要用“\\\\”表示一个“\”


//2010/06/09
JavaScript
    公用的js要尽量减少关键字的占用,因为太容易发生冲突了
    一个公用的js文件,它的所有变量和函数,最好放进一个类里面,只占用一两个关键字即可

//2010/06/10
css:
    #content_area .pagetitle {}
    <div id="content_area"><span class="pagetitle" >test</span></div>
    上面的css定义，是否会对span生效？
    与 #content_area.pagetitle {} 是不一样的，中间有空格时包含选择，没空格是类选择

//2010/06/10
css
    尽量的用div排版,而不用table;这样更加容易控制样式
    有任何相同的样式都要抽离出来，放到公用的样式表,方便修改，也方便切换

//2010/06/15
SQL
    如果是另一張表的外鍵(如id),必須建立外鍵關聯;否則,外鍵那邊的刪改,這邊豪不知情
    数据库表之间有关联的,必须在资料库层做好关联,以防出错

//2010/06/26
生活
    在意料中該嚴肅或者平淡的事情上,一件突然的、反常的事發生,將會很搞笑;也稱“無厘頭”

//2010/07/07
SQL
    MysqlDump 汇出来的资料,最后面的部分会引起错误，如：
    /*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

//2010/07/28
modify

//2010/07/28
js:
    firefox 的 click() 事件,由于 firefox 不支持 click() 事件,代替方式：

    var comment = document.getElementsByTagName('a')[0];
     // For IE
    if (document.all) {
     comment.click();
     //FOR DOM2
    } else if (document.createEvent) {
     var ev = document.createEvent('MouseEvents');
     ev.initEvent('click', false, true);
     comment.dispatchEvent(ev);
    }

//2010/07/30
工作
    终于明白,这公司为什么留不住人。因为它不想留人,它需要的只是几个新手,老员工能做的,新手差不多也能做
    它只需要一两个老员工,规模也不想扩大,足以。


//2010/08/07
jsp,html 清空缓存
    1.禁止客户端缓存要在<head>中加入类似如下内容：
    <META HTTP-EQUIV="pragma" CONTENT="no-cache"/>
    <META HTTP-EQUIV="Cache-Control" CONTENT="no-cache, must-revalidate"/>
    <!-- 以下的 content 是设置网页到期时间,一旦过期则必须到服务器上重新调用。注意的是必须使用GMT时间格式
     另外,content="正整数"设置到期的秒数;  若是 content="-1":网页在任何时候都不能被Cache存储 -->
    <META HTTP-EQUIV="expires" CONTENT="Wed, 26 Feb 1997 08:21:57 GMT"/>


    2.在服务器的动态网页中禁止缓存，要加入类似如下脚本
    (1)asp(好久不用了):
    <%
    Response.Expires = -1
    Response.ExpiresAbsolute = Now() - 1
    Response.cachecontrol = "no-cache"
    %>

    (2)jsp(我目前经常用的):
    response.setHeader("Pragma","No-cache");
    response.setHeader("Cache-Control","no-cache");
    response.setDateHeader("Expires", 0);

//2010/08/10
excel if超过7重限制
    例: 假如 A1＝1，则 B1＝A；A1＝2，则 B1＝B …… A1＝26，则 B1＝Z
    1.用多个单元格
      B1 = IF(A1=1,"A",IF(A1=2,"B",IF(A1=3,"C",IF(A1=4,"D",IF(A1=5,"E",IF(A1=6,"F",IF(A1=7,"G",IF(A1=8,"H",C1))))))))
      C1 = IF(A1=9,"I",IF(A1=10,"J",IF(A1=11,"K",IF(A1=12,"L",IF(A1=13,"M",IF(A1=14,"N",IF(A1=15,"O",IF(A1=16,"P",D1))))))))
      D1 = IF(A1=17,"Q",IF(A1=18,"R",IF(A1=19,"S",IF(A1=20,"T",IF(A1=21,"U",IF(A1=22,"V",IF(A1=23,"W",IF(A1=24,"X",E1))))))))
      E1 = IF(A1=25,"Y",IF(A1=26,"Z","超出范围"))
      根据情况，可以将 C、D、E 这些从事辅助运算的单元格放在其它任何地方
    2.一个单元格也可以实现,(数组形式输入)。
      =IF(A1=1,"A",IF(A1=2,"B",IF(A1=3,"C",IF(A1=4,"D",IF(A1=5,"E",IF(A1=6,"F",IF(A1=7,"G",IF(A1=8,"H",""))))))))
      &IF(A1=9,"I",IF(A1=10,"J",IF(A1=11,"K",IF(A1=12,"L",IF(A1=13,"M",IF(A1=14,"N",IF(A1=15,"O",IF(A1=16,"P",""))))))))
      &IF(A1=17,"Q",IF(A1=18,"R",IF(A1=19,"S",IF(A1=20,"T",IF(A1=21,"U",IF(A1=22,"V",IF(A1=23,"W",IF(A1=24,"X",""))))))))
      &IF(A1=25,"Y",IF(A1=26,"Z",""))
      注: “&”为文本连接符，可以把&两边的文本连接起来。用 CONCATENATE("文本1","文本2","文本3") 也可以。


//2010/08/12
javascript form 表单的获取
    在 form 表单中的 <input type="button" /> 对象中,可以使用“this.form”来获取所在的表单
    但是 <span>,<div>,<a>... 等等的对象却无法获取所在的 form, 怎么办呢?
    解决方法: 在 form 里面添加一个隐藏域, 或者随便找到他的一个可以获取 form 对象的对象,即可根据此对象获取
    如: document.getElementById("input_hidden1").form 即可获取此对象的 form
    含有 form 的对象: BUTTON, FIELDSET, INPUT type=button, INPUT type=checkbox, INPUT type=file, INPUT type=hidden,
         INPUT type=image, INPUT type=password, INPUT type=radio, INPUT type=reset, INPUT type=submit,
         INPUT type=text, ISINDEX, LABEL, LEGEND, OBJECT, OPTION, SELECT, TEXTAREA
    除上面的之外,都无法使用“this.form”

    外记: 遇到此问题,是分页导航条的“input type=button”改成“span”之后无法使用“this.form.submit()”,
    只好改成“document.getElementById("page_no").form.submit()”,此对象是在form里面的
    还有, 可以获取 form 对象的对象里面,可以直接使用“submit()”,相当于“this.form.submit()”
    而不可以获取 form 对象的对象里面,直接使用“submit()”在 IE 可以提交,而 firefox 不可以


//2010/08/26
思考
    更新一千多筆的貨品資料,以前是手動一個個找,今天有個助手幫忙寫SQL,我就可以停下來思考了;
    但是我還是速度比她快,而且準確率更高,用記事本替換一下就組成SQL了，比手寫快得多(寫上千行啊 =_=!!)
    其實之前也是可以這樣的,只是之前沒有想過; 原來讓自己停一下,思維會更好


//2010/08/26
js: ie上的关闭窗口時不提示
	//关闭IE6不提示
	window.opener=null;
	//关闭IE7不提示
        window.open("","_self");
	//关闭窗口
        window.close();


//2010/08/30
数据库设计
	表之间的关联，不应该使用与业务相关的字段;建议使用自动增长的自然主键(oid),而这个不能与业务相关

//2010/08/31
	建立外鍵,不一定要引用主鍵,但要求所引用的字段有唯一性約束
	-- 建立唯一鍵
	ALTER TABLE ev_warehouse Modify id varchar(10) NOT NULL unique;
	-- 建立外鍵關聯
	ALTER TABLE ev_inventory add FOREIGN KEY(wid) REFERENCES ev_warehouse(id) on delete cascade on update cascade;
	-- 建立外键关联时,子表允许外键字段为 null(即使主表对应的字段没有null)

//2010/09/17
	方法的多重调用时,想一下子跳出来,return不够快捷,需要多次判断
	可以使用抛出异常的形式,中途不捕获而在外层捕获即可

//2010/09/27
数据库设计
	被外键关联的表,建议不能直接删除记录,而使用一个状态字段来标识是否已删除;防止级联删除其它的表
	而外键关联时,不建议使用 on delete cascade,因为没法保证被级联删除的影响有多大,建议改用 on delete set null


//2010/10/14
javascript
	parseInt() 函数的问题,parseInt("09")传回0;因为"09"被认为是8进制,而"08"及以下则正常
	需要使用 parseInt("09",10) 传回9,显性使用10进制

//2010/10/14
MySQL
	同一個表沒法在update的select子查詢裡面使用,如下会出错
	update ev_product as a set a.pic=(select max(b.pic) from ev_product b
	  where left(b.id,8)=left(a.id,8) and right(b.id,5)=right(a.id,5)
	  and b.pic !='' and b.pic is not null
	)where a.pic='';

	解决办法,建立临时表
	-- 建立臨時表,因為同一個表沒法在update的select子查詢裡面使用
	CREATE TABLE ev_product_t  AS  SELECT *  FROM ev_product;

	-- 更新
	update ev_product as a set a.pic=(select max(b.pic) from ev_product_t b
	  where left(b.id,8)=left(a.id,8) and right(b.id,5)=right(a.id,5)
	  and b.pic !='' and b.pic is not null
	)
	where a.pic='';

	-- 刪除臨時表
	drop table ev_product_t;

//2010/10/21
excel
	单元格的行高：0-409
	单元格字符数：可存储32767个字符，但在单元格里只能显示1024个字符，编辑栏可显示全部字符。
	1个单元格可输入的字符长度不能超过32767！(中文也只算一個) 1个单元格可输入的公式长度不能超过256！


//2010/10/27
js
	返回上一页，并刷新
	window.history.back();window.history.go(0);
	这里还没法做到,返回上一页,并执行上一页的js; 如:返回并在上一页查询一次,以反映出内容的更新

//2010/10/28
資料庫
	多對多關聯
	比如說,有個專輯表,對應一個出版形式表; 一個專輯可以有多種出版形式,一種出版形式也對應多個專輯
	為了提高效率,可在專輯表儲存出版形式的名稱,多個出版形式就用加號拼接起來; 修改時再改這名稱欄位
	查詢時不需3表關聯,只查一個表,效率倍增

//2010/11/06
javaScript
	頁面加載時執行的匿名js;用括號把匿名方法括起來,後面再加上一個括號來執行一下; 一次性執行,不佔用一個js關鍵字
	(function(){...程式...})();

//2010/12/06
excel
	excel統計符合條件的數量
	歌單裡面計算歌曲序號的公式: =SUMPRODUCT(($C$2:C2=C2)*1)

//2011/01/14
js
	用window.open()打开子窗口传参问题
	http://duqiangcise.javaeye.com/blog/290665
	http://www.7880.com/info/Article-2f4d60.html


//2011-07-23
python
    如果导入上一级目录的文件
    解决方法一： import sys;sys.path.append("../")
    解决方法二(上面方法有时候会出现路径问题)：
        import sys,os
        sys.path.append(os.path.realpath(os.path.dirname(os.path.realpath(__file__)) + '/../..'))
    可有更好的方式，在上级目录添加一个“__ini__.py”的文件就可以？
    解决方法三：在linux下,可以创建一个其它目录的软链接(为了代码的可移植性,最好是用相对目录),此软链接的目录跟真实的目录有相同效果
        在windows下的快捷方式没有此效果，故系统兼容性不行。

//2011/9/8
javascript
    form 对象，对他遍历的时候，会遍历它里面的所有可提交的对象,如 input,select 等
    for(var i=0; i<document.forms[0].length; i++)...


//2011-09-17
vss 代码管理
    签出文件，是以独占形式的，会让别人无法修改。若只希望本地修改，而不用提交，又不影响别人，像测试文件。
    可以直接把文件的“只读”属性删除掉，文件就可以编辑了，而且不会产生签出效果。但下载更新时会提示。

//2011/11/19
代码编辑
    需要编辑多个文件，且他们都很类似时，最好全部同时打开，一起编辑，以提高效率。
    因为编辑的时候，他们只是每个都有很少的差异，同时打开可以复制得更快，且检查每个差异的时候，可以切换得更快，把一个个的差异点逐个检查。

